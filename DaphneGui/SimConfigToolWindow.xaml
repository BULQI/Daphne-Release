<docking:ToolWindow x:Class="DaphneGui.ProtocolToolWindow"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:local="clr-namespace:DaphneGui"
                    xmlns:daph="clr-namespace:Daphne;assembly=Daphne"                    
                    xmlns:shared="http://schemas.actiprosoftware.com/winfx/xaml/shared"
                    xmlns:editors="http://schemas.actiprosoftware.com/winfx/xaml/editors"
                    xmlns:docking="http://schemas.actiprosoftware.com/winfx/xaml/docking"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"                    
                    xmlns:uc="clr-namespace:DaphneUserControlLib;assembly=DaphneUserControlLib"
                    ImageSource="Images/Properties16.png"
                    x:Name="MyToolWindow"
                    >
    
    <!-- These comments are here as a Navigation Aid -->
    <!-- To find component library genes, search for                "GenesExpander" or "LIBRARY GENES"         -->
    <!-- To find component library molecules, search for            "MoleculesExpander" or "LIBRARY MOLECULES"             -->
    <!-- To find component library reactions, search for            "ReactionsExpander" or "LIBRARY REACTIONS"             -->
    <!-- To find component library reaction complexes, search for   "ReacComplexExpander" or "LIBRARY REACTION COMPLEXES"    -->
    <!-- To find component library cells, search for                "tabCells" or "LIBRARY CELLS"                 -->
    <!-- To find simulation setup tab, search for                   "" or "SIM SETUP"                     -->
    <!-- To find ECM tab, search for                                "" or "EXTRACELLULAR MEDIUM"          -->
    <!-- To find cell populations tab, search for                   "tabCellPop" or "LIBRARY CELL POPULATIONS"      -->
    <!-- To find Reports tab, search for                            "" or "REPORTS"                       -->
    <!-- To find cell death expander, search for                    "" or "Cell Death"                    -->
    <!-- To find cell division expander, search for                 "" or "Cell Division"                 -->
    <!-- To find cell differentiation scheme expander, search for   "" or "DIFFERENTIATION SCHEME"        -->
    <!-- To find cell reactions gui, search for                     "CellReacExpander" or "Reactions in this cell and their location" -->
    <!-- To find cell reactions in membrane gui, search for         "Reactions in cell Membrane"    -->
    <!-- To find cell reactions in cytosol gui, search for          "Reactions in cell Cytosol"     -->
    <!-- To find cell membrane molecules, search for                "CellMembraneMolPopsListBox" or "Cell Membrane Mol Pops" -->
    <!-- To find cell cytosol molecules, search for                 "CellMembraneMolPopsListBox" or "Cell Cytosol Mol Pops -->
    
    <docking:ToolWindow.Resources>
        <CollectionViewSource x:Key="newBulkMoleculesListView"  Source="{Binding Path=entity_repository.molecules}" />
        <CollectionViewSource x:Key="newBoundaryMoleculesListView"  
                                  Source="{Binding Path=entity_repository.molecules}"
                                  Filter="boundaryMoleculesListView_Filter"
                                  />
        <Style TargetType="ComboBox">
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="ComboBoxItem">
                        <Setter Property="HorizontalContentAlignment" Value="Left" />
                        <Setter Property="VerticalContentAlignment" Value="Center" />
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>
    </docking:ToolWindow.Resources>


    <TabControl  x:Name="ConfigTabControl" Grid.Column="0" TabStripPlacement="Top" SelectionChanged="ConfigTabControl_SelectionChanged" AutomationProperties.AutomationId="DaphneTabsControl">
        <TabControl.Resources >
            <!-- For changing color of alternating rows of ListBox -->
            <Style  TargetType="{x:Type ListBoxItem}">
                <Style.Triggers>
                    <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                        <Setter Property="Background" Value="White"></Setter>
                    </Trigger>
                    <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                        <Setter Property="Background" Value="Beige"></Setter>
                        <Setter Property="BorderBrush" Value="Black" />
                        <Setter Property="BorderThickness" Value="1" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!--<daph:MolPopDistributionTypeToStringConverter x:Key="MolPopDistTypeEnumConv" /> -->
            <daph:CellPopDistributionTypeToStringConverter x:Key="CellPopDistTypeEnumConv" />
            
            <!-- <daph:ManyToBooleanConverter x:Key="ManyConv" />
            <daph:TextToColorConverter x:Key="textToColorConv" />
            <daph:MolGUIDtoMolNameConverter x:Key="MolGUIDtoMolNameConv" />
            <daph:MolPopGUIDtoMolPopNameConverter x:Key="MolPopGUIDtoMolPopNameConv" />
            
            <daph:CellGUIDtoCellNameConverter x:Key="CellGUIDtoCellNameConv" />-->
            <!--<daph:ReactionGUIDtoReactionStringConverter x:Key="ReacGUIDtoReacStringConv" />-->
            <!--<daph:MoleculeLocationToBoolConverter x:Key="MolPopLocationBoolConv" />-->

            <daph:SWMColorToSolidBrushConverter x:Key="colorToSolidBrushConv" />
            <daph:ReactionComplexGUIDtoReactionComplexStringConverter x:Key="ReacComplexGUIDtoStringConv" />
            <daph:BoundaryFaceToVisStringConverter x:Key="BoundaryFaceVisConv" />
            <daph:CellGuidToCellMembMolPopsConverter x:Key="CellGuidToCellMembMolPopsConv" />
            <daph:CellGuidToCellCytoMolPopsConverter x:Key="CellGuidToCellCytoMolPopsConv" />
            <daph:ReacComplexGUIDtoReactionComplexConverter x:Key="ReacComplexGUIDtoReactionComplexConv" />
            <daph:ColorListToStringConverter x:Key="ColorListToStringConv" />
            <daph:ColorListToIntConverter x:Key="ColorListToIntConv" />
            <daph:ColorListToColorConverter x:Key="ColorListToColorConv" />
            <daph:ColorListToBrushConverter x:Key="ColorListToBrushConv" />
            <daph:BoolToIndexConverter x:Key="BoolToIndexConv" />
            <daph:GeneGUIDtoNameConverter x:Key="GeneGUIDtoNameConv" />
            <daph:GeneGUIDtoConfigGeneConverter x:Key="GeneGUIDtoConfigGeneConv" />
            <!--<daph:DiffSchemeToDiffNameConverter x:Key="DiffSchemeToDiffNameConv" />-->
            <daph:DiffSchemeToBoolConverter x:Key="DiffSchemeToBoolConv" />
            <daph:DivDeathDriverToBoolConverter x:Key="DivDeathDriverToBoolConv" />

            <ObjectDataProvider x:Key="regionShapesEnum"
                            MethodName="GetValues" 
                            ObjectType="{x:Type sys:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="daph:RegionShape" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>

            <ObjectDataProvider x:Key="relativePosition"
                    MethodName="GetValues" 
                    ObjectType="{x:Type sys:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="daph:RelativePosition" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>

            <ObjectDataProvider x:Key="molpopDistributionTypes"
                    MethodName="GetValues" 
                    ObjectType="{x:Type sys:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="daph:MolPopDistributionType" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>

            <ObjectDataProvider x:Key="cellPopDistributionTypes"
                    MethodName="GetValues" 
                    ObjectType="{x:Type sys:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="daph:CellPopDistributionType" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>

            <ObjectDataProvider x:Key="colorList"
                    MethodName="GetValues" 
                    ObjectType="{x:Type sys:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="daph:ColorList" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>

            <ObjectDataProvider x:Key="boundaryTypes"
                    MethodName="GetValues" 
                    ObjectType="{x:Type sys:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="daph:BoundaryType" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>

            <ObjectDataProvider x:Key="boundaryFaces"
                    MethodName="GetValues" 
                    ObjectType="{x:Type sys:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="daph:BoundaryFace" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>

            <CollectionViewSource x:Key="cellsetRegionsListView"  
                                  Source="{Binding Path=scenario.regions}"/>

            <CollectionViewSource x:Key="boxSpecsListView"  
                                  Source="{Binding Path=scenario.box_specifications}"/>

            <CollectionViewSource x:Key="ggBoxSpecsListView"  
                                  Source="{Binding Path=scenario.box_specifications}"/>

            <CollectionViewSource x:Key="molpopGaussianSpecsListView"  
                                  Source="{Binding Path=scenario.gaussian_specifications}"/>

            <!--<CollectionViewSource x:Key="solfacSolfacTypesListView"  
                                  Source="{Binding Path=entity_repository.solfac_types}"/>-->

            <CollectionViewSource x:Key="cellTypesListView"  
                                  Source="{Binding Path=entity_repository.cells}"
                                  />
            <CollectionViewSource x:Key="moleculesListView"  
                                  Source="{Binding Path=entity_repository.molecules}"/>
            <CollectionViewSource x:Key="moleculesListView2"  
                                  Source="{Binding Path=entity_repository.molecules}"/>
            <CollectionViewSource x:Key="molPopsListView"  
                                  Source="{Binding Path=scenario.environment.ecs.molpops}"
                                  />
            <CollectionViewSource x:Key="ecmMoleculesListView"  
                                  Source="{Binding Path=entity_repository.molecules}"/>
            <CollectionViewSource x:Key="bulkMoleculesListView"  
                                  Source="{Binding Path=entity_repository.molecules}"
                                  
                                  />
            <CollectionViewSource x:Name="cvsBoundaryMolListView" x:Key="boundaryMoleculesListView"  
                                  Source="{Binding Path=entity_repository.molecules}"
                                  Filter="boundaryMoleculesListView_Filter"
                                  />
            <CollectionViewSource x:Key="cytoGenesListView"  
                                  Source="{Binding Path=entity_repository.genes}"/>

            <!--<CollectionViewSource x:Key="diffSchemesListView"  
                                  Source="{Binding Path=entity_repository.diff_schemes}"/>-->
            
            <!--<CollectionViewSource x:Key="ecmReactionsListView"  
                                  Source="{Binding Path=entity_repository.reactions}"
                                  />-->
            <CollectionViewSource x:Key="ecmReactionComplexesListView"  
                                  Source="{Binding Path=entity_repository.reaction_complexes}"
                                  />           
            <!--<CollectionViewSource x:Key="membraneMolPopsListView"  
                                  Source="{Binding Path=entity_repository.molecules}"
                                  Filter="membraneMolPopsCollectionViewSource_Filter"/>
            <CollectionViewSource x:Key="cytosolMolPopsListView"  
                                  Source="{Binding Path=entity_repository.molecules}"
                                  Filter="cytosolMoleculesCollectionViewSource_Filter" />-->
            
            <!--<CollectionViewSource x:Key="cytosolAvailableReactionsListView"  
                                  Source="{Binding Path=entity_repository.reactions}"
                                  Filter="cytosolAvailableReactionsListView_Filter"/>

            <CollectionViewSource x:Key="membraneAvailableReactionsListView"  
                                  Source="{Binding Path=entity_repository.reactions}"
                                  Filter="membraneAvailableReactionsListView_Filter"/>-->

            <CollectionViewSource x:Name="ecmAvailableReacs" x:Key="ecmAvailableReactionsListView"  
                                  Source="{Binding Path=entity_repository.reactions}"
                                  Filter="ecmAvailableReactionsListView_Filter"                                   
                                  />
            
            <CollectionViewSource x:Key="baseCellTypesListView"  
                                  Source="{Binding Path=entity_repository.CellBaseTypeLabel}"/>

            <!--<CollectionViewSource x:Key="transitionDriversListView"  
                                  Source="{Binding Path=entity_repository.transition_drivers}"/>-->

            <!--<CollectionViewSource x:Key="cellTransitionDeathDriverListView"  
                                  Source="{Binding Path=entity_repository.transition_drivers}"
                                  Filter="selectedCellTransitionDeathDriverListView_Filter"/>

            <CollectionViewSource x:Key="cellTransitionDivisionDriverListView"  
                                  Source="{Binding Path=entity_repository.transition_drivers}"
                                  Filter="selectedCellTransitionDivisionDriverListView_Filter"/>-->



            <!-- Style for visibility checkboxes in list views -->
            <Style x:Key="EyeballCheckboxStyle" TargetType="CheckBox">
                <Setter Property="SnapsToDevicePixels" Value="true"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <Grid Width="13" Height="13">
                                <Image x:Name="_image" Source="Images/cartoonEyeClosed.png" Opacity="0.6"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="_image" Property="Source" Value="Images/cartoonEyeOpen.png"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="_image" Property="Opacity" Value="0.2" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
           
            <sys:Int32 x:Key="ToolTipInitialShowDelay">100</sys:Int32>
            <Style TargetType="TextBlock">
                <Setter Property="ToolTipService.InitialShowDelay" Value="{StaticResource ToolTipInitialShowDelay}"/>
            </Style>
            <Style x:Key="ExpanderHeaderFocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Border>
                                <Rectangle SnapsToDevicePixels="true"
                           Margin="0"
                           Stroke="Black"
                           StrokeDashArray="1 2"
                           StrokeThickness="1" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ExpanderDownHeaderStyle"
       TargetType="{x:Type ToggleButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Padding="{TemplateBinding Padding}">
                                <Grid SnapsToDevicePixels="False"
                          Background="Transparent">
                                    <ContentPresenter SnapsToDevicePixels="True"
                                          HorizontalAlignment="Left"
                                          VerticalAlignment="Center"
                                          RecognizesAccessKey="True" />
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ExpanderRightHeaderStyle"
       TargetType="{x:Type ToggleButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Padding="{TemplateBinding Padding}">
                                <Grid SnapsToDevicePixels="False"
                          Background="Transparent">
                                    <ContentPresenter SnapsToDevicePixels="True"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Top"
                                          RecognizesAccessKey="True" />
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ExpanderUpHeaderStyle"
       TargetType="{x:Type ToggleButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Padding="{TemplateBinding Padding}">
                                <Grid SnapsToDevicePixels="False"
                          Background="Transparent">
                                    <ContentPresenter SnapsToDevicePixels="True"
                                          HorizontalAlignment="Left"
                                          VerticalAlignment="Center"
                                          RecognizesAccessKey="True" />
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ExpanderLeftHeaderStyle"
       TargetType="{x:Type ToggleButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Padding="{TemplateBinding Padding}">
                                <Grid SnapsToDevicePixels="False"
                          Background="Transparent">
                                    <ContentPresenter SnapsToDevicePixels="True"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Top"
                                          RecognizesAccessKey="True" />
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ArrowlessExpanderTemplate"
       TargetType="{x:Type Expander}">
                <Setter Property="Foreground"
            Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                <Setter Property="Background"
            Value="Transparent" />
                <Setter Property="HorizontalContentAlignment"
            Value="Stretch" />
                <Setter Property="VerticalContentAlignment"
            Value="Stretch" />
                <Setter Property="BorderBrush"
            Value="Transparent" />
                <Setter Property="BorderThickness"
            Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Expander}">
                            <Border SnapsToDevicePixels="true"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="3">
                                <DockPanel>
                                    <ToggleButton FontFamily="{TemplateBinding FontFamily}"
                                      FontSize="{TemplateBinding FontSize}"
                                      FontStretch="{TemplateBinding FontStretch}"
                                      FontStyle="{TemplateBinding FontStyle}"
                                      FontWeight="{TemplateBinding FontWeight}"
                                      Foreground="{TemplateBinding Foreground}"
                                      HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Padding="{TemplateBinding Padding}"
                                      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                      FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}"
                                      Margin="1"
                                      MinHeight="0"
                                      MinWidth="0"
                                      x:Name="HeaderSite"
                                      Style="{StaticResource ExpanderDownHeaderStyle}"
                                      Content="{TemplateBinding Header}"
                                      ContentTemplate="{TemplateBinding HeaderTemplate}"
                                      ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                      DockPanel.Dock="Top"
                                      IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <ContentPresenter Focusable="false"
                                          Visibility="Collapsed"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          x:Name="ExpandSite"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          DockPanel.Dock="Bottom" />
                                </DockPanel>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsExpanded"
                             Value="true">
                                    <Setter Property="Visibility"
                                TargetName="ExpandSite"
                                Value="Visible" />
                                </Trigger>
                                <Trigger Property="ExpandDirection"
                             Value="Right">
                                    <Setter Property="DockPanel.Dock"
                                TargetName="ExpandSite"
                                Value="Right" />
                                    <Setter Property="DockPanel.Dock"
                                TargetName="HeaderSite"
                                Value="Left" />
                                    <Setter Property="Style"
                                TargetName="HeaderSite"
                                Value="{StaticResource ExpanderRightHeaderStyle}" />
                                </Trigger>
                                <Trigger Property="ExpandDirection"
                             Value="Up">
                                    <Setter Property="DockPanel.Dock"
                                TargetName="ExpandSite"
                                Value="Top" />
                                    <Setter Property="DockPanel.Dock"
                                TargetName="HeaderSite"
                                Value="Bottom" />
                                    <Setter Property="Style"
                                TargetName="HeaderSite"
                                Value="{StaticResource ExpanderUpHeaderStyle}" />
                                </Trigger>
                                <Trigger Property="ExpandDirection"
                             Value="Left">
                                    <Setter Property="DockPanel.Dock"
                                TargetName="ExpandSite"
                                Value="Left" />
                                    <Setter Property="DockPanel.Dock"
                                TargetName="HeaderSite"
                                Value="Right" />
                                    <Setter Property="Style"
                                TargetName="HeaderSite"
                                Value="{StaticResource ExpanderLeftHeaderStyle}" />
                                </Trigger>
                                <Trigger Property="IsEnabled"
                             Value="false">
                                    <Setter Property="Foreground"
                                Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <!-- =========================== -->
            
            <!-- Differentiator -->
            
            
            <DataTemplate x:Key="diffSchemeListItemTemplate">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding Path=Name}" />
                </StackPanel>
            </DataTemplate>

            <DataTemplate x:Key="diffCellEditingTemplate">
                <ComboBox x:Name="comboDiffCellEditing">
                    
                </ComboBox>
            </DataTemplate>
            <DataTemplate x:Key="diffCellTemplate">
                <ComboBox x:Name="comboDiffCell">
                    
                </ComboBox>  
            </DataTemplate>

            <!-- Box Specification -->
            <DataTemplate x:Key="boxSpecDetailsTemplate">
                <Grid Margin="0,6">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="15" />
                        <ColumnDefinition Width="60" />
                        <ColumnDefinition Width="50" />
                        <ColumnDefinition Width="60" />
                        <ColumnDefinition Width="50" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid Grid.Column="0" Grid.Row="0"
                          VerticalAlignment="Center">
                        <Rectangle Fill="White"
                                   Stroke="Black"
                                   StrokeThickness="0.5"
                                   Width="15"
                                   Height="15"
                                   />
                        <CheckBox x:Name="box_widget_on_checkbox"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                    Style="{StaticResource EyeballCheckboxStyle}"
                                    IsChecked="{Binding Path=box_visibility}"
                                    />
                    </Grid>
                    <TextBlock Text="center (µm)" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="0" Margin="5,4" HorizontalAlignment="Right"/>
                    <TextBlock Text="size (µm)" Grid.Column="3" Grid.ColumnSpan="2" Grid.Row="0" Margin="3,4" HorizontalAlignment="Right"/>
                    <!--<Line Margin="4,0,4,3" 
                          Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1" 
                          SnapsToDevicePixels="True" Stroke="LightGray"
                          Stretch="Fill" X1="0" X2="10" />
                    <Line Margin="4,0,4,3" 
                          Grid.Column="3" Grid.ColumnSpan="2" Grid.Row="1" 
                          SnapsToDevicePixels="True" Stroke="LightGray"
                          Stretch="Fill" X1="0" X2="10" />-->
                    <TextBlock Text="X" Grid.Column="0" Grid.Row="2" Margin="2,0" TextAlignment="Right"/>
                    <Slider x:Name="x_trans_slider"
                            Grid.Column="1" Grid.Row="2"
                            Orientation="Horizontal"
                            Width="60"
                            RenderTransform="1.0,0,0,0.5,0,4"
                            Minimum="{Binding Path=x_trans_min}" 
                            Maximum="{Binding Path=x_trans_max}"
                            Value="{Binding Path=x_trans}" 
                            KeyboardNavigation.IsTabStop="False"
                            />
                    <editors:DoubleEditBox Grid.Column="2" Grid.Row="2"
                                        CheckBoxVisibility="Collapsed" 
                                        SpinnerVisibility="Collapsed"
                                        HorizontalAlignment="Left"
                                        Format="G"
                                        StepValue="10"
                                        Width="50" 
                                        CenterSlotHorizontalAlignment="Right"
                                        Value="{Binding ElementName=x_trans_slider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                        />
                    <Slider x:Name="x_scale_slider"
                            Grid.Column="3" Grid.Row="2"
                            Orientation="Horizontal"
                            Width="60"
                            RenderTransform="1.0,0,0,0.5,0,4"
                            Minimum="{Binding Path=x_scale_min}" 
                            Maximum="{Binding Path=x_scale_max}"
                            Value="{Binding Path=x_scale}" 
                            KeyboardNavigation.IsTabStop="False"
                            />
                    <editors:DoubleEditBox Grid.Column="4" Grid.Row="2"
                                        CheckBoxVisibility="Collapsed" 
                                        SpinnerVisibility="Collapsed"
                                        HorizontalAlignment="Left"
                                        Format="G"
                                        StepValue="10"
                                        Minimum="1"
                                        Width="50" 
                                        CenterSlotHorizontalAlignment="Right"
                                        Value="{Binding ElementName=x_scale_slider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                        />
                    <TextBlock Text="Y" Grid.Column="0" Grid.Row="3" Margin="2,0" TextAlignment="Right" />
                    <Slider x:Name="y_trans_slider"
                            Grid.Column="1" Grid.Row="3"
                            Orientation="Horizontal"
                            Width="60"
                            RenderTransform="1.0,0,0,0.5,0,4"
                            Minimum="{Binding Path=y_trans_min}" 
                            Maximum="{Binding Path=y_trans_max}"
                            Value="{Binding Path=y_trans}" 
                            KeyboardNavigation.IsTabStop="False"
                            />
                    <editors:DoubleEditBox Grid.Column="2" Grid.Row="3"
                                        CheckBoxVisibility="Collapsed" 
                                        SpinnerVisibility="Collapsed"
                                        HorizontalAlignment="Left"
                                        Format="G"
                                        StepValue="10"
                                        Width="50" 
                                        CenterSlotHorizontalAlignment="Right"
                                        Value="{Binding ElementName=y_trans_slider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                        />
                    <Slider x:Name="y_scale_slider"
                            Grid.Column="3" Grid.Row="3"
                            Orientation="Horizontal"
                            Width="60"
                            RenderTransform="1.0,0,0,0.5,0,4"
                            Minimum="{Binding Path=y_scale_min}" 
                            Maximum="{Binding Path=y_scale_max}"
                            Value="{Binding Path=y_scale}" 
                            KeyboardNavigation.IsTabStop="False"
                            />
                    <editors:DoubleEditBox Grid.Column="4" Grid.Row="3"
                                        CheckBoxVisibility="Collapsed" 
                                        SpinnerVisibility="Collapsed"
                                        HorizontalAlignment="Left"
                                        Format="G"
                                        StepValue="10"
                                        Minimum="1"
                                        Width="50" 
                                        CenterSlotHorizontalAlignment="Right"
                                        Value="{Binding ElementName=y_scale_slider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                        />
                    <TextBlock Text="Z" Grid.Column="0" Grid.Row="4" Margin="2,0" TextAlignment="Right" />
                    <Slider x:Name="z_trans_slider"
                            Grid.Column="1" Grid.Row="4"
                            Orientation="Horizontal"
                            Width="60"
                            RenderTransform="1.0,0,0,0.5,0,4"
                            Minimum="{Binding Path=z_trans_min}" 
                            Maximum="{Binding Path=z_trans_max}"
                            Value="{Binding Path=z_trans}" 
                            KeyboardNavigation.IsTabStop="False"
                            />
                    <editors:DoubleEditBox Grid.Column="2" Grid.Row="4"
                                        CheckBoxVisibility="Collapsed" 
                                        SpinnerVisibility="Collapsed"
                                        HorizontalAlignment="Left"
                                        Format="G"
                                        StepValue="10"
                                        Width="50" 
                                        CenterSlotHorizontalAlignment="Right"
                                        Value="{Binding ElementName=z_trans_slider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                        />
                    <Slider x:Name="z_scale_slider"
                            Grid.Column="3" Grid.Row="4"
                            Orientation="Horizontal"
                            Width="60"
                            RenderTransform="1.0,0,0,0.5,0,4"
                            Minimum="{Binding Path=z_scale_min}" 
                            Maximum="{Binding Path=z_scale_max}"
                            Value="{Binding Path=z_scale}" 
                            KeyboardNavigation.IsTabStop="False"
                            />
                    <editors:DoubleEditBox Grid.Column="4" Grid.Row="4"
                                        CheckBoxVisibility="Collapsed" 
                                        SpinnerVisibility="Collapsed"
                                        HorizontalAlignment="Left"
                                        Format="G"
                                        StepValue="10"
                                        Minimum="1"
                                        Width="50" 
                                        CenterSlotHorizontalAlignment="Right"
                                        Value="{Binding ElementName=z_scale_slider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                        />
                </Grid>
            </DataTemplate>

            <!-- Gaussian Box Specification -->
            <DataTemplate x:Key="gaussBoxSpecDetailsTemplate">
                <Grid Margin="0,6">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="30" />
                        <ColumnDefinition Width="44" />
                        <ColumnDefinition Width="74" />
                        <ColumnDefinition Width="44" />
                        <ColumnDefinition Width="74" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <StackPanel Grid.Column="0" Grid.Row="0" Orientation="Horizontal">
                        <Grid  VerticalAlignment="Center">
                            <Rectangle Fill="White"
                                       Stroke="Black"
                                       StrokeThickness="0.5"
                                       Width="15"
                                       Height="15"
                                       />
                            <CheckBox x:Name="box_widget_on_checkbox"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                        Style="{StaticResource EyeballCheckboxStyle}"
                                        IsChecked="{Binding Path=box_visibility}"                                      
                                        />                                                
                        </Grid>
                        <Grid VerticalAlignment="Center">
                            <Rectangle Fill="LightPink"
                                   Stroke="Black"
                                   StrokeThickness="0.5"
                                   Width="15"
                                   Height="15"
                                   />
                            <CheckBox x:Name="gauss_blob_on_checkbox"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                    Style="{StaticResource EyeballCheckboxStyle}"
                                    IsChecked="{Binding Path=blob_visibility}"
                                      Click="blob_actor_checkbox_clicked"
                                      CommandParameter="{Binding Path=box_guid}"
                                    />
                        </Grid>
                    </StackPanel>                    
                    <TextBlock Text="center (µm)" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="0" Margin="5,4" HorizontalAlignment="Right"/>
                    <TextBlock Text="std. dev. (µm)" Grid.Column="3" Grid.ColumnSpan="2" Grid.Row="0" Margin="3,4" HorizontalAlignment="Right"/>
                    <!--<Line Margin="4,0,4,3" 
                          Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1" 
                          SnapsToDevicePixels="True" Stroke="LightGray"
                          Stretch="Fill" X1="0" X2="10" />
                    <Line Margin="4,0,4,3" 
                          Grid.Column="3" Grid.ColumnSpan="2" Grid.Row="1" 
                          SnapsToDevicePixels="True" Stroke="LightGray"
                          Stretch="Fill" X1="0" X2="10" />-->
                    <TextBlock Text="X" Grid.Column="0" Grid.Row="2" Margin="2,0" TextAlignment="Right"/>
                    <uc:DoublesBox x:Name="dbl_x_trans"
                                   Grid.Column="1" Grid.Row="2" Grid.ColumnSpan="2"   
                                   TextFieldWidth="70"
                                   SliderWidth="40"
                                   RangeFactor="1"
                                   DecimalPlaces="2"     
                                   Number="{Binding Path=x_trans, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                   >
                        
                    </uc:DoublesBox>                                        
                    <uc:DoublesBox x:Name="dbl_x_scale"
                                   Grid.Column="3" Grid.Row="2" Grid.ColumnSpan="2"   
                                   TextFieldWidth="70"
                                   SliderWidth="40"
                                   RangeFactor="1"
                                   DecimalPlaces="2"
                                   Number="{Binding Path=half_x_scale, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                   >

                    </uc:DoublesBox>

                    <TextBlock Text="Y" Grid.Column="0" Grid.Row="3" Margin="2,0" TextAlignment="Right" />
                    <uc:DoublesBox x:Name="dbl_y_trans"
                                   Grid.Column="1" Grid.Row="3" Grid.ColumnSpan="2"   
                                   TextFieldWidth="70"
                                   SliderWidth="40"
                                   RangeFactor="1"
                                   DecimalPlaces="2"
                                   Number="{Binding Path=y_trans, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                   >

                    </uc:DoublesBox>
                    
                    <uc:DoublesBox x:Name="dbl_y_scale"
                                   Grid.Column="3" Grid.Row="3"   Grid.ColumnSpan="2" 
                                   TextFieldWidth="70"
                                   SliderWidth="40"
                                   RangeFactor="1"
                                   DecimalPlaces="2"
                                   Number="{Binding Path=half_y_scale, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                   >

                    </uc:DoublesBox>
                    
                    <TextBlock Text="Z" Grid.Column="0" Grid.Row="4" Margin="2,0" TextAlignment="Right" />
                    <uc:DoublesBox x:Name="dbl_z_trans"
                                   Grid.Column="1" Grid.Row="4"  Grid.ColumnSpan="2"  
                                   TextFieldWidth="70"
                                   SliderWidth="40"
                                   RangeFactor="1"
                                   DecimalPlaces="2"
                                   Number="{Binding Path=z_trans, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                   >

                    </uc:DoublesBox>
                                       <uc:DoublesBox x:Name="dbl_z_scale"
                                   Grid.Column="3" Grid.Row="4"  Grid.ColumnSpan="2"  
                                   TextFieldWidth="70"
                                   SliderWidth="40"
                                   RangeFactor="1"
                                   DecimalPlaces="2"
                                   Number="{Binding Path=half_z_scale, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                   >

                    </uc:DoublesBox>

                </Grid>
            </DataTemplate>

            <DataTemplate DataType="{x:Type daph:MolPopHomogeneousLevel}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="70" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>

                    <StackPanel Orientation="Vertical" Grid.Column="1" Grid.Row="0" Margin="-50,2">

                        <StackPanel Orientation="Horizontal" Margin="20,0">

                            <uc:DoublesBox      HorizontalAlignment="Left"
                                                TextFieldWidth="100"
                                                Number="{Binding Path=concentration, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"   
                                                DecimalPlaces="2" 
                                                RangeFactor="2"
                                                SNLowerThreshold="0.001"
                                                SNUpperThreshold="1000"
                                                SliderEnabled="False"                                                
                                                >
                            </uc:DoublesBox>

                        </StackPanel>
                    </StackPanel>
                </Grid>
            </DataTemplate>

            <DataTemplate DataType="{x:Type daph:MolPopLinear}">
                <StackPanel>
                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=cbToroidal, Path=IsChecked}" Value="True">
                                    <Setter Property="Visibility" Value="Hidden"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ElementName=cbToroidal, Path=IsChecked}" Value="False">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                    
                    <StackPanel  Grid.Column="0" Grid.Row="4">
                        <TextBlock Text="impose gradient" Margin="60,2" HorizontalAlignment="Right" VerticalAlignment="Center"  TextAlignment="Right" MinWidth="100">
                            
                        </TextBlock>
                </StackPanel>
                <StackPanel Grid.Column="0" Grid.Row="5" Orientation="Horizontal" Margin="0,-4">
                    <TextBlock x:Name="tbSpecify" Text="direction of gradient" Margin="0,0" 
                                           Height="40" TextWrapping="Wrap" HorizontalAlignment="Left" VerticalAlignment="Center"  TextAlignment="Right" 
                                           Width="100">                                    
                    </TextBlock>
                    <ComboBox  x:Name="cbBoundFace" MinWidth="100" HorizontalAlignment="Right"  Margin="4,0" Height="24"
                                           ItemsSource="{Binding Source={StaticResource boundaryFaces}}"
                                           SelectedValue="{Binding Path=boundary_face, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                           SelectionChanged="cbBoundFace_SelectionChanged">                        
                    </ComboBox>
                </StackPanel>
                    <StackPanel Grid.Column="0" Grid.Row="6" Margin="50,4" Visibility="{Binding ElementName=cbBoundFace, Path=SelectedItem, Converter={StaticResource BoundaryFaceVisConv}}" >
                        <TextBlock x:Name="tbConc" Text="concentration (molec/µm^3)" Margin="0,0" 
                                           HorizontalAlignment="Right" VerticalAlignment="Center"  TextAlignment="Right" 
                                           Width="160"/>
                </StackPanel>
                <StackPanel Visibility="{Binding ElementName=cbBoundFace, Path=SelectedItem, Converter={StaticResource BoundaryFaceVisConv}}"  Grid.Column="0" Grid.Row="7" Orientation="Horizontal"  >
                    <TextBlock x:Name="tbLeft" Margin="0,0" HorizontalAlignment="Right" VerticalAlignment="Center"  TextAlignment="Right" Width="100">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ElementName=cbBoundFace, Path=SelectedIndex}" Value="1">
                                                    <Setter Property="Text" Value="x=0"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ElementName=cbBoundFace, Path=SelectedIndex}" Value="2">
                                                    <Setter Property="Text" Value="y=0"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ElementName=cbBoundFace, Path=SelectedIndex}" Value="3">
                                                    <Setter Property="Text" Value="z=0"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                    </TextBlock>
                        <uc:DoublesBox  MinWidth="100" HorizontalAlignment="Right"  Margin="4,0" Height="24" 
                                        Number="{Binding Path=boundaryCondition[0].concVal, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        SNLowerThreshold="0.001"
                                        SNUpperThreshold="1000"
                                        SliderEnabled="False">
                        </uc:DoublesBox>
                    </StackPanel>
                <StackPanel Visibility="{Binding ElementName=cbBoundFace, Path=SelectedItem, Converter={StaticResource BoundaryFaceVisConv}}"  Grid.Column="0" Grid.Row="8" Orientation="Horizontal" >
                    <TextBlock x:Name="tbRight" Margin="0,0" HorizontalAlignment="Right" VerticalAlignment="Center"  TextAlignment="Right" Width="100">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=cbBoundFace, Path=SelectedIndex}" Value="1">
                                        <Setter Property="Text" Value="{Binding ElementName=extent_x_slider, Path=Value, StringFormat='x={0}'}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ElementName=cbBoundFace, Path=SelectedIndex}" Value="2">
                                        <Setter Property="Text" Value="{Binding ElementName=extent_y_slider, Path=Value, StringFormat='y={0}'}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ElementName=cbBoundFace, Path=SelectedIndex}" Value="3">
                                        <Setter Property="Text" Value="{Binding ElementName=extent_z_slider, Path=Value, StringFormat='z={0}'}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                        <uc:DoublesBox  MinWidth="100" HorizontalAlignment="Right"  Margin="4,0" Height="24" 
                                        Number="{Binding Path=boundaryCondition[1].concVal, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"                                        
                                        SNLowerThreshold="0.001"
                                        SNUpperThreshold="1000"
                                        SliderEnabled="False">
                        </uc:DoublesBox>
                    </StackPanel>
                </StackPanel>
            </DataTemplate>

            <DataTemplate DataType="{x:Type daph:MolPopGaussian}">
                <StackPanel Orientation="Vertical">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="70" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <StackPanel Orientation="Horizontal" Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="3">
                            <TextBlock Text="peak concentration" Margin="0,0"
                                   Grid.Column="0" Grid.Row="0"  
                                   HorizontalAlignment="Right" VerticalAlignment="Center"
                                   />

                            <uc:DoublesBox SliderEnabled="False" Width="80" Number="{Binding Path=peak_concentration, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            </uc:DoublesBox>

                            <!--<editors:DoubleEditBox CheckBoxVisibility="Collapsed" 
                                                    SpinnerVisibility="Collapsed"
                                                    HorizontalAlignment="Right"
                                                    Format="F2"
                                                    StepValue="10"
                                                    Width="50" 
                                                    Margin="4,0"
                                                    CenterSlotHorizontalAlignment="Right"
                                                    Value="{Binding Path=peak_concentration, UpdateSourceTrigger=PropertyChanged}"
                                                    />-->
                            <TextBlock Text="molec/µm^3" VerticalAlignment="Center" Margin="2,0,0,0"/>
                        </StackPanel>                        
                    </Grid>
                    <!-- ListView as level of indirection for getting to the correct BoxSpec -->
                    <ListView x:Name="molpopGaussianBoxSpecsListView"
                                              ItemsSource="{Binding Source={StaticResource ggBoxSpecsListView}}"
                                              DisplayMemberPath="box_guid"
                                              SelectedValue="{Binding Path=gaussgrad_gauss_spec_guid_ref, Mode=OneWay}"
                                              SelectedValuePath="box_guid"
                                              Visibility="Collapsed"
                                              />
                    <ContentControl Name="GaussianBoxSpecDetails"
                                                    Content="{Binding ElementName=molpopGaussianBoxSpecsListView, Path=SelectedItem}" 
                                                    HorizontalAlignment="Center"
                                                    ContentTemplate="{StaticResource gaussBoxSpecDetailsTemplate}" 
                                                    Margin="0,2"/>
                </StackPanel>
            </DataTemplate>

            <!--"{Binding Path=spec_cell_list, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"-->

            <DataTemplate DataType="{x:Type daph:CellPopSpecific}">                            
                <StackPanel x:Name="panelCoordinates" Grid.Row="1" Grid.Column="0">
                </StackPanel>
            </DataTemplate>

            <DataTemplate DataType="{x:Type daph:CellPopUniform}">
                <StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock>Number of cells:    </TextBlock>                        
                        <TextBox IsReadOnly="True" IsEnabled="False" Width="50" Margin="8,-2" Text="{Binding ElementName=numberBox, Path=Value}"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock>These cells will be evenly distributed.</TextBlock>
                    </StackPanel>
                </StackPanel>
            </DataTemplate>

            <DataTemplate DataType="{x:Type daph:CellPopGaussian}">
                <StackPanel Orientation="Vertical">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="70" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                    </Grid>
                    <!-- ListView as level of indirection for getting to the correct BoxSpec -->
                    <ListView x:Name="cellPopGaussianBoxSpecsListView"
                                              ItemsSource="{Binding Source={StaticResource ggBoxSpecsListView}}"
                                              DisplayMemberPath="box_guid"
                                              SelectedValue="{Binding Path=gauss_spec_guid_ref, Mode=OneWay}"
                                              SelectedValuePath="box_guid"
                                              Visibility="Collapsed"
                                              />
                    <ContentControl Name="GaussianBoxSpecDetails"
                                                    Content="{Binding ElementName=cellPopGaussianBoxSpecsListView, Path=SelectedItem}" 
                                                    HorizontalAlignment="Center"
                                                    ContentTemplate="{StaticResource gaussBoxSpecDetailsTemplate}" 
                                                    Margin="0,2"/>
                </StackPanel>
            </DataTemplate>


            <DataTemplate x:Key="molpopDistributionDetailsTemplate">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="70" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <ContentControl Name="solfac_dist_cc"
                                    Grid.ColumnSpan="2" Grid.Row="0"
                                    Margin="0,6"
                                    BorderBrush="DarkGray" BorderThickness="1"
                                    Content="{Binding Path=mp_distribution}"  />
                </Grid>
            </DataTemplate>           
            
            <DataTemplate x:Key="cellPopDistributionDetailsTemplate">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="70" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <ContentControl Name="cp_dist"
                                    Grid.ColumnSpan="2" Grid.Row="0"
                                    Margin="0,6"
                                    BorderBrush="DarkGray" BorderThickness="1"
                                    Content="{Binding Path=cellPopDist}"   />
                </Grid>
            </DataTemplate>           

            <!-- =========================== -->
            <!-- Mol Pops -->

            <DataTemplate x:Key="molListItemTemplate">
                <StackPanel Orientation="Horizontal">                    
                    <TextBlock Text="{Binding Path=Name}" Margin="5,0,0,0"/>
                </StackPanel>
            </DataTemplate>
            
            <!-- skg daphne -->
            <!-- Reaction -->
            <DataTemplate x:Key="reacListItemTemplate">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding Path=TotalReactionString}" Margin="5,0,0,0"/>
                </StackPanel>
            </DataTemplate>

            <!-- =========================== -->
            <!-- Cell Population -->            
            <!-- Cell Pop Distributions -->
            <DataTemplate x:Key="cellPopDistributionTypeTemplate">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding Converter={StaticResource CellPopDistTypeEnumConv}}"/>
                </StackPanel>
            </DataTemplate>

            <DataTemplate x:Key="cellPopListItemTemplate">
                <StackPanel Orientation="Horizontal">
                    <Rectangle Width="10" Height="10"
                                               Margin="5,0,0,0"
                                               VerticalAlignment="Center"
                                               Fill="{Binding Path=cellpopulation_color, Converter={StaticResource colorToSolidBrushConv}}"
                                               Stroke="Black" StrokeThickness="0.5"/>

                    <TextBlock Text="{Binding Path=cellpopulation_name}" Margin="5,0,0,0"/>

                    <StackPanel Orientation="Horizontal">
                        
                    </StackPanel>

                </StackPanel>
            </DataTemplate>

            <!-- Color field template -->
            <!-- CellPopsListBox -->
            <DataTemplate x:Key="colorItemTemplate">
                <StackPanel Orientation="Horizontal">

                    <Rectangle Width="10" Height="10" Margin="4,0" Stroke="Black" StrokeThickness="0.5"   >
                        <Rectangle.Style>
                            <Style TargetType="Rectangle">
                                <Setter Property="Fill" Value="{Binding Converter={StaticResource ColorListToBrushConv}}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding}" Value="7">
                                        <Setter Property="Fill" Value="{Binding ElementName=CellPopsListBox, Path=SelectedItem.cellpopulation_color, Converter={StaticResource colorToSolidBrushConv}}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Rectangle.Style>

                    </Rectangle>
                    <TextBlock Width="40" Text="{Binding}" Margin="5,0,0,0"/>
                </StackPanel>
            </DataTemplate>
            
            <DataTemplate x:Key="cellPopDetailsTemplate">                
                <StackPanel>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="70" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto"/>                          
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <TextBlock Text="name" Margin="6,0"
                                        Grid.Column="0" Grid.Row="1"  
                                        HorizontalAlignment="Right" VerticalAlignment="Center" />
                        <TextBox Text="{Binding Path=cellpopulation_name, UpdateSourceTrigger=PropertyChanged}"
                                        Grid.Column="1" Grid.Row="1"  Margin="0,2"   />                        
                        
                        <TextBlock Text="cell type" Margin="6,0"
                                        Grid.Column="0" Grid.Row="0"  
                                        HorizontalAlignment="Right" VerticalAlignment="Center"  />
                        
                        <ComboBox x:Name="cell_type_combo_box"
                                        Grid.Column="1" Grid.Row="0" Margin="0,2"
                                        MinWidth="80"
                                        ItemsSource="{Binding Source={StaticResource cellTypesListView}}"
                                        DisplayMemberPath="CellName"
                                        SelectionChanged="cell_type_combo_box_SelectionChanged"
                                        SelectedValue="{Binding Path=Cell.entity_guid, UpdateSourceTrigger=Explicit}"
                                        SelectedValuePath="entity_guid">
                            
                        </ComboBox>

                        <TextBlock Text="number" Margin="6,0"
                                        Grid.Column="0" Grid.Row="3"  
                                        HorizontalAlignment="Right" VerticalAlignment="Center"  />
                        <StackPanel Orientation="Horizontal"
                                    Grid.Column="1" Grid.Row="3"
                                    Margin="0,4">
                            <Slider x:Name="number_slider"
                                    Orientation="Horizontal"
                                    VerticalAlignment="Center"
                                    Width="100"
                                    RenderTransform="1.0,0,0,0.5,0,6"
                                    Minimum="1" 
                                    Maximum="10000" 
                                    Value="{Binding Path=number, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                    IsSnapToTickEnabled="True" 
                                    TickFrequency="1" 
                                    KeyboardNavigation.IsTabStop="False"
                                    />
                            
                            <editors:Int32EditBox CheckBoxVisibility="Collapsed" 
                                    SpinnerVisibility="Collapsed"
                                    HorizontalAlignment="Right"
                                    Format="N0"
                                    StepValue="10"
                                    Width="50" 
                                    CenterSlotHorizontalAlignment="Right"
                                    Value="{Binding ElementName=number_slider, Path=Value}"
                                    x:Name="numberBox"
                                    ValueChanged="numberBox_ValueChanged"
                                    />
                        </StackPanel>

                        <TextBlock Text="color" Margin="6,0" Grid.Column="0" Grid.Row="4" HorizontalAlignment="Right" VerticalAlignment="Center" />
                        <ComboBox x:Name="cbCellColor"  Width="140" HorizontalAlignment="Left" Grid.Column="1" Grid.Row="4" Margin="0,2"
                                        ItemsSource="{Binding Source={StaticResource colorList}}" 
                                        ItemTemplate="{Binding Source={StaticResource colorItemTemplate}}"
                                        SelectedIndex="{Binding Path=cellpopulation_predef_color, Converter={StaticResource ColorListToIntConv}, 
                                        Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        SelectionChanged="cellPopColor_SelectionChanged"
                                        >                            
                        </ComboBox>

                        <StackPanel Grid.Column="1" Grid.Row="5" >
                            <StackPanel.Style>
                                <Style TargetType="StackPanel">
                                    <Setter Property="Visibility" Value="Hidden"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=cbCellColor, Path=SelectedIndex}" Value="7">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </StackPanel.Style>

                            <editors:ColorEditBox x:Name="cellColorEditBox" 
                                        CheckBoxVisibility="Collapsed"
                                        SpinnerVisibility="Collapsed"
                                        Width="140"
                                        HorizontalAlignment="Left" 
                                        Format="a r g b"
                                        Value="{Binding Path=cellpopulation_color, UpdateSourceTrigger=PropertyChanged}"
                                        Margin="0,2" >

                            </editors:ColorEditBox>
                        </StackPanel>

                    </Grid>
                    <Grid>
                        <Expander ExpandDirection="Down" Padding="6"
                                    
                                IsExpanded="False"
                                Header="Cell Placement Method"
                                x:Name="CPMExpander"
                                Margin="0,-10,0,0" 
                                Canvas.ZIndex="1"         >
                            
                                <StackPanel Orientation="Vertical">                                
                                <StackPanel Orientation="Vertical">
                                    <StackPanel>                                        
                                        <StackPanel Orientation="Horizontal" Margin="8,0">
                                            
                                            <ComboBox x:Name="cbCellLocationType" Margin="0,4" Width="200" HorizontalAlignment="Left"
                                                ItemsSource="{Binding Source={StaticResource cellPopDistributionTypes}}"
                                                ItemTemplate="{Binding Source={StaticResource cellPopDistributionTypeTemplate}}"
                                                SelectedValue="{Binding Path=cellPopDist.DistType, Mode=OneWay}"
                                                SelectionChanged="cbCellLocationType_SelectionChanged">
                                            </ComboBox>
                                            
                                            <Button x:Name="btnRegenerateCellPositions" Height="22" Margin="8,0" Click="btnRegenerateCellPositions_Click" Content="Reset">
                                                <Button.Style>
                                                    <Style TargetType="Button">
                                                        <Setter Property="Visibility" Value="Hidden"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding ElementName=cbCellLocationType, Path=SelectedIndex}" Value="1">
                                                                <Setter Property="Visibility" Value="Visible"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding ElementName=cbCellLocationType, Path=SelectedIndex}" Value="2">
                                                                <Setter Property="Visibility" Value="Visible"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Button.Style>
                                                
                                                <Button.ToolTip>
                                                    <ToolTip>
                                                        <StackPanel Width="200" Orientation="Horizontal">
                                                            <TextBlock TextWrapping="Wrap" HorizontalAlignment="Left" 
                                                                        VerticalAlignment="Top" Padding="5" Width="200">
                                                                    Clicking this button will re-generate the cell positions for
                                                                    Uniform and Gaussian placement methods.
                                                            </TextBlock>
                                                        </StackPanel>
                                                    </ToolTip>
                                                </Button.ToolTip>
                                            </Button>
                                            
                                        </StackPanel>
                                            <StackPanel Orientation="Vertical" Margin="16,0">                                            
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                </Grid.RowDefinitions>
                                                
                                                <StackPanel Grid.Column="0" Grid.Row="0">
                                                    <ContentControl Name="cellPopDistrib"
                                                        Content="{Binding ElementName=CellPopsListBox, Path=SelectedItem}" 
                                                        ContentTemplate="{StaticResource cellPopDistributionDetailsTemplate}" 
                                                        Margin="6,2"/>
                                                </StackPanel>

                                                <StackPanel  Margin="0,6,0,0" Grid.Column="0" Grid.Row="1" Orientation="Vertical">
                                                    <TextBlock Margin="0,0" HorizontalAlignment="Left" VerticalAlignment="Center">Actual Cell Locations</TextBlock>
                                                    <DataGrid x:Name="dgLocations" ItemsSource="{Binding ElementName=CellPopsListBox, Path=SelectedItem.cellPopDist.CellStates, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                                    Height="150" MinWidth="200" MinRowHeight="20" MinColumnWidth="20" ColumnWidth="60" MaxColumnWidth="80"
                                                                    CanUserReorderColumns="False" CanUserResizeRows="False"
                                                                    CanUserSortColumns="False" RowHeaderWidth="0"
                                                                    VerticalContentAlignment="Center"
                                                                    CanUserAddRows="False"
                                                                    BorderThickness="1"
                                                                    BorderBrush="Black"
                                                                    local:DataGridBehavior.DisplayRowNumber="True"
                                                                    KeyDown="dgLocations_KeyDown"
                                                                    ScrollBar.Scroll="dgLocations_Scroll"
                                                                    ScrollViewer.ScrollChanged="dgLocations_Scroll"
                                                                    SourceUpdated="dgLocations_Unloaded"
                                                                    LostFocus="dgLocations_CheckPositions"
                                                                    >
                                                        <DataGrid.ContextMenu>
                                                            <ContextMenu >
                                                                <MenuItem Header="Paste" Name="menuCoordinatesPaste" Click="menuCoordinatesPaste_Click"></MenuItem>
                                                            </ContextMenu>
                                                        </DataGrid.ContextMenu>

                                                        <DataGrid.ColumnHeaderStyle>
                                                            <Style TargetType="DataGridColumnHeader" >
                                                                <Setter Property="FontSize" Value="12" />
                                                                <Setter Property="Height" Value="24" />
                                                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                                                <Setter Property="BorderThickness" Value="1" />
                                                                <Setter Property="BorderBrush" Value="Black" />
                                                                <Setter Property="Background">
                                                                    <Setter.Value>
                                                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                                            <GradientStop Offset="0.0" Color="White" />
                                                                            <GradientStop Offset="1.0" Color="Beige" />
                                                                        </LinearGradientBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </DataGrid.ColumnHeaderStyle>                                                        
                                                        <DataGrid.Columns>
                                                            <DataGridTextColumn  Header="Cell" Width="40" IsReadOnly="True"
                                                                ScrollViewer.CanContentScroll ="False"
                                                                Binding="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Converter={local:RowToIndexConverter}}" 
                                                            />

                                                        </DataGrid.Columns>

                                                    </DataGrid>
                                                </StackPanel>
                                            </Grid>

                                        </StackPanel>                                        
                                    </StackPanel>
                                </StackPanel>
                            </StackPanel>
                        </Expander>
                    </Grid>
                </StackPanel>
            </DataTemplate>

           

            <Style TargetType="editors:DoubleEditBox">
                <Setter Property="CheckBoxVisibility" Value="Collapsed" />
                <Setter Property="SpinnerVisibility" Value="Collapsed" />
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="Format" Value="G" />
                <Setter Property="Minimum" Value="0" />
                <Setter Property="Width" Value="60" />
                <Setter Property="CenterSlotHorizontalAlignment" Value="Right" />
            </Style>
            
            <DataTemplate x:Key="cellTypeListItemTemplate">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding Path=cell_subset_type.cell_subset_name}"/>
                </StackPanel>
            </DataTemplate>
            
            <DataTemplate x:Key="cellTypeReceptorItemTemplate">
                <TextBlock Text="{Binding Path=receptor_solfac_type_guid_ref, 
                        Converter={StaticResource SolfacGUIDtoReceptorNameConv}, 
                        ConverterParameter={StaticResource solfacSolfacTypesListView}}"
                        HorizontalAlignment="Left"
                               />
            </DataTemplate>

            <!-- =========================== -->
            <!-- Mol Pop Distributions -->            
            <DataTemplate x:Key="molpopDistributionTypeTemplate">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding Converter={StaticResource MolPopDistTypeEnumConv}}"/>
                </StackPanel>
            </DataTemplate>

            <DataTemplate x:Key="geneDetailsTemplate">
                <local:DaphneStackPanel x:Name="geneDetails" Margin="0,-8" Orientation="Horizontal" >
                    <StackPanel Orientation="Vertical">
                        <StackPanel Orientation="Horizontal" Margin="10,4">
                            <TextBlock Text="Name" Margin="0,0" HorizontalAlignment="Left" VerticalAlignment="Center"  TextAlignment="Right" MinWidth="60"/>
                            <TextBox Text="{Binding Path=Name, UpdateSourceTrigger=PropertyChanged}"  Margin="4,2" MinWidth="140" HorizontalAlignment="Left"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="10,4">
                            <TextBlock Text="Copy Number" Margin="0,0" HorizontalAlignment="Left" VerticalAlignment="Center"  TextAlignment="Right" MinWidth="60"/>
                            <TextBox Text="{Binding Path=CopyNumber, UpdateSourceTrigger=PropertyChanged}"  Margin="4,2" MinWidth="140" HorizontalAlignment="Left"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="10,4">
                            <TextBlock Text="Activation Level" Margin="0,0" HorizontalAlignment="Left" VerticalAlignment="Center"  TextAlignment="Right" MinWidth="60"/>
                            <TextBox Text="{Binding Path=ActivationLevel, UpdateSourceTrigger=PropertyChanged}"  Margin="4,2" MinWidth="140" HorizontalAlignment="Left"/>
                        </StackPanel>
                    </StackPanel>
                </local:DaphneStackPanel>
            </DataTemplate>

            <DataTemplate x:Key="reactionDetailsTemplate">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="100" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    
                    <TextBlock Text="rate constant" Margin="6,0"
                            Grid.Column="0" Grid.Row="0"  
                            HorizontalAlignment="Right" VerticalAlignment="Center"
                            />

                    <TextBox Margin="0,2" x:Name="txtRateConst"
                            Grid.Column="1" Grid.Row="0" 
                            Text="{Binding Path=RateConst, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"
                             IsReadOnly="True" />

                    <TextBlock Text="reaction type" Margin="6,0"
                            Grid.Column="0" Grid.Row="1"  
                            HorizontalAlignment="Right" VerticalAlignment="Center"
                            />

                    <TextBox Margin="0,2" x:Name="txtReactionType"
                            Grid.Column="1" Grid.Row="1"  
                                Text="{Binding Path=ReacTypeString, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"
                             IsReadOnly="True" />

                    
                </Grid>
            </DataTemplate>

            <!-- =========================== -->
            <!-- Gaussian Specifications -->

            <DataTemplate x:Key="gaussianSpecListItemTemplate">
                <StackPanel Orientation="Horizontal">
                    <CheckBox IsChecked="{Binding Path=gaussian_region_visibility}" Style="{StaticResource EyeballCheckboxStyle}" />
                    <Rectangle Width="10" Height="10"
                               Margin="5,0,0,0"
                               VerticalAlignment="Center"
                               Fill="{Binding Path=gaussian_spec_color, Converter={StaticResource colorToSolidBrushConv}}"
                               Stroke="Black" StrokeThickness="0.5"/>
                    <TextBlock Text="{Binding Path=gaussian_spec_name}" Margin="5,0,0,0"/>
                </StackPanel>
            </DataTemplate>

            <DataTemplate x:Key="gaussianSpecDetailsTemplate">
                <StackPanel Orientation="Vertical">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="70" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <TextBlock Text="name" Margin="6,0"
                                       Grid.Column="0" Grid.Row="0"  
                                       HorizontalAlignment="Right" VerticalAlignment="Center"
                                       />
                        <TextBox Text="{Binding Path=gaussian_spec_name, UpdateSourceTrigger=PropertyChanged}"
                                     Grid.Column="1" Grid.Row="0"
                                     />
                        <TextBlock Text="color" Margin="6,0"
                                   Grid.Column="0" Grid.Row="3"  
                                   HorizontalAlignment="Right" VerticalAlignment="Center"
                                   />
                        <editors:ColorEditBox x:Name="gaussSpecColorEditBox"
                                          Grid.Column="1" Grid.Row="3"
                                          CheckBoxVisibility="Collapsed"
                                          SpinnerVisibility="Collapsed"
                                          Width="140"
                                          HorizontalAlignment="Left" 
                                          Format="a r g b"
                                          Value="{Binding Path=gaussian_spec_color}"
                                              Margin="0,2"
                                          />
                    </Grid>
                    <ListView Name="ggBoxSpecsListView"
                                              ItemsSource="{Binding Source={StaticResource boxSpecsListView}}"
                                              DisplayMemberPath="box_guid"
                                              SelectedValue="{Binding Path=gaussian_spec_box_guid_ref, Mode=OneWay}"
                                              SelectedValuePath="box_guid"
                                              Visibility="Collapsed"
                                              />
                    <ContentControl Name="GGBoxSpecDetails"
                                                    Content="{Binding ElementName=ggBoxSpecsListView, Path=SelectedItem}" 
                                                    HorizontalAlignment="Center"
                                                    ContentTemplate="{StaticResource gaussBoxSpecDetailsTemplate}" 
                                                    Margin="0,2"/>
                </StackPanel>
            </DataTemplate>

            <DataTemplate x:Key="reactionListItemTemplate">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding Path=TotalReactionString}" Foreground="{Binding Path=ForegroundColor, Converter={StaticResource textToColorConv}}"/>
                    <TextBlock Text="    " />
                    <TextBlock Text="Rate:  " Foreground="{Binding Path=ForegroundColor, Converter={StaticResource textToColorConv}}"/>
                    <TextBlock Text="{Binding Path=rate_const, StringFormat={}{0:#.00}}" Foreground="Black" />
                </StackPanel>
            </DataTemplate>

        </TabControl.Resources>

        <!-- SIM SETUP -->
        <TabItem Header="Sim Setup" x:Name="tabSimSetup" AutomationProperties.AutomationId="DaphneSimSetupTab">        
            <ScrollViewer VerticalScrollBarVisibility="Auto">
                <StackPanel Orientation="Vertical" Margin="8">

                    <!-- Experiment -->
                    <TextBlock Text="Experiment name" FontWeight="Bold" Margin="0,5,0,0" />
                    <TextBox Text="{Binding Path=experiment_name, UpdateSourceTrigger=PropertyChanged}" x:Name="experiment_name_box"/>

                    <TextBlock Text="Description" FontWeight="Bold" Margin="0,10,0,0" />
                    <TextBox Text="{Binding Path=experiment_description, UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap"
                                        Height="40" MaxWidth="{Binding ElementName=experiment_name_box, Path=ActualWidth}"
                                        VerticalScrollBarVisibility="Auto"/>

                    <!-- TimeConfig -->
                    <TextBlock Text="Time configuration" FontWeight="Bold" Margin="0,10,0,0" />
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="total time" Margin="6,0"
                                                    Grid.Column="0" Grid.Row="2"  
                                                    HorizontalAlignment="Right" VerticalAlignment="Center"
                                                    TextAlignment="Right"
                                                    Width="120"
                                                    />
                        <Slider Name="time_duration_slider"
                                                Orientation="Horizontal"
                                                VerticalAlignment="Center"
                                                Width="100"
                                                RenderTransform="1.0,0,0,0.5,0,7"
                                                Minimum="0.001" 
                                                Maximum="28800" 
                                                Value="{Binding Path=scenario.time_config.duration, UpdateSourceTrigger=PropertyChanged}" 
                                                IsSnapToTickEnabled="True" 
                                                TickFrequency="10" 
                                                KeyboardNavigation.IsTabStop="False"
                                                ValueChanged="time_duration_slider_ValueChanged"
                                                />
                        <editors:DoubleEditBox x:Name="TimeDurationReadout" 
                                                              CheckBoxVisibility="Collapsed" 
                                                              SpinnerVisibility="Collapsed"
                                                              HorizontalAlignment="Right"
                                                              Format="F3"
                                                              StepValue="100"
                                                              Width="60" 
                                                              CenterSlotHorizontalAlignment="Right"
                                                              Value="{Binding ElementName=time_duration_slider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                                              />
                        <TextBlock Text="min" VerticalAlignment="Center" Margin="2,0,0,0"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="rendering interval" Margin="6,0"
                                                    Grid.Column="0" Grid.Row="3"  
                                                    HorizontalAlignment="Right" VerticalAlignment="Center"
                                                    TextAlignment="Right"
                                                    Width="120"
                                                    />
                        <Slider Name="time_step_slider"
                                                Orientation="Horizontal"
                                                VerticalAlignment="Center"
                                                Width="100"
                                                RenderTransform="1.0,0,0,0.5,0,7"
                                                Maximum="{Binding ElementName=time_duration_slider, Path=Value}" 
                                                Minimum="0.001" 
                                                Value="{Binding Path=scenario.time_config.rendering_interval}" 
                                                IsSnapToTickEnabled="True" 
                                                TickFrequency="0.01" 
                                                KeyboardNavigation.IsTabStop="False"
                                                />
                        <editors:DoubleEditBox x:Name="TimeStepReadout" 
                                                              CheckBoxVisibility="Collapsed" 
                                                              SpinnerVisibility="Collapsed"
                                                              HorizontalAlignment="Right"
                                                              Format="N3"
                                                              StepValue="0.01"
                                                              Width="60" 
                                                              CenterSlotHorizontalAlignment="Right"
                                                              Value="{Binding ElementName=time_step_slider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                                              />
                        <TextBlock Text="min" VerticalAlignment="Center" Margin="2,0,0,0"/>
                    </StackPanel>
                    <!--*************************************************-->
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="sampling interval" Margin="6,0"
                                                    Grid.Column="0" Grid.Row="4"  
                                                    HorizontalAlignment="Right" VerticalAlignment="Center"
                                                    TextAlignment="Right"
                                                    Width="120"
                                                    />
                        <Slider Name="sampling_interval_slider"
                                                Orientation="Horizontal"
                                                VerticalAlignment="Center"
                                                Width="100"
                                                RenderTransform="1.0,0,0,0.5,0,7"
                                                Maximum="{Binding ElementName=time_duration_slider, Mode=OneWay, Path=Value}"
                                                Minimum="0.001"
                                                Value="{Binding Path=scenario.time_config.sampling_interval}" 
                                                IsSnapToTickEnabled="True" 
                                                TickFrequency="0.01" 
                                                KeyboardNavigation.IsTabStop="False"
                                                ValueChanged="sampling_interval_slider_ValueChanged"
                                                />
                        <editors:DoubleEditBox x:Name="SamplingInterval" 
                                                              CheckBoxVisibility="Collapsed" 
                                                              SpinnerVisibility="Collapsed"
                                                              HorizontalAlignment="Right"
                                                              Format="N3"
                                                              StepValue="0.01"
                                                              Width="60" 
                                                              CenterSlotHorizontalAlignment="Right"
                                                              Value="{Binding ElementName=sampling_interval_slider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                                              />
                        <TextBlock Text="min" VerticalAlignment="Center" Margin="2,0,0,0"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="repetitions" Margin="6,0"
                                                    Grid.Column="0" Grid.Row="5"  
                                                    HorizontalAlignment="Right" VerticalAlignment="Center"
                                                    TextAlignment="Right"
                                                    Width="120"
                                                    />
                        <Slider Name="exp_rep_slider"
                                                Orientation="Horizontal"
                                                VerticalAlignment="Center"
                                                Width="100"
                                                RenderTransform="1.0,0,0,0.5,0,7"
                                                Minimum="1" 
                                                Maximum="50" 
                                                Value="{Binding Path=experiment_reps}" 
                                                IsSnapToTickEnabled="True" 
                                                TickFrequency="3" 
                                                KeyboardNavigation.IsTabStop="False"
                                                />
                        <editors:Int32EditBox x:Name="ExpRepReadout" 
                                                CheckBoxVisibility="Collapsed" 
                                                SpinnerVisibility="Collapsed"
                                                HorizontalAlignment="Right"
                                                Width="60" 
                                                CenterSlotHorizontalAlignment="Right"
                                                Value="{Binding ElementName=exp_rep_slider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                                />
                        <TextBlock Text="times" VerticalAlignment="Center" Margin="2,0,0,0"/>
                    </StackPanel>

                    <!-- Toroidal BoundaryTypeToBooleanConv
                    SelectedIndex="{Binding Path=scenario.environment.toroidal, Converter=BoolToIndexConv}"
                    -->
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Boundary Condition" FontWeight="Bold" Margin="0,20,0,0"/>
                        <CheckBox x:Name="cbToroidal" Margin="10,22" Visibility="Hidden" IsChecked="{Binding Path=scenario.environment.toroidal}"/>
                        <ComboBox x:Name="comboToroidal" MinWidth="120" Margin="12,10" Height="22"
                                  SelectedIndex="{Binding scenario.environment.toroidal, Converter={StaticResource BoolToIndexConv}}"
                                  ItemsSource="{Binding Source={StaticResource boundaryTypes}}"
                                  SelectionChanged="comboToroidal_SelectionChanged"
                                  >
                        </ComboBox>
                        <!--<Button Click="Button_Click"></Button>-->
                    </StackPanel>
                    
                </StackPanel>
            </ScrollViewer>
        </TabItem>
        
        <!-- EXTRACELLULAR MEDIUM -->
        <TabItem x:Name="tabECM" Header="Extracellular Medium" AutomationProperties.AutomationId="DaphneECMTab" >
            <ScrollViewer VerticalScrollBarVisibility="Auto">
                <StackPanel Name="ConfigStackPanel" Orientation="Vertical" Margin="8">
                    <!-- Environment -->
                    <Expander
                                                Padding="5" 
                                                ExpandDirection="Down"
                                                IsExpanded="False"
                                                Header="Extracellular Medium Extents"                                              
                                                x:Name="EnvironmentExpander"
                                                Margin="0,5,0,0" 
                                                Canvas.ZIndex="1"
                                                BorderThickness="1"
                                                BorderBrush="Black"
                                                Background="{shared:LinearGradientBrush #EEEEEE, #CCCCCC, GradientType=TopLeftToBottomRight}" >

                        <StackPanel>

                        <TextBlock Text="Extracellular Medium Extents" FontWeight="Bold" Margin="0,-10,0,0" />
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="X" Margin="6,0"
                                                    Grid.Column="0" Grid.Row="2"  
                                                    HorizontalAlignment="Right" VerticalAlignment="Center"
                                                    TextAlignment="Right"
                                                    Width="60"
                                                    />
                            <Slider Name="extent_x_slider"
                                                Orientation="Horizontal"
                                                VerticalAlignment="Center"
                                                Width="100"
                                                RenderTransform="1.0,0,0,0.5,0,7"
                                                Minimum="{Binding Path=scenario.environment.extent_min}" 
                                                Maximum="{Binding Path=scenario.environment.extent_max}" 
                                                Value="{Binding Path=scenario.environment.extent_x}" 
                                                IsSnapToTickEnabled="True" 
                                                TickFrequency="1" 
                                                KeyboardNavigation.IsTabStop="False"
                                                />
                            <editors:DoubleEditBox x:Name="ExtentXReadout" 
                                                              CenterSlotHorizontalAlignment="Right"
                                                                  CheckBoxVisibility="Collapsed" 
                                                                  SpinnerVisibility="Collapsed"
                                                                  HorizontalAlignment="Right"
                                                                  Width="60"
                                                              Value="{Binding ElementName=extent_x_slider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                                              />
                            <TextBlock Text="µm" VerticalAlignment="Center" Margin="2,0,0,0"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Y" Margin="6,0"
                                                    Grid.Column="0" Grid.Row="2"  
                                                    HorizontalAlignment="Right" VerticalAlignment="Center"
                                                    TextAlignment="Right"
                                                    Width="60"
                                                    />
                            <Slider Name="extent_y_slider"
                                                    Orientation="Horizontal"
                                                    VerticalAlignment="Center"
                                                    Width="100"
                                                    RenderTransform="1.0,0,0,0.5,0,7"
                                                    Minimum="{Binding Path=scenario.environment.extent_min}" 
                                                    Maximum="{Binding Path=scenario.environment.extent_max}" 
                                                    Value="{Binding Path=scenario.environment.extent_y}" 
                                                    IsSnapToTickEnabled="True" 
                                                    TickFrequency="1" 
                                                    KeyboardNavigation.IsTabStop="False"
                                                    />
                            <editors:DoubleEditBox x:Name="ExtentYReadout"                                                    
                                                                  CenterSlotHorizontalAlignment="Right"
                                                                  CheckBoxVisibility="Collapsed" 
                                                                  SpinnerVisibility="Collapsed"
                                                                  HorizontalAlignment="Right"
                                                                  Width="60" 
                                                                  Value="{Binding ElementName=extent_y_slider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                                                  />
                            <TextBlock Text="µm" VerticalAlignment="Center" Margin="2,0,0,0"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Z" Margin="6,0"
                                                    Grid.Column="0" Grid.Row="2"  
                                                    HorizontalAlignment="Right" VerticalAlignment="Center"
                                                    TextAlignment="Right"
                                                    Width="60"
                                                    />
                        <Slider Name="extent_z_slider"
                                                Orientation="Horizontal"
                                                VerticalAlignment="Center"
                                                Width="100"
                                                RenderTransform="1.0,0,0,0.5,0,7"
                                                Minimum="{Binding Path=scenario.environment.extent_min}" 
                                                Maximum="{Binding Path=scenario.environment.extent_max}" 
                                                Value="{Binding Path=scenario.environment.extent_z}" 
                                                IsSnapToTickEnabled="True" 
                                                TickFrequency="1" 
                                                KeyboardNavigation.IsTabStop="False"
                                                />
                        <editors:DoubleEditBox x:Name="ExtentZReadout" 
                                                              CenterSlotHorizontalAlignment="Right"
                                                                  CheckBoxVisibility="Collapsed" 
                                                                  SpinnerVisibility="Collapsed"
                                                                  HorizontalAlignment="Right"
                                                                  Width="60" 
                                                              Value="{Binding ElementName=extent_z_slider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                                              />
                        <TextBlock Text="µm" VerticalAlignment="Center" Margin="2,0,0,0"/>
                    </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="grid size" Margin="6,0"
                                                    Grid.Column="0" Grid.Row="2"  
                                                    HorizontalAlignment="Right" VerticalAlignment="Center"
                                                    TextAlignment="Right"
                                                    Width="60"
                                                    />
                                <Slider Name="sliderGridStep"
                                                    Orientation="Horizontal"
                                                    VerticalAlignment="Center"
                                                    Width="100"
                                                    RenderTransform="1.0,0,0,0.5,0,7"
                                                    Minimum="{Binding Path=scenario.environment.gridstep_min}" 
                                                    Maximum="{Binding Path=scenario.environment.gridstep_max}" 
                                                    Value="{Binding Path=scenario.environment.gridstep}" 
                                                    IsSnapToTickEnabled="True" 
                                                    TickFrequency="1" 
                                                    KeyboardNavigation.IsTabStop="False"
                                                    />
                                <editors:DoubleEditBox x:Name="GridStepReadout" 
                                                                  CenterSlotHorizontalAlignment="Right"
                                                                  CheckBoxVisibility="Collapsed" 
                                                                  SpinnerVisibility="Collapsed"
                                                                  HorizontalAlignment="Right"
                                                                  Width="60" 
                                                                  Value="{Binding ElementName=sliderGridStep, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                                                  />
                                <TextBlock Text="µm" VerticalAlignment="Center" Margin="2,0,0,0"/>
                            </StackPanel>

                        </StackPanel>
                        
                    </Expander>
                    <!-- Library Molecular Populations -->
                    <Expander
                            Padding="5" 
                            ExpandDirection="Down"
                                IsExpanded="False"
                                Header="Molecular Populations"                                              
                                x:Name="MolPopsExpander"
                                Margin="0,5,0,0" 
                                Canvas.ZIndex="1"
                            BorderThickness="1"
                            BorderBrush="Black"
                            Background="{shared:LinearGradientBrush #EEEEEE, #CCCCCC, GradientType=TopLeftToBottomRight}"
                            >

                        <StackPanel>
                            <StackPanel.Resources>
                                <DataTemplate x:Key="ecsMolListItemTemplate">
                                    <StackPanel Orientation="Horizontal">

                                        <TextBlock Text="{Binding Path=Name}" Margin="5,0,0,0"/>
                                    </StackPanel>
                                </DataTemplate>
                                <DataTemplate x:Key="libMolListItemTemplate">
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="{Binding Path=Name}" 
                                                   Foreground="Black" 
                                                   Margin="5,0,0,0" />
                                    </StackPanel>
                                </DataTemplate>
                            </StackPanel.Resources>
                            <!-- Molecular Populations -->                            
                            <StackPanel>
                                <StackPanel.ToolTip>
                                    <StackPanel Width="200" Orientation="Horizontal">
                                        <TextBlock TextWrapping="Wrap" HorizontalAlignment="Left" VerticalAlignment="Top" Padding="5" Width="200">
                                                Click Add button to create a population of cells from a subset defined below. 
                                    Specify the number of cells, their color and the region (from above) that will contain these cells.
                                        </TextBlock>
                                    </StackPanel>
                                </StackPanel.ToolTip>
                                <TextBlock Text="Molecular Populations" FontWeight="Bold" Margin="0,-10,0,0" >
                                </TextBlock>

                            </StackPanel>
                            <ListBox x:Name="lbEcsMolPops" MinHeight="50"
                                    ItemsSource="{Binding Path=scenario.environment.ecs.molpops, Mode=TwoWay}" 
                                    ItemTemplate="{Binding Source={StaticResource ecsMolListItemTemplate}}"
                                    SelectedIndex="-1"
                            />

                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Canvas.ZIndex="10">
                                <Button Name="AddEcmMolButton"  Width="50" Content="New" Click="AddEcmMolButton_Click"/>
                                <Button Name="RemoveEcmMolButton" Width="50" Content="Remove" Click="RemoveEcmMolButton_Click" />
                            </StackPanel>
                            <Expander ExpandDirection="Down"
                                              IsExpanded="False"
                                              Header="Details"
                                              x:Name="MolDetailsExpander"
                                              Margin="0,-15,0,0" 
                                              Canvas.ZIndex="1"
                                              >

                                <StackPanel Orientation="Vertical">
                                    <!--<ContentControl Name="MolPopDetails"
                                                Content="{Binding ElementName=lbEcsMolPops, Path=SelectedItem}" 
                                                ContentTemplate="{StaticResource newMolPopDetailsTemplate}" 
                                                Margin="6"/>-->

                                    <StackPanel Orientation="Horizontal" DataContext="{Binding ElementName=lbEcsMolPops, Path=SelectedItem}">
                                        <StackPanel>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition />
                                                    <RowDefinition />
                                                    <RowDefinition />
                                                    <RowDefinition />
                                                    <RowDefinition />
                                                    <RowDefinition />
                                                    <RowDefinition />
                                                    <RowDefinition />
                                                    <RowDefinition />
                                                </Grid.RowDefinitions>
                                                <StackPanel Orientation="Horizontal" Grid.Column="0" Grid.Row="3" >
                                                    <TextBlock Text="name" Margin="0,0" HorizontalAlignment="Right"  VerticalAlignment="Center" TextAlignment="Right" MinWidth="60"/>
                                                    <TextBox Text="{Binding Path=Name, UpdateSourceTrigger=PropertyChanged}"  Margin="4,2" MinWidth="140" HorizontalAlignment="Left"/>
                                                </StackPanel>
                                                <StackPanel Orientation="Horizontal" Grid.Column="0" Grid.Row="1" Margin="0,10">
                                                    <TextBlock Text="color" Margin="0,0" HorizontalAlignment="Right" VerticalAlignment="Center" TextAlignment="Right" MinWidth="60"  />
                                                    <editors:ColorEditBox x:Name="cellColorEditBox"
                                                        CheckBoxVisibility="Collapsed"
                                                        SpinnerVisibility="Collapsed"
                                                        Width="140"
                                                        HorizontalAlignment="Left" 
                                                        Format="a r g b"
                                                        Value="{Binding Path=mp_color, UpdateSourceTrigger=PropertyChanged}"
                                                        Margin="4,2"
                                                        ValueChanged="molPopColorEditBox_ValueChanged"
                                                        />
                                                </StackPanel>
                                                <StackPanel Orientation="Horizontal" Grid.Column="0" Grid.Row="2" Margin="0,0" IsEnabled="{Binding Path=mp_render_on}">
                                                    <TextBlock Text="render wt" Margin="0,0" MinWidth="60"  VerticalAlignment="Center"  TextAlignment="Right"  />
                                                    <Slider x:Name="solfac_weight_slider"
                                                        Orientation="Horizontal"
                                                        VerticalAlignment="Center"
                                                        HorizontalAlignment="Left"
                                                        Width="50"
                                                        Margin="4,0"
                                                        RenderTransform="1.0,0,0,0.5,0,7"
                                                        Minimum="0" 
                                                        Maximum="5" 
                                                        Value="{Binding Path=mp_render_blending_weight}" 
                                                        IsSnapToTickEnabled="True" 
                                                        TickFrequency="0.1" 
                                                    />
                                                    <TextBlock Text="{Binding ElementName=solfac_weight_slider, Path=Value}" 
                                                        VerticalAlignment="Center"
                                                        TextAlignment="Right"
                                                        Margin="5,0,0,0"
                                                        MinWidth="20"
                                                        />
                                                </StackPanel>
                                                <StackPanel Orientation="Horizontal" Grid.Column="0" Grid.Row="0" Margin="0,10">
                                                    <TextBlock Text="molecule" Margin="0,0" HorizontalAlignment="Right" VerticalAlignment="Center"  TextAlignment="Right" MinWidth="60"/>

                                                    <ComboBox  x:Name="ecm_molecule_combo_box" MinWidth="140" HorizontalAlignment="Left"  Margin="4,0" 
                                                    
                                                        DisplayMemberPath="Name"
                                                        SelectedValue="{Binding Path=molecule.entity_guid, UpdateSourceTrigger=Explicit}"
                                                        SelectedValuePath="entity_guid"
                                                        SelectionChanged="ecs_molpop_molecule_combo_box_SelectionChanged"
                                                        GotFocus="ecm_molecule_combo_box_GotFocus"
                                                        >
                                                        <ComboBox.ItemsSource>
                                                            <CompositeCollection>
                                                                <CollectionContainer Collection="{Binding Source={StaticResource newBulkMoleculesListView}}" />
                                                                <daph:ConfigMolecule Name="New Molecule"/>
                                                            </CompositeCollection>
                                                        </ComboBox.ItemsSource>

                                                    </ComboBox>
                                                </StackPanel>

                                            </Grid>
                                        </StackPanel>
                                        <StackPanel Margin="10,0">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition />
                                                    <RowDefinition />
                                                </Grid.RowDefinitions>
                                                <StackPanel Orientation="Horizontal" Grid.Column="0" Grid.Row="0">
                                                    <TextBlock Text="initial distribution" Margin="0,0" HorizontalAlignment="Right" VerticalAlignment="Center" />

                                                    <ComboBox Margin="10,0" 
                                        Name="MolPopDistributionTypeComboBox"
                                        ItemsSource="{Binding Source={StaticResource molpopDistributionTypes}}"
                                        ItemTemplate="{Binding Source={StaticResource molpopDistributionTypeTemplate}}"
                                        SelectedValue="{Binding Path=mp_distribution.mp_distribution_type, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"                                        
                                        SelectionChanged="MolPopDistributionComboBox_SelectionChanged"
                                        GotFocus="MolPopDistributionTypeComboBox_GotFocus"
                                        MinWidth="120">

                                                        <ComboBox.Style>
                                                            <Style TargetType="ComboBox">
                                                                <Style.Triggers>
                                                                    <MultiDataTrigger>
                                                                        <MultiDataTrigger.Conditions>
                                                                            <Condition Binding="{Binding ElementName=cbBoundFace, Path=SelectedIndex}" Value="0" />
                                                                            <Condition Binding="{Binding ElementName=MolPopDistributionTypeComboBox, Path=SelectedIndex}" Value="1"/>
                                                                        </MultiDataTrigger.Conditions>
                                                                        <Setter Property="ComboBox.SelectedIndex" Value="0"/>
                                                                    </MultiDataTrigger>

                                                                </Style.Triggers>
                                                            </Style>
                                                        </ComboBox.Style>

                                                        <ComboBox.ItemContainerStyle>
                                                            <Style TargetType="{x:Type ComboBoxItem}">
                                                                <Style.Triggers>
                                                                    <MultiDataTrigger>
                                                                        <MultiDataTrigger.Conditions>
                                                                            <Condition Binding="{Binding ElementName=cbBoundFace,Path=Visibility}" Value="Hidden" />
                                                                            <Condition Binding="{Binding ComboBoxItem.Content}" Value="Linear" />
                                                                        </MultiDataTrigger.Conditions>
                                                                        <Setter Property="IsEnabled" Value="False" />
                                                                    </MultiDataTrigger>

                                                                </Style.Triggers>
                                                            </Style>
                                                        </ComboBox.ItemContainerStyle>
                                                    </ComboBox>
                                                </StackPanel>

                                                <StackPanel Grid.Column="0" Grid.Row="1">
                                                    <ContentControl Name="SolfacDistributionDetails"
                                                    Content="{Binding ElementName=lbEcsMolPops, Path=SelectedItem}" 
                                                    ContentTemplate="{StaticResource molpopDistributionDetailsTemplate}" 
                                                    Margin="6,2"/>
                                                </StackPanel>

                                            </Grid>
                                        </StackPanel>
                                    </StackPanel>
                                </StackPanel>

                            </Expander>
                            <Expander ExpandDirection="Down"
                                              IsExpanded="False"
                                              Header="Molecule Properties"
                                              x:Name="ecmMolPropExpander"
                                              Margin="0,0,0,0" 
                                              Canvas.ZIndex="1"
                                              DataContext="{Binding ElementName=lbEcsMolPops, Path=SelectedItem}"
                                              >

                                <ContentControl Name="ecmMolpopMolDetails"
                                        Content="{Binding Path=molecule}" 
                                        ContentTemplate="{StaticResource editMoleculeTemplate}" 
                                        Margin="6"/>
                            </Expander>
                        </StackPanel>
                    </Expander>
                    <!-- Reactions -->
                    <Expander
                        Padding="5" 
                        ExpandDirection="Down"
                            IsExpanded="False"
                            Header="Reactions"                                              
                            x:Name="ReacExpander"
                            Margin="0,5,0,0" 
                            Canvas.ZIndex="1"
                        BorderThickness="1"
                        BorderBrush="Black"
                        Background="{shared:LinearGradientBrush #EEEEEE, #CCCCCC, GradientType=TopLeftToBottomRight}" >
                        
                        <StackPanel>
                            <!-- Reactions -->
                            <StackPanel>
                                <StackPanel.ToolTip>
                                    <StackPanel Width="200" Orientation="Horizontal">
                                        <TextBlock TextWrapping="Wrap" HorizontalAlignment="Left" VerticalAlignment="Top" Padding="5" Width="200">
                                                Click Add button to add a reaction to the extracellular medium from a list of reactions in the list box below.
                                        </TextBlock>
                                    </StackPanel>
                                </StackPanel.ToolTip>
                                <TextBlock Text="Reactions in ECM" FontWeight="Bold" Margin="0,-10,0,0" >
                                </TextBlock>

                            </StackPanel>
                            
                            <ListView x:Name="lvEcsReactions" 
                                      ItemsSource="{Binding Path=scenario.environment.ecs.Reactions}"
                                      SelectedIndex="-1"
                                >
                                
                                <ListView.View>
                                    <GridView>
                                        <GridView.ColumnHeaderContainerStyle>
                                            <Style TargetType="GridViewColumnHeader">
                                                <Setter Property="Height" Value="Auto"></Setter>
                                                <Setter Property="Background">
                                                    <Setter.Value>
                                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                            <GradientStop Offset="0.0" Color="White" />
                                                            <GradientStop Offset="1.0" Color="Beige" />
                                                        </LinearGradientBrush>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </GridView.ColumnHeaderContainerStyle>

                                        <GridViewColumn Width="100" Header="Rate constant">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBox Width="70" Text="{Binding rate_const, StringFormat=G5}">
                                                        <TextBox.Style>
                                                            <Style>
                                                                <Setter Property="TextBox.Foreground" 
                                                                        Value="Black">
                                                                </Setter>
                                                            </Style>
                                                        </TextBox.Style>
                                                    </TextBox>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn Width="300" Header="Reaction" >

                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding TotalReactionString}">
                                                        <TextBlock.Style>
                                                            <Style>
                                                                <Setter Property="TextBlock.Foreground" 
                                                                        Value="Black">
                                                                </Setter>
                                                            </Style>
                                                        </TextBlock.Style>
                                                    </TextBlock>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>

                                        </GridViewColumn>
                                    </GridView>
                                </ListView.View>
                                
                            </ListView>
                            
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Canvas.ZIndex="10">
                                <Button Name="RemoveEcmReacButton" Width="50" Content="Remove" Click="RemoveEcmReacButton_Click" />
                            </StackPanel>

                            <!--<StackPanel>
                                <Expander ExpandDirection="Down"
                                              IsExpanded="False"
                                              Header="Reaction Properties"
                                              x:Name="ReacPropExpander"
                                              Margin="0,0,0,0" 
                                              Canvas.ZIndex="1"
                                              DataContext="{Binding ElementName=lvEcsReactions, Path=SelectedItem}"
                                              >
                                    <ContentControl Name="ccReactionProperties"
                                        Content="{Binding}" 
                                        ContentTemplate="{StaticResource editReactionTemplate}" 
                                        Margin="6"/>
                                </Expander>
                            </StackPanel>-->

                            <Expander ExpandDirection="Down"
                                              IsExpanded="False"
                                              Header="Add a reaction"
                                              x:Name="AddReacExpander"
                                              Margin="0,0,0,0" 
                                              Canvas.ZIndex="1"
                                              >
                                <StackPanel Orientation="Vertical" Margin="10,0">
                                    <TextBlock Text="Available Reactions" Grid.Column="0" Grid.Row="3"  FontWeight="Bold"  Margin="0,0,6,0" />
                                    <ListView x:Name="lvAvailableReacs" Grid.Column="0" Grid.Row="4" Grid.ColumnSpan="2" Margin="0,0,6,0" AlternationCount="2"   
                                                ItemsSource="{Binding Source={StaticResource ecmAvailableReactionsListView}}"
                                                SelectedIndex="0"
                                                MinHeight="50" MaxHeight="150"
                                    >
                                        <ListView.View>
                                            <GridView>
                                                <GridView.ColumnHeaderContainerStyle>
                                                    <Style TargetType="GridViewColumnHeader">
                                                        <Setter Property="Height" Value="Auto"></Setter>
                                                        <Setter Property="Background">
                                                            <Setter.Value>
                                                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                                    <GradientStop Offset="0.0" Color="White" />
                                                                    <GradientStop Offset="1.0" Color="Beige" />
                                                                </LinearGradientBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </GridView.ColumnHeaderContainerStyle>

                                                <GridViewColumn Width="80" Header="Rate constant">
                                                    <GridViewColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <uc:DoublesBox SliderEnabled="False" IsReadOnly="True"
                                                                Number="{Binding rate_const}">                                                                
                                                            </uc:DoublesBox>
                                                        </DataTemplate>
                                                    </GridViewColumn.CellTemplate>
                                                </GridViewColumn>
                                                <GridViewColumn Width="300" Header="Reaction" >
                                                    <GridViewColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <TextBlock Text="{Binding TotalReactionString}">
                                                        <TextBlock.Style>
                                                            <Style>
                                                                <Setter Property="TextBlock.Foreground"  Value="Black">
                                                                </Setter>
                                                            </Style>
                                                        </TextBlock.Style>
                                                            </TextBlock>
                                                        </DataTemplate>
                                                    </GridViewColumn.CellTemplate>

                                                </GridViewColumn>
                                            </GridView>
                                        </ListView.View>
                                    </ListView>
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Canvas.ZIndex="10">
                                        <Button Name="AddEcmReacButton"  Width="50" Content="Add" Click="AddEcmReacButton_Click"/>
                                    </StackPanel>
                                </StackPanel>
                            </Expander>

                            <Expander 
                                    ExpandDirection="Down"
                                    IsExpanded="False"
                                    Header="Create New Reaction"                                                  
                                    x:Name="CreateNewReaction"
                                    Margin="0,0,0,0" 
                                    Canvas.ZIndex="1"
                                    
                                    >
                                   
                                <Grid>
                                    <local:AddReactionControl Margin="0,6"/>
                                </Grid>
                            </Expander>

                        </StackPanel>
                    </Expander>
                    
                    <!-- Remove reaction complexes for now 10/15/13 -->
                    <!-- Reaction Complexes -->
                    <Expander
                        Visibility="Hidden"
                        Padding="5" 
                        ExpandDirection="Down"
                            IsExpanded="False"
                            Header="Reaction Complexes"                                            
                            x:Name="ReacCompExpander"
                            Margin="0,5,0,0" 
                            Canvas.ZIndex="1"
                        BorderThickness="1"
                        BorderBrush="Black"
                        Background="{shared:LinearGradientBrush #EEEEEE, #CCCCCC, GradientType=TopLeftToBottomRight}" >

                        <StackPanel>
                            
                            <StackPanel>
                                <StackPanel.Resources>
                                    <DataTemplate x:Key="reacComplexListItemTemplate">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{Binding Path=Name}" />
                                        </StackPanel>
                                    </DataTemplate>
                                    <DataTemplate x:Key="ecsReacComplexListItemTemplate">                                        
                                        <TextBlock Text="{Binding   Converter={StaticResource ReacComplexGUIDtoStringConv},
                                                            ConverterParameter={StaticResource ecmReactionComplexesListView}}">
                                        </TextBlock>
                                    </DataTemplate>
                                </StackPanel.Resources>

                                <StackPanel.ToolTip>
                                    <StackPanel Width="200" Orientation="Horizontal">
                                        <TextBlock TextWrapping="Wrap" HorizontalAlignment="Left" VerticalAlignment="Top" Padding="5" Width="200">
                                                        Click Add button to add a reaction complex to the extracellular medium from a list of reactions complexes in the list box below.
                                        </TextBlock>
                                    </StackPanel>
                                </StackPanel.ToolTip>
                                <TextBlock Text="Reaction Complexes" Margin="0,-10,0,0" >
                                </TextBlock>
                        
                                <ListBox x:Name="ReactionComplexListBox" MinHeight="50" 
                                    ItemsSource="{Binding Path=scenario.environment.ecs.reaction_complexes_guid_ref}" 
                                    ItemTemplate="{Binding Source={StaticResource ecsReacComplexListItemTemplate}}"
                                    SelectedIndex="0"
                                 />

                            </StackPanel>
                    
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Canvas.ZIndex="10">
                                <Button Name="RemoveReacCompButton" Width="50" Content="Remove" Click="RemoveEcmReacCompButton_Click" />
                            </StackPanel>


                            <Expander ExpandDirection="Down"
                                    IsExpanded="False"
                                    Header="Details"
                                    x:Name="ReactionComplexDetailsExpander"
                                    Margin="0,5,0,0" 
                                    Canvas.ZIndex="1"
                                    BorderThickness="1"
                                    BorderBrush="Black"
                                    Background="{shared:LinearGradientBrush #EEEEEE, #CCCCCC, GradientType=TopLeftToBottomRight}" >

                                <StackPanel Orientation="Vertical" >
                                    <!--<StackPanel.Resources>
                                        <DataTemplate x:Key="ecsReacListItemTemplate">
                                            <TextBlock Text="{Binding   Converter={StaticResource ReacGUIDtoReacStringConv},
                                                            ConverterParameter={StaticResource ecmReactionsListView}}">
                                            </TextBlock>
                                        </DataTemplate>
                                        
                                        
                                    </StackPanel.Resources>-->
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="Name" Margin="6,0" HorizontalAlignment="Right" VerticalAlignment="Center" />
                                        <TextBox Margin="0,2" x:Name="txtReacComplexName" IsReadOnly="True" 
                                                Text="{Binding  ElementName=ReactionComplexListBox, 
                                                                Path=SelectedItem,
                                                                Converter={StaticResource ReacComplexGUIDtoStringConv},
                                                                ConverterParameter={StaticResource ecmReactionComplexesListView}}" 
                                                                />
                                    </StackPanel >
                                    <StackPanel x:Name="spReacComp"
                                        Tag="{Binding ElementName=ReactionComplexListBox, Path=SelectedItem, 
                                                        Converter={StaticResource ReacComplexGUIDtoReactionComplexConv},
                                                        ConverterParameter={StaticResource ecmReactionComplexesListView}}">

                                        <StackPanel.Resources>                                            
                                            <DataTemplate x:Key="cellReacListItemTemplate">
                                                <TextBlock Text="{Binding Converter={StaticResource ReacGUIDtoReacStringConv},
                                                            ConverterParameter={StaticResource ecmReactionsListView}}">
                                                </TextBlock>
                                            </DataTemplate>
                                        </StackPanel.Resources>

                                        <TextBlock Text="Reactions" Margin="6,0"  />

                                        <ListBox x:Name="ecmRCReacsListBox" MinHeight="50" Height="100" MaxHeight="100" AlternationCount="2"
                                                ItemsSource="{Binding ElementName=spReacComp, Path=Tag.reactions_guid_ref, Mode=OneWay, UpdateSourceTrigger=PropertyChanged }"
                                                ItemTemplate="{Binding Source={StaticResource cellReacListItemTemplate}}"
                                                 
                                                >
                                        </ListBox>
                                        
                                        
                                    </StackPanel>
                                    
                                </StackPanel>
                            </Expander>

                            <Expander ExpandDirection="Down"
                                IsExpanded="False"
                                Header="Add reaction complex"
                                x:Name="AddReacCxExpander"
                                Margin="0,5,0,0" 
                                Canvas.ZIndex="1"
                                BorderThickness="1"
                                BorderBrush="Black"
                                Background="{shared:LinearGradientBrush #EEEEEE, #CCCCCC, GradientType=TopLeftToBottomRight}" >
                                              
                                <StackPanel Orientation="Vertical" Margin="10,0">
                                    <StackPanel.Resources>
                                        <DataTemplate x:Key="reacCxListItemTemplate">
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="{Binding Path=Name}" />
                                            </StackPanel>
                                        </DataTemplate>

                                        <DataTemplate x:Key="rcReacListItemTemplate">
                                            <TextBlock Text="{Binding   Converter={StaticResource ReacGUIDtoReacStringConv},
                                                            ConverterParameter={StaticResource ecmReactionsListView}}">
                                            </TextBlock>
                                        </DataTemplate>

                                        <DataTemplate x:Key="addEcsReacComplexDetailsTemplate">
                                            <StackPanel>                                                
                                                <StackPanel Orientation="Vertical">
                                                    <TextBlock Text="Reactions in selected Complex" Grid.Column="0" Grid.Row="3"  Margin="0,-10,0,0" />
                                                    <ListBox x:Name="lbReacsInComplex" Grid.Column="0" Grid.Row="4" Grid.ColumnSpan="2" Margin="0,0,5,0" MinHeight="50"  AlternationCount="2"                                                        
                                                        ItemsSource="{Binding Path=reactions_guid_ref, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"                                                      
                                                        ItemTemplate="{Binding Source={StaticResource rcReacListItemTemplate}}" >
                                                    </ListBox>
                                                </StackPanel>
                                            </StackPanel>
                                        </DataTemplate>
                                    </StackPanel.Resources>
                                    
                                    <TextBlock Text="Reaction Complexes Library"  Margin="0,0,6,0" />
                                    <ListBox x:Name="lbAvailableReacCx" Grid.Column="0" Grid.Row="4" Grid.ColumnSpan="2" Margin="0,0,6,0" MinHeight="50" AlternationCount="2"                                                        
                                        ItemsSource="{Binding Path=entity_repository.reaction_complexes}"                                                      
                                        ItemTemplate="{Binding Source={StaticResource reacCxListItemTemplate}}"
                                        SelectedIndex="0"
                                        >
                                    </ListBox>
                                    <StackPanel Orientation="Vertical" HorizontalAlignment="Right" Margin="0,0,6,0" Canvas.ZIndex="10">
                                        <Button Name="AddReacCxButton"  Width="50" Content="Add" Click="AddEcmReacCompButton_Click"/>
                                    </StackPanel>

                                    <ContentControl Name="AddReactionComplexDetails"
                                        Content="{Binding ElementName=lbAvailableReacCx, Path=SelectedItem}" 
                                        ContentTemplate="{StaticResource addEcsReacComplexDetailsTemplate}" 
                                        Margin="6"/>
                                
                                </StackPanel>
                            </Expander>

                            
                            
                        </StackPanel>
                    </Expander>

                    
                </StackPanel>
            </ScrollViewer>
        </TabItem>

        <!-- LIBRARY CELL POPULATIONS -->
        <TabItem x:Name="tabCellPop" Header="Cell Populations" AutomationProperties.AutomationId="DaphneCellPopsTab">
            <ScrollViewer VerticalScrollBarVisibility="Auto">
                <StackPanel x:Name="EntitiesStackPanel" Orientation="Vertical" Margin="8">

                    <!-- CELL POPULATIONS -->
                    <Expander ExpandDirection="Down" Padding="5"
                            IsExpanded="True"
                            Header="Cell Populations"
                            x:Name="CellPopsExpander"
                            Margin="0,4,0,0" 
                            Canvas.ZIndex="1"
                            BorderThickness="1"
                            BorderBrush="Black"
                            Background="{shared:LinearGradientBrush #EEEEEE, #CCCCCC, GradientType=TopLeftToBottomRight}"
                            >

                        <StackPanel>
                            <ListBox x:Name="CellPopsListBox" MinHeight="50" 
                                             ItemsSource="{Binding Path=scenario.cellpopulations, UpdateSourceTrigger=PropertyChanged}" 
                                             ItemTemplate="{Binding Source={StaticResource cellPopListItemTemplate}}"
                                             SelectedIndex="0"
                                             SelectionChanged="cellPopsListBoxSelChanged"
                                     
                                             />
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Canvas.ZIndex="10">
                                <Button Name="AddCellPopButton"  Width="50" Content="New" Click="AddCellPopButton_Click"/>
                                <Button Name="RemoveCellPopButton" Width="50" Content="Remove" Click="RemoveCellPopButton_Click" />
                            </StackPanel>
                            <Expander ExpandDirection="Down" Padding="6"
                                    IsExpanded="True"
                                    Header="Cell Population Details"
                                    x:Name="CellPopsDetailsExpander"
                                    Margin="0,-15,0,0" 
                                    Canvas.ZIndex="1"
                                    >

                                <StackPanel Orientation="Vertical">
                                    <StackPanel Orientation="Horizontal">
                                        <ContentControl Name="CellPopDetails"
                                                Content="{Binding ElementName=CellPopsListBox, Path=SelectedItem}" 
                                                ContentTemplate="{StaticResource cellPopDetailsTemplate}" 
                                                Margin="6,-4"/>
                                    </StackPanel>
                                </StackPanel>
                            </Expander>
                            <Expander  Padding="12"
                                ExpandDirection="Down"
                                IsExpanded="False"
                                Header="Cell Properties"                                              
                                x:Name="CellDetExpander"
                                Margin="6,-15,0,0" 
                                 >
                                <Expander.Resources>
                                    
                                </Expander.Resources>

                                <local:DaphneStackPanel x:Name="EcmMolpopPanelCellMolPops" >
                                    <StackPanel Orientation="Horizontal" Margin="10,0">
                                        
                                            <!--<ContentControl Name="CellPopCellTypeProperties" 
                                                    Content="{Binding ElementName=CellPopsListBox, Path=SelectedItem.Cell}" 
                                                    ContentTemplate="{StaticResource ResourceKey=cellDetailsTemplate}" 
                                                    Margin="6,0"/>-->
                                        <local:CellPropertiesControl DataContext="{Binding ElementName=CellPopsListBox, Path=SelectedItem.Cell}"/>
                                    </StackPanel>

                                    <StackPanel Margin="10,6">
                                        <local:CellDetailsControl DataContext="{Binding ElementName=CellPopsListBox, Path=SelectedItem.Cell}"/>
                                    </StackPanel>
                                    
                                </local:DaphneStackPanel>
                                
                                

                            </Expander>
                            
                        </StackPanel>
                    </Expander>

                   


                    <!-- Cell Interaction Parameters -->
                    <Expander
                            Padding="5" 
                            ExpandDirection="Down"
                                IsExpanded="False"
                                Header="Cell Interaction Parameters"                                              
                                x:Name="CellParamsExpander"
                                Margin="0,5,0,0" 
                                Canvas.ZIndex="1"
                            BorderThickness="1"
                            BorderBrush="Black"
                            Background="{shared:LinearGradientBrush #EEEEEE, #CCCCCC, GradientType=TopLeftToBottomRight}" >

                        <StackPanel>

                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="penetration resistance" Margin="6,0"
                                                    Grid.Column="0" Grid.Row="2"  
                                                    HorizontalAlignment="Right" VerticalAlignment="Center"
                                                    TextAlignment="Right"
                                                    Width="120"
                                                    />
                                <editors:DoubleEditBox x:Name="phi1_readout" 
                                                              CheckBoxVisibility="Collapsed" 
                                                              SpinnerVisibility="Collapsed"
                                                              HorizontalAlignment="Right"
                                                              Format="F2"
                                                              StepValue="100"
                                                              Width="50" 
                                                              CenterSlotHorizontalAlignment="Right"
                                                              Value="{Binding Path=sim_params.phi1, UpdateSourceTrigger=PropertyChanged}"
                                                              />
                                <TextBlock Text="µm^2/min^2" VerticalAlignment="Center" Margin="2,0,0,0"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="phi2" Margin="6,0"
                                                    Grid.Column="0" Grid.Row="3"  
                                                    HorizontalAlignment="Right" VerticalAlignment="Center"
                                                    TextAlignment="Right"
                                                    Width="120"
                                                    />

                                <editors:DoubleEditBox x:Name="phi2_readout" 
                                                              CheckBoxVisibility="Collapsed" 
                                                              SpinnerVisibility="Collapsed"
                                                              HorizontalAlignment="Right"
                                                              Format="N2"
                                                              StepValue="0.1"
                                                              Width="50" 
                                                              CenterSlotHorizontalAlignment="Right"
                                                              Value="{Binding Path=sim_params.phi2, UpdateSourceTrigger=PropertyChanged}"
                                                              />
                                <TextBlock Text="µm^2/min^2" VerticalAlignment="Center" Margin="2,0,0,0"/>
                            </StackPanel>
                        </StackPanel>

                    </Expander>

                </StackPanel>
            </ScrollViewer>
        </TabItem>

        <!-- REPORTS -->
        <TabItem Header="Reports" x:Name="tabReports" Loaded="TabItem_Loaded" AutomationProperties.AutomationId="DaphneReportsTab">
            <ScrollViewer VerticalScrollBarVisibility="Auto">
                <StackPanel Orientation="Vertical" Margin="8" >
                    <StackPanel.Resources >
                        <DataTemplate x:Key="cellTemplate">
                            <StackPanel Orientation="Horizontal">
                                <CheckBox IsEnabled="{Binding}"/>
                            </StackPanel>
                        </DataTemplate>
                        <DataTemplate x:Key="molGuidsListItemTemplate">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding Path=Name}" Margin="5,0,0,0" Width="100"/>
                                <TextBlock Text="    " Margin="5,0,0,0"/>
                                <TextBlock Text="{Binding Path=entity_guid}" Margin="5,0,0,0"/>
                            </StackPanel>
                        </DataTemplate>
                        <DataTemplate x:Key="cellGuidsListItemTemplate">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding Path=CellName}" Margin="5,0,0,0"/>
                                <TextBlock Text="    " Margin="5,0,0,0"/>
                                <TextBlock Text="{Binding Path=entity_guid}" Margin="5,0,0,0"/>
                            </StackPanel>
                        </DataTemplate>
                        <DataTemplate x:Key="reactionGuidsListItemTemplate">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding Path=TotalReactionString}" Margin="5,0,0,0"/>
                                <TextBlock Text="    " Margin="5,0,0,0"/>
                                <TextBlock Text="{Binding Path=entity_guid}" Margin="5,0,0,0"/>
                            </StackPanel>
                        </DataTemplate>
                        <daph:RptEnumBooleanConverter x:Key="rptEnumBoolConverter" />
                        
                    </StackPanel.Resources>

                    <!-- Report Settings -->
                    <Expander ExpandDirection="Down" Padding="5"
                            IsExpanded="False"
                            Header="Report Settings"
                            Margin="0,4,0,0" 
                            Canvas.ZIndex="1"
                            BorderThickness="1"
                            BorderBrush="Black"
                            Background="{shared:LinearGradientBrush #EEEEEE, #CCCCCC, GradientType=TopLeftToBottomRight}"
                            >
                        <StackPanel>
                            <TextBlock Text="File name root:" FontWeight="Bold" Margin="0,-10,0,0" />
                            <TextBox x:Name="txtFileNameRoot" Text="{Binding Path=reporter_file_name, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"></TextBox>
                        </StackPanel>
                    </Expander>


                    <!-- Molecules in Extracellular Medium -->
                    <Expander ExpandDirection="Down" Padding="5"
                            IsExpanded="False"
                            Header="Molecules in Extracellular Medium"
                            Margin="0,4,0,0" 
                            Canvas.ZIndex="1"
                            BorderThickness="1"
                            BorderBrush="Black"
                            Background="{shared:LinearGradientBrush #EEEEEE, #CCCCCC, GradientType=TopLeftToBottomRight}"
                            >
                        <!--<TextBlock Text="Molecules in Extracellular Medium" FontWeight="Bold" Margin="0,5,0,0" />-->
                        <DataGrid x:Name="dgEcmMols" 
                            ItemsSource="{Binding Path=scenario.environment.ecs.molpops}" AutoGenerateColumns="False" 
                            Height="150" MinWidth="200" MinRowHeight="20" MinColumnWidth="20" ColumnWidth="60" MaxColumnWidth="300"
                            CanUserReorderColumns="False" CanUserResizeRows="False"
                            CanUserSortColumns="False" RowHeaderWidth="0"
                            VerticalContentAlignment="Center"
                            CanUserAddRows="False"
                            BorderThickness="1"
                            BorderBrush="Black"
                            >

                            <DataGrid.ColumnHeaderStyle>
                                <Style TargetType="DataGridColumnHeader" >
                                    <Setter Property="FontSize" Value="12" />
                                    <Setter Property="Height" Value="24" />
                                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                                    <Setter Property="BorderThickness" Value="1" />
                                    <Setter Property="BorderBrush" Value="Black" />
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                <GradientStop Offset="0.0" Color="White" />
                                                <GradientStop Offset="1.0" Color="Beige" />
                                            </LinearGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </DataGrid.ColumnHeaderStyle>

                            <DataGrid.Columns>

                                <DataGridTemplateColumn Header="molecular population" Width="150">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock HorizontalAlignment="Center" Text="{Binding Path=Name, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTemplateColumn Header="mean">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox HorizontalAlignment="Center" IsChecked="{Binding Path=report_mp.mean, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTemplateColumn Header="full">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <!--<RadioButton GroupName="{Binding molpop.molecule_guid_ref}" HorizontalAlignment="Center" IsChecked="{Binding Path=full, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>-->
                                            <!--<RadioButton GroupName="{Binding molecule_guid_ref}" 
                                                     IsChecked="{Binding Path=report_mp.mp_extended, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource rptEnumBoolConverter}, ConverterParameter=LEAN}"
                                                     >
                                        </RadioButton>-->
                                            <CheckBox HorizontalAlignment="Center" IsChecked="{Binding Path=report_mp.mp_extended, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource rptEnumBoolConverter}, ConverterParameter=LEAN}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTemplateColumn Header="full+gradient" Width="90">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <!--<RadioButton GroupName="{Binding molecule_guid_ref}"  HorizontalAlignment="Center" IsChecked="{Binding Path=fullgrad, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>-->
                                            <!--<RadioButton GroupName="{Binding molecule_guid_ref}" 
                                                     IsChecked="{Binding Path=report_mp.mp_extended, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource rptEnumBoolConverter}, ConverterParameter=COMPLETE}"
                                                     >
                                        </RadioButton>-->
                                            <CheckBox HorizontalAlignment="Center" IsChecked="{Binding Path=report_mp.mp_extended, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource rptEnumBoolConverter}, ConverterParameter=COMPLETE}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                            </DataGrid.Columns>
                        </DataGrid>
                    </Expander>

                    <!-- Cell Information -->
                    <Expander ExpandDirection="Down" Padding="5"
                            IsExpanded="False"
                            Header="Cell Information"
                            Margin="0,4,0,0" 
                            Canvas.ZIndex="1"
                            BorderThickness="1"
                            BorderBrush="Black"
                            Background="{shared:LinearGradientBrush #EEEEEE, #CCCCCC, GradientType=TopLeftToBottomRight}"
                            >
                        <!--<TextBlock Text="Cell Information" FontWeight="Bold" Margin="0,10,0,0" />-->
                        <DataGrid x:Name="dgCellDetails" AutoGenerateColumns="False" 
                              ItemsSource="{Binding Path=scenario.cellpopulations, UpdateSourceTrigger=PropertyChanged}"     
                              Height="120" MinWidth="200" MinRowHeight="20" MinColumnWidth="50" ColumnWidth="200" MaxColumnWidth="300"
                              CanUserReorderColumns="False" CanUserResizeRows="False"
                              CanUserSortColumns="False" RowHeaderWidth="0"
                              VerticalContentAlignment="Center"
                              CanUserAddRows="False"
                              BorderThickness="1"
                              BorderBrush="Black"
                            >
                            <DataGrid.ColumnHeaderStyle>
                                <Style TargetType="DataGridColumnHeader" >
                                    <Setter Property="FontSize" Value="12" />
                                    <Setter Property="Height" Value="24" />
                                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                                    <Setter Property="BorderThickness" Value="1" />
                                    <Setter Property="BorderBrush" Value="Black" />
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                <GradientStop Offset="0.0" Color="White" />
                                                <GradientStop Offset="1.0" Color="Beige" />
                                            </LinearGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </DataGrid.ColumnHeaderStyle>

                            <DataGrid.Columns>
                                <DataGridTemplateColumn Header="cell population" >
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock HorizontalAlignment="Center" Text="{Binding Path=cellpopulation_name, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTemplateColumn Header="position" Width="60">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox HorizontalAlignment="Center" IsChecked="{Binding Path=report_xvf.position, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTemplateColumn Header="velocity" Width="60">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox HorizontalAlignment="Center" IsChecked="{Binding Path=report_xvf.velocity, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTemplateColumn Header="force" Width="60">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox HorizontalAlignment="Center" IsChecked="{Binding Path=report_xvf.force, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                            </DataGrid.Columns>
                        </DataGrid>
                    </Expander>

                    <!-- Molecules by Cell -->
                    <Expander ExpandDirection="Down" Padding="5"
                            IsExpanded="False"
                            Header="Molecules by cell"
                            Margin="0,4,0,0" 
                            Canvas.ZIndex="1"
                            BorderThickness="1"
                            BorderBrush="Black"
                            Background="{shared:LinearGradientBrush #EEEEEE, #CCCCCC, GradientType=TopLeftToBottomRight}"
                            >
                        <StackPanel>
                            <ListBox x:Name="lbRptCellPops" MinHeight="100" 
                                ItemsSource="{Binding Path=scenario.cellpopulations}" 
                                DisplayMemberPath="cellpopulation_name"
                            />
                            <!-- EcmProbeMP -->
                            <Expander ExpandDirection="Down" Padding="5"
                                IsExpanded="False"
                                Header="ECM probe at cell location"
                                Margin="0,4,0,0" 
                                Canvas.ZIndex="1"
                                BorderThickness="1"
                                BorderBrush="Black"
                                Background="{shared:LinearGradientBrush #EEEEEE, #CCCCCC, GradientType=TopLeftToBottomRight}"
                                >
                                <StackPanel>
                                    <DataGrid x:Name="dgEcmProbeMols" AutoGenerateColumns="False" 
                                        ItemsSource="{Binding ElementName=lbRptCellPops, Path=SelectedItem.ecm_probe}"                                                         
                                        Height="120" MinWidth="200" MinRowHeight="20" MinColumnWidth="90" ColumnWidth="100" MaxColumnWidth="200"
                                        CanUserReorderColumns="False" CanUserResizeRows="False"
                                        CanUserSortColumns="False" RowHeaderWidth="0"
                                        VerticalContentAlignment="Center"
                                        CanUserAddRows="False"
                                        BorderThickness="1"
                                        BorderBrush="Black"
                                        >

                                        <DataGrid.ColumnHeaderStyle>
                                            <Style TargetType="DataGridColumnHeader" >
                                                <Setter Property="FontSize" Value="12" />
                                                <Setter Property="Height" Value="24" />
                                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                                <Setter Property="BorderThickness" Value="1" />
                                                <Setter Property="BorderBrush" Value="Black" />
                                                <Setter Property="Background">
                                                    <Setter.Value>
                                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                            <GradientStop Offset="0.0" Color="White" />
                                                            <GradientStop Offset="1.0" Color="Beige" />
                                                        </LinearGradientBrush>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </DataGrid.ColumnHeaderStyle>

                                        <DataGrid.Columns>
                                            <DataGridTemplateColumn Header="molecular population" Width="125" >
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBlock HorizontalAlignment="Center" Text="{Binding Path=molpop_guid_ref, Converter={StaticResource MolPopGUIDtoMolPopNameConv},
                                                            ConverterParameter={StaticResource molPopsListView}}"/>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>

                                            <DataGridTemplateColumn Header="concentration" Width="100">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <CheckBox HorizontalAlignment="Center" IsChecked="{Binding Path=mp_extended, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource rptEnumBoolConverter}, ConverterParameter=LEAN}"/>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>

                                            <DataGridTemplateColumn Header="concentration+gradient" Width="140">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <CheckBox HorizontalAlignment="Center" IsChecked="{Binding Path=mp_extended, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource rptEnumBoolConverter}, ConverterParameter=COMPLETE}"/>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>
                                        </DataGrid.Columns>
                                    </DataGrid>
                                </StackPanel>
                            </Expander>    
                            
                            <Expander ExpandDirection="Down" Padding="5"
                            IsExpanded="False"
                            Header="Molecules in membrane"
                            Margin="0,4,0,0" 
                            Canvas.ZIndex="1"
                            BorderThickness="1"
                            BorderBrush="Black"
                            Background="{shared:LinearGradientBrush #EEEEEE, #CCCCCC, GradientType=TopLeftToBottomRight}"
                            >
                                <StackPanel>
                                    <DataGrid x:Name="dgCellMembMols" AutoGenerateColumns="False"                                              
                                    ItemsSource="{Binding ElementName=lbRptCellPops, Path=SelectedItem.Cell.entity_guid, Converter={StaticResource CellGuidToCellMembMolPopsConv}, ConverterParameter={StaticResource cellTypesListView}}"                         
                                    Height="120" MinWidth="200" MinRowHeight="20" MinColumnWidth="50" ColumnWidth="200" MaxColumnWidth="300"
                                    CanUserReorderColumns="False" CanUserResizeRows="False"
                                    CanUserSortColumns="False" RowHeaderWidth="0"
                                    VerticalContentAlignment="Center"
                                    CanUserAddRows="False"
                                    BorderThickness="1"
                                    BorderBrush="Black"
                                    >
                                        <DataGrid.ColumnHeaderStyle>
                                            <Style TargetType="DataGridColumnHeader" >
                                                <Setter Property="FontSize" Value="12" />
                                                <Setter Property="Height" Value="24" />
                                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                                <Setter Property="BorderThickness" Value="1" />
                                                <Setter Property="BorderBrush" Value="Black" />
                                                <Setter Property="Background">
                                                    <Setter.Value>
                                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                            <GradientStop Offset="0.0" Color="White" />
                                                            <GradientStop Offset="1.0" Color="Beige" />
                                                        </LinearGradientBrush>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </DataGrid.ColumnHeaderStyle>

                                        <DataGrid.Columns>

                                            <DataGridTemplateColumn Header="molecular population" Width="125">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBlock HorizontalAlignment="Center" Text="{Binding Path=molecule.entity_guid, Converter={StaticResource MolGUIDtoMolNameConv},
                                                            ConverterParameter={StaticResource moleculesListView}}"/>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>

                                            <DataGridTemplateColumn Header="mean" Width="70">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <CheckBox HorizontalAlignment="Center" IsChecked="{Binding Path=report_mp.mp_extended, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource rptEnumBoolConverter}, ConverterParameter=LEAN}"/>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>

                                            <DataGridTemplateColumn Header="mean+gradient" Width="100">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <CheckBox HorizontalAlignment="Center" IsChecked="{Binding Path=report_mp.mp_extended, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource rptEnumBoolConverter}, ConverterParameter=COMPLETE}"/>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>
                                        </DataGrid.Columns>
                                    </DataGrid>
                                </StackPanel>
                            </Expander>


                            <Expander ExpandDirection="Down" Padding="5"
                            IsExpanded="False"
                            Header="Molecules in cytosol"
                            Margin="0,4,0,0" 
                            Canvas.ZIndex="1"
                            BorderThickness="1"
                            BorderBrush="Black"
                            Background="{shared:LinearGradientBrush #EEEEEE, #CCCCCC, GradientType=TopLeftToBottomRight}"
                            >
                                <StackPanel>
                                    <DataGrid x:Name="dgCellCytosolMols" AutoGenerateColumns="False" 
                                        ItemsSource="{Binding ElementName=lbRptCellPops, Path=SelectedItem.Cell.entity_guid, Converter={StaticResource CellGuidToCellCytoMolPopsConv}, ConverterParameter={StaticResource cellTypesListView}}"                                                                                 
                                        Height="120" MinWidth="200" MinRowHeight="20" MinColumnWidth="50" ColumnWidth="200" MaxColumnWidth="300"
                                        CanUserReorderColumns="False" CanUserResizeRows="False"
                                        CanUserSortColumns="False" RowHeaderWidth="0"
                                        VerticalContentAlignment="Center"
                                        CanUserAddRows="False"
                                        BorderThickness="1"
                                        BorderBrush="Black"
                                        >

                                        <DataGrid.ColumnHeaderStyle>
                                            <Style TargetType="DataGridColumnHeader" >
                                                <Setter Property="FontSize" Value="12" />
                                                <Setter Property="Height" Value="24" />
                                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                                <Setter Property="BorderThickness" Value="1" />
                                                <Setter Property="BorderBrush" Value="Black" />
                                                <Setter Property="Background">
                                                    <Setter.Value>
                                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                            <GradientStop Offset="0.0" Color="White" />
                                                            <GradientStop Offset="1.0" Color="Beige" />
                                                        </LinearGradientBrush>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </DataGrid.ColumnHeaderStyle>

                                        <DataGrid.Columns>
                                            <DataGridTemplateColumn Header="molecular population" Width="120">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBlock HorizontalAlignment="Center" Text="{Binding Path=molecule.entity_guid, Converter={StaticResource MolGUIDtoMolNameConv},
                                                            ConverterParameter={StaticResource moleculesListView}}"/>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>

                                            <DataGridTemplateColumn Header="mean" Width="70">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <CheckBox HorizontalAlignment="Center" IsChecked="{Binding Path=report_mp.mp_extended, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource rptEnumBoolConverter}, ConverterParameter=LEAN}"/>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>

                                            <DataGridTemplateColumn Header="mean+gradient" Width="100">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <CheckBox HorizontalAlignment="Center" IsChecked="{Binding Path=report_mp.mp_extended, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource rptEnumBoolConverter}, ConverterParameter=COMPLETE}"/>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>
                                        </DataGrid.Columns>
                                    </DataGrid>
                                </StackPanel>
                            </Expander>


                        </StackPanel>
                    </Expander>
                </StackPanel>
                    
            </ScrollViewer>
        </TabItem>

        <!-- LIBRARIES: MOLECULES, REACTIONS, CELLS, REACTION COMPLEXES, AND DIFF SCHEMES -->
       

        <!-- LIBRARIES: CELLS -->
        
    </TabControl>
</docking:ToolWindow>
