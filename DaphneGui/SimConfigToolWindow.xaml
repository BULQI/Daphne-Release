<docking:ToolWindow x:Class="DaphneGui.SimConfigToolWindow"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:local="clr-namespace:DaphneGui"
                    xmlns:daph="clr-namespace:Daphne;assembly=Daphne"                    
                    xmlns:shared="http://schemas.actiprosoftware.com/winfx/xaml/shared"
                    xmlns:editors="http://schemas.actiprosoftware.com/winfx/xaml/editors"
                    xmlns:docking="http://schemas.actiprosoftware.com/winfx/xaml/docking"
                    xmlns:uc="clr-namespace:DaphneUserControlLib;assembly=DaphneUserControlLib"
                    ImageSource="Images/Properties16.png"
                    >
    
    <!-- xmlns:daph="clr-namespace:Daphne"-->

    
    <TabControl  x:Name="ConfigTabControl" Grid.Column="0" TabStripPlacement="Top" SelectionChanged="ConfigTabControl_SelectionChanged">
        <TabControl.Resources >
            <!-- For changing color of alternating rows of ListBox -->
            <Style  TargetType="{x:Type ListBoxItem}">
                <Style.Triggers>
                    <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                        <Setter Property="Background" Value="White"></Setter>
                    </Trigger>
                    <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                        <Setter Property="Background" Value="Beige"></Setter>
                        <Setter Property="BorderBrush" Value="Black" />
                        <Setter Property="BorderThickness" Value="1" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <daph:RelativePositionToShortStringConverter x:Key="RelativePosEnumConv" />            
            <daph:MolPopDistributionTypeToStringConverter x:Key="MolPopDistTypeEnumConv" />
            <daph:CellPopDistributionTypeToStringConverter x:Key="CellPopDistTypeEnumConv" />
            <daph:SWMColorToSolidBrushConverter x:Key="colorToSolidBrushConv" />
            <daph:ManyToBooleanConverter x:Key="ManyConv" />
            <daph:TextToColorConverter x:Key="textToColorConv" />
            <daph:MolGUIDtoMolNameConverter x:Key="MolGUIDtoMolNameConv" />
            <daph:MolGUIDtoMolIndexConverter x:Key="MolGUIDtoMolIndexConv" />
            <daph:MolPopGUIDtoMolPopNameConverter x:Key="MolPopGUIDtoMolPopNameConv" />
            
            <daph:CellGUIDtoCellNameConverter x:Key="CellGUIDtoCellNameConv" />
            <daph:ReactionGUIDtoReactionStringConverter x:Key="ReacGUIDtoReacStringConv" />
            <daph:CellPopDistributionTypeToBoolConverter x:Key="CellPopDistTypeBoolConv" />
            <daph:MoleculeLocationToBoolConverter x:Key="MolPopLocationBoolConv" />
            <!--<daph:CellPopProbDistributionTypeToStringConverter x:Key="CellPopProbDistTypeEnumConv" />-->
            <daph:ReactionComplexGUIDtoReactionComplexStringConverter x:Key="ReacComplexGUIDtoStringConv" />
            <daph:BoundaryFaceToVisStringConverter x:Key="BoundaryFaceVisConv" />
            <daph:CellGuidToCellMembMolPopsConverter x:Key="CellGuidToCellMembMolPopsConv" />
            <daph:CellGuidToCellCytoMolPopsConverter x:Key="CellGuidToCellCytoMolPopsConv" />
            <daph:CellGuidToCellReactionsConverter x:Key="CellGuidToCellReactionsConv" />
            <daph:ReacComplexGUIDtoReactionComplexConverter x:Key="ReacComplexGUIDtoReactionComplexConv" />
            <daph:ColorListToStringConverter x:Key="ColorListToStringConv" />
            <daph:ColorListToIntConverter x:Key="ColorListToIntConv" />
            <daph:ColorListToColorConverter x:Key="ColorListToColorConv" />
            <daph:ColorListToBrushConverter x:Key="ColorListToBrushConv" />
            <daph:IsNullConverter x:Key="IsNullConv" />
            <daph:BoolToIndexConverter x:Key="BoolToIndexConv" />
            <daph:DoubleToFormattedStringConverter x:Key="DoubleToFormattedStringConv" />
            
            
            <ObjectDataProvider x:Key="regionShapesEnum"
                            MethodName="GetValues" 
                            ObjectType="{x:Type sys:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="daph:RegionShape" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>

            <ObjectDataProvider x:Key="relativePosition"
                    MethodName="GetValues" 
                    ObjectType="{x:Type sys:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="daph:RelativePosition" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>

            <ObjectDataProvider x:Key="molpopDistributionTypes"
                    MethodName="GetValues" 
                    ObjectType="{x:Type sys:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="daph:MolPopDistributionType" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>

            <ObjectDataProvider x:Key="cellPopDistributionTypes"
                    MethodName="GetValues" 
                    ObjectType="{x:Type sys:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="daph:CellPopDistributionType" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>

            <ObjectDataProvider x:Key="colorList"
                    MethodName="GetValues" 
                    ObjectType="{x:Type sys:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="daph:ColorList" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>

            <ObjectDataProvider x:Key="boundaryTypes"
                    MethodName="GetValues" 
                    ObjectType="{x:Type sys:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="daph:BoundaryType" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>

            <ObjectDataProvider x:Key="boundaryFaces"
                    MethodName="GetValues" 
                    ObjectType="{x:Type sys:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="daph:BoundaryFace" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>

            <!--<ObjectDataProvider x:Key="EcmAvailableReactions"
                            MethodName="GetEcmAvailableReactions" 
                            ObjectType="{x:Type daph:SimConfiguration}">                
            </ObjectDataProvider>-->

            <CollectionViewSource x:Key="cellsetRegionsListView"  
                                  Source="{Binding Path=scenario.regions}"/>

            <CollectionViewSource x:Key="boxSpecsListView"  
                                  Source="{Binding Path=entity_repository.box_specifications}"/>

            <CollectionViewSource x:Key="ggBoxSpecsListView"  
                                  Source="{Binding Path=entity_repository.box_specifications}"/>

            <CollectionViewSource x:Key="molpopGaussianSpecsListView"  
                                  Source="{Binding Path=entity_repository.gaussian_specifications}"/>

            <CollectionViewSource x:Key="solfacSolfacTypesListView"  
                                  Source="{Binding Path=entity_repository.solfac_types}"/>

            <CollectionViewSource x:Key="cellTypesListView"  
                                  Source="{Binding Path=entity_repository.cells}"
                                  />
            <CollectionViewSource x:Key="moleculesListView"  
                                  Source="{Binding Path=entity_repository.molecules}"/>
            <CollectionViewSource x:Key="moleculesListView2"  
                                  Source="{Binding Path=entity_repository.molecules}"/>
            <CollectionViewSource x:Key="molPopsListView"  
                                  Source="{Binding Path=scenario.environment.ecs.molpops}"
                                  />
            <CollectionViewSource x:Key="ecmMoleculesListView"  
                                  Source="{Binding Path=entity_repository.molecules}"/>
            <CollectionViewSource x:Key="bulkMoleculesListView"  
                                  Source="{Binding Path=entity_repository.molecules}"
                                  Filter="bulkMoleculesListView_Filter"
                                  />
            <CollectionViewSource x:Key="cytoBulkMoleculesListView"  
                                  Source="{Binding Path=entity_repository.molecules}"
                                  Filter="cytoBulkMoleculesListView_Filter"
                                  />
            <CollectionViewSource x:Key="boundaryMoleculesListView"  
                                  Source="{Binding Path=entity_repository.molecules}"
                                  Filter="boundaryMoleculesListView_Filter"
                                  />
            <!--<CollectionViewSource x:Key="ecsReactionsListView"  
                                  Source="{Binding Path=entity_repository.reactions}"
                                  Filter="ecmReactionCollectionViewSource_Filter"/>-->
            <CollectionViewSource x:Key="ecmReactionsListView"  
                                  Source="{Binding Path=entity_repository.reactions}"
                                  />
            <CollectionViewSource x:Key="ecmReactionComplexesListView"  
                                  Source="{Binding Path=entity_repository.reaction_complexes}"
                                  />            
            <CollectionViewSource x:Key="membraneMolPopsListView"  
                                  Source="{Binding Path=entity_repository.molecules}"
                                  Filter="membraneMolPopsCollectionViewSource_Filter"/>
            <CollectionViewSource x:Key="cytosolMolPopsListView"  
                                  Source="{Binding Path=entity_repository.molecules}"
                                  Filter="cytosolMoleculesCollectionViewSource_Filter" />
            
            <CollectionViewSource x:Key="cytosolAvailableReactionsListView"  
                                  Source="{Binding Path=entity_repository.reactions}"
                                  Filter="cytosolAvailableReactionsListView_Filter"/>

            <CollectionViewSource x:Key="membraneAvailableReactionsListView"  
                                  Source="{Binding Path=entity_repository.reactions}"
                                  Filter="membraneAvailableReactionsListView_Filter"/>

            <CollectionViewSource x:Name="ecmAvailableReacs" x:Key="ecmAvailableReactionsListView"  
                                  Source="{Binding Path=entity_repository.reactions}"
                                  Filter="ecmAvailableReactionsListView_Filter"                                   
                                  />
            
            <CollectionViewSource x:Key="baseCellTypesListView"  
                                  Source="{Binding Path=entity_repository.CellBaseTypeLabel}"/>
            
            
            <!-- Style for visibility checkboxes in list views -->
            <Style x:Key="EyeballCheckboxStyle" TargetType="CheckBox">
                <Setter Property="SnapsToDevicePixels" Value="true"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <Grid Width="13" Height="13">
                                <Image x:Name="_image" Source="Images/cartoonEyeClosed.png" Opacity="0.6"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="_image" Property="Source" Value="Images/cartoonEyeOpen.png"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="_image" Property="Opacity" Value="0.2" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
           
            <sys:Int32 x:Key="ToolTipInitialShowDelay">100</sys:Int32>
            <Style TargetType="TextBlock">
                <Setter Property="ToolTipService.InitialShowDelay" Value="{StaticResource ToolTipInitialShowDelay}"/>
            </Style>
            <Style x:Key="ExpanderHeaderFocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Border>
                                <Rectangle SnapsToDevicePixels="true"
                           Margin="0"
                           Stroke="Black"
                           StrokeDashArray="1 2"
                           StrokeThickness="1" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ExpanderDownHeaderStyle"
       TargetType="{x:Type ToggleButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Padding="{TemplateBinding Padding}">
                                <Grid SnapsToDevicePixels="False"
                          Background="Transparent">
                                    <ContentPresenter SnapsToDevicePixels="True"
                                          HorizontalAlignment="Left"
                                          VerticalAlignment="Center"
                                          RecognizesAccessKey="True" />
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ExpanderRightHeaderStyle"
       TargetType="{x:Type ToggleButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Padding="{TemplateBinding Padding}">
                                <Grid SnapsToDevicePixels="False"
                          Background="Transparent">
                                    <ContentPresenter SnapsToDevicePixels="True"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Top"
                                          RecognizesAccessKey="True" />
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ExpanderUpHeaderStyle"
       TargetType="{x:Type ToggleButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Padding="{TemplateBinding Padding}">
                                <Grid SnapsToDevicePixels="False"
                          Background="Transparent">
                                    <ContentPresenter SnapsToDevicePixels="True"
                                          HorizontalAlignment="Left"
                                          VerticalAlignment="Center"
                                          RecognizesAccessKey="True" />
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ExpanderLeftHeaderStyle"
       TargetType="{x:Type ToggleButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Padding="{TemplateBinding Padding}">
                                <Grid SnapsToDevicePixels="False"
                          Background="Transparent">
                                    <ContentPresenter SnapsToDevicePixels="True"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Top"
                                          RecognizesAccessKey="True" />
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ArrowlessExpanderTemplate"
       TargetType="{x:Type Expander}">
                <Setter Property="Foreground"
            Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                <Setter Property="Background"
            Value="Transparent" />
                <Setter Property="HorizontalContentAlignment"
            Value="Stretch" />
                <Setter Property="VerticalContentAlignment"
            Value="Stretch" />
                <Setter Property="BorderBrush"
            Value="Transparent" />
                <Setter Property="BorderThickness"
            Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Expander}">
                            <Border SnapsToDevicePixels="true"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="3">
                                <DockPanel>
                                    <ToggleButton FontFamily="{TemplateBinding FontFamily}"
                                      FontSize="{TemplateBinding FontSize}"
                                      FontStretch="{TemplateBinding FontStretch}"
                                      FontStyle="{TemplateBinding FontStyle}"
                                      FontWeight="{TemplateBinding FontWeight}"
                                      Foreground="{TemplateBinding Foreground}"
                                      HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Padding="{TemplateBinding Padding}"
                                      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                      FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}"
                                      Margin="1"
                                      MinHeight="0"
                                      MinWidth="0"
                                      x:Name="HeaderSite"
                                      Style="{StaticResource ExpanderDownHeaderStyle}"
                                      Content="{TemplateBinding Header}"
                                      ContentTemplate="{TemplateBinding HeaderTemplate}"
                                      ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                      DockPanel.Dock="Top"
                                      IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <ContentPresenter Focusable="false"
                                          Visibility="Collapsed"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          x:Name="ExpandSite"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          DockPanel.Dock="Bottom" />
                                </DockPanel>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsExpanded"
                             Value="true">
                                    <Setter Property="Visibility"
                                TargetName="ExpandSite"
                                Value="Visible" />
                                </Trigger>
                                <Trigger Property="ExpandDirection"
                             Value="Right">
                                    <Setter Property="DockPanel.Dock"
                                TargetName="ExpandSite"
                                Value="Right" />
                                    <Setter Property="DockPanel.Dock"
                                TargetName="HeaderSite"
                                Value="Left" />
                                    <Setter Property="Style"
                                TargetName="HeaderSite"
                                Value="{StaticResource ExpanderRightHeaderStyle}" />
                                </Trigger>
                                <Trigger Property="ExpandDirection"
                             Value="Up">
                                    <Setter Property="DockPanel.Dock"
                                TargetName="ExpandSite"
                                Value="Top" />
                                    <Setter Property="DockPanel.Dock"
                                TargetName="HeaderSite"
                                Value="Bottom" />
                                    <Setter Property="Style"
                                TargetName="HeaderSite"
                                Value="{StaticResource ExpanderUpHeaderStyle}" />
                                </Trigger>
                                <Trigger Property="ExpandDirection"
                             Value="Left">
                                    <Setter Property="DockPanel.Dock"
                                TargetName="ExpandSite"
                                Value="Left" />
                                    <Setter Property="DockPanel.Dock"
                                TargetName="HeaderSite"
                                Value="Right" />
                                    <Setter Property="Style"
                                TargetName="HeaderSite"
                                Value="{StaticResource ExpanderLeftHeaderStyle}" />
                                </Trigger>
                                <Trigger Property="IsEnabled"
                             Value="false">
                                    <Setter Property="Foreground"
                                Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <!-- =========================== -->
            <!-- Box Specification -->
            <DataTemplate x:Key="boxSpecDetailsTemplate">
                <Grid Margin="0,6">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="15" />
                        <ColumnDefinition Width="60" />
                        <ColumnDefinition Width="50" />
                        <ColumnDefinition Width="60" />
                        <ColumnDefinition Width="50" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid Grid.Column="0" Grid.Row="0"
                          VerticalAlignment="Center">
                        <Rectangle Fill="White"
                                   Stroke="Black"
                                   StrokeThickness="0.5"
                                   Width="15"
                                   Height="15"
                                   />
                        <CheckBox x:Name="box_widget_on_checkbox"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                    Style="{StaticResource EyeballCheckboxStyle}"
                                    IsChecked="{Binding Path=box_visibility}"
                                    />
                    </Grid>
                    <TextBlock Text="center (µm)" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="0" Margin="5,4" HorizontalAlignment="Right"/>
                    <TextBlock Text="size (µm)" Grid.Column="3" Grid.ColumnSpan="2" Grid.Row="0" Margin="3,4" HorizontalAlignment="Right"/>
                    <!--<Line Margin="4,0,4,3" 
                          Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1" 
                          SnapsToDevicePixels="True" Stroke="LightGray"
                          Stretch="Fill" X1="0" X2="10" />
                    <Line Margin="4,0,4,3" 
                          Grid.Column="3" Grid.ColumnSpan="2" Grid.Row="1" 
                          SnapsToDevicePixels="True" Stroke="LightGray"
                          Stretch="Fill" X1="0" X2="10" />-->
                    <TextBlock Text="X" Grid.Column="0" Grid.Row="2" Margin="2,0" TextAlignment="Right"/>
                    <Slider x:Name="x_trans_slider"
                            Grid.Column="1" Grid.Row="2"
                            Orientation="Horizontal"
                            Width="60"
                            RenderTransform="1.0,0,0,0.5,0,4"
                            Minimum="{Binding Path=x_trans_min}" 
                            Maximum="{Binding Path=x_trans_max}"
                            Value="{Binding Path=x_trans}" 
                            KeyboardNavigation.IsTabStop="False"
                            />
                    <editors:DoubleEditBox Grid.Column="2" Grid.Row="2"
                                        CheckBoxVisibility="Collapsed" 
                                        SpinnerVisibility="Collapsed"
                                        HorizontalAlignment="Left"
                                        Format="G"
                                        StepValue="10"
                                        Width="50" 
                                        CenterSlotHorizontalAlignment="Right"
                                        Value="{Binding ElementName=x_trans_slider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                        />
                    <Slider x:Name="x_scale_slider"
                            Grid.Column="3" Grid.Row="2"
                            Orientation="Horizontal"
                            Width="60"
                            RenderTransform="1.0,0,0,0.5,0,4"
                            Minimum="{Binding Path=x_scale_min}" 
                            Maximum="{Binding Path=x_scale_max}"
                            Value="{Binding Path=x_scale}" 
                            KeyboardNavigation.IsTabStop="False"
                            />
                    <editors:DoubleEditBox Grid.Column="4" Grid.Row="2"
                                        CheckBoxVisibility="Collapsed" 
                                        SpinnerVisibility="Collapsed"
                                        HorizontalAlignment="Left"
                                        Format="G"
                                        StepValue="10"
                                        Minimum="1"
                                        Width="50" 
                                        CenterSlotHorizontalAlignment="Right"
                                        Value="{Binding ElementName=x_scale_slider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                        />
                    <TextBlock Text="Y" Grid.Column="0" Grid.Row="3" Margin="2,0" TextAlignment="Right" />
                    <Slider x:Name="y_trans_slider"
                            Grid.Column="1" Grid.Row="3"
                            Orientation="Horizontal"
                            Width="60"
                            RenderTransform="1.0,0,0,0.5,0,4"
                            Minimum="{Binding Path=y_trans_min}" 
                            Maximum="{Binding Path=y_trans_max}"
                            Value="{Binding Path=y_trans}" 
                            KeyboardNavigation.IsTabStop="False"
                            />
                    <editors:DoubleEditBox Grid.Column="2" Grid.Row="3"
                                        CheckBoxVisibility="Collapsed" 
                                        SpinnerVisibility="Collapsed"
                                        HorizontalAlignment="Left"
                                        Format="G"
                                        StepValue="10"
                                        Width="50" 
                                        CenterSlotHorizontalAlignment="Right"
                                        Value="{Binding ElementName=y_trans_slider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                        />
                    <Slider x:Name="y_scale_slider"
                            Grid.Column="3" Grid.Row="3"
                            Orientation="Horizontal"
                            Width="60"
                            RenderTransform="1.0,0,0,0.5,0,4"
                            Minimum="{Binding Path=y_scale_min}" 
                            Maximum="{Binding Path=y_scale_max}"
                            Value="{Binding Path=y_scale}" 
                            KeyboardNavigation.IsTabStop="False"
                            />
                    <editors:DoubleEditBox Grid.Column="4" Grid.Row="3"
                                        CheckBoxVisibility="Collapsed" 
                                        SpinnerVisibility="Collapsed"
                                        HorizontalAlignment="Left"
                                        Format="G"
                                        StepValue="10"
                                        Minimum="1"
                                        Width="50" 
                                        CenterSlotHorizontalAlignment="Right"
                                        Value="{Binding ElementName=y_scale_slider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                        />
                    <TextBlock Text="Z" Grid.Column="0" Grid.Row="4" Margin="2,0" TextAlignment="Right" />
                    <Slider x:Name="z_trans_slider"
                            Grid.Column="1" Grid.Row="4"
                            Orientation="Horizontal"
                            Width="60"
                            RenderTransform="1.0,0,0,0.5,0,4"
                            Minimum="{Binding Path=z_trans_min}" 
                            Maximum="{Binding Path=z_trans_max}"
                            Value="{Binding Path=z_trans}" 
                            KeyboardNavigation.IsTabStop="False"
                            />
                    <editors:DoubleEditBox Grid.Column="2" Grid.Row="4"
                                        CheckBoxVisibility="Collapsed" 
                                        SpinnerVisibility="Collapsed"
                                        HorizontalAlignment="Left"
                                        Format="G"
                                        StepValue="10"
                                        Width="50" 
                                        CenterSlotHorizontalAlignment="Right"
                                        Value="{Binding ElementName=z_trans_slider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                        />
                    <Slider x:Name="z_scale_slider"
                            Grid.Column="3" Grid.Row="4"
                            Orientation="Horizontal"
                            Width="60"
                            RenderTransform="1.0,0,0,0.5,0,4"
                            Minimum="{Binding Path=z_scale_min}" 
                            Maximum="{Binding Path=z_scale_max}"
                            Value="{Binding Path=z_scale}" 
                            KeyboardNavigation.IsTabStop="False"
                            />
                    <editors:DoubleEditBox Grid.Column="4" Grid.Row="4"
                                        CheckBoxVisibility="Collapsed" 
                                        SpinnerVisibility="Collapsed"
                                        HorizontalAlignment="Left"
                                        Format="G"
                                        StepValue="10"
                                        Minimum="1"
                                        Width="50" 
                                        CenterSlotHorizontalAlignment="Right"
                                        Value="{Binding ElementName=z_scale_slider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                        />
                </Grid>
            </DataTemplate>

            <!-- Gaussian Box Specification -->
            <DataTemplate x:Key="gaussBoxSpecDetailsTemplate">
                <Grid Margin="0,6">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="30" />
                        <ColumnDefinition Width="60" />
                        <ColumnDefinition Width="50" />
                        <ColumnDefinition Width="60" />
                        <ColumnDefinition Width="50" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <StackPanel Grid.Column="0" Grid.Row="0" Orientation="Horizontal">
                        <Grid  VerticalAlignment="Center">
                            <Rectangle Fill="White"
                                       Stroke="Black"
                                       StrokeThickness="0.5"
                                       Width="15"
                                       Height="15"
                                       />
                            <CheckBox x:Name="box_widget_on_checkbox"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                        Style="{StaticResource EyeballCheckboxStyle}"
                                        IsChecked="{Binding Path=box_visibility}"                                      
                                        />                                                
                        </Grid>
                        <Grid VerticalAlignment="Center">
                            <Rectangle Fill="LightPink"
                                   Stroke="Black"
                                   StrokeThickness="0.5"
                                   Width="15"
                                   Height="15"
                                   />
                            <CheckBox x:Name="gauss_blob_on_checkbox"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                    Style="{StaticResource EyeballCheckboxStyle}"
                                    IsChecked="{Binding Path=blob_visibility}"
                                      Click="blob_actor_checkbox_clicked"
                                      CommandParameter="{Binding Path=box_guid}"
                                    />
                        </Grid>
                    </StackPanel>                    
                    <TextBlock Text="center (µm)" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="0" Margin="5,4" HorizontalAlignment="Right"/>
                    <TextBlock Text="std. dev. (µm)" Grid.Column="3" Grid.ColumnSpan="2" Grid.Row="0" Margin="3,4" HorizontalAlignment="Right"/>
                    <!--<Line Margin="4,0,4,3" 
                          Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1" 
                          SnapsToDevicePixels="True" Stroke="LightGray"
                          Stretch="Fill" X1="0" X2="10" />
                    <Line Margin="4,0,4,3" 
                          Grid.Column="3" Grid.ColumnSpan="2" Grid.Row="1" 
                          SnapsToDevicePixels="True" Stroke="LightGray"
                          Stretch="Fill" X1="0" X2="10" />-->
                    <TextBlock Text="X" Grid.Column="0" Grid.Row="2" Margin="2,0" TextAlignment="Right"/>
                    <Slider x:Name="x_trans_slider"
                            Grid.Column="1" Grid.Row="2"
                            Orientation="Horizontal"
                            Width="60"
                            RenderTransform="1.0,0,0,0.5,0,4"
                            Minimum="{Binding Path=x_trans_min}" 
                            Maximum="{Binding Path=x_trans_max}"
                            Value="{Binding Path=x_trans, Mode=TwoWay}" 
                            KeyboardNavigation.IsTabStop="False"
                            />
                    <editors:DoubleEditBox Grid.Column="2" Grid.Row="2"
                                        CheckBoxVisibility="Collapsed" 
                                        SpinnerVisibility="Collapsed"
                                        HorizontalAlignment="Left"
                                        Format="F2"
                                        StepValue="10"
                                        Width="50" 
                                        CenterSlotHorizontalAlignment="Right"
                                        Value="{Binding ElementName=x_trans_slider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                        />                    
                    <Slider x:Name="x_scale_slider"
                            Grid.Column="3" Grid.Row="2"
                            Orientation="Horizontal"
                            Width="60"
                            RenderTransform="1.0,0,0,0.5,0,4"
                            Minimum="{Binding Path=x_scale_min}" 
                            Maximum="{Binding Path=x_scale_max}"
                            Value="{Binding Path=half_x_scale}" 
                            KeyboardNavigation.IsTabStop="False"
                            />
                    <editors:DoubleEditBox Grid.Column="4" Grid.Row="2"
                                        CheckBoxVisibility="Collapsed" 
                                        SpinnerVisibility="Collapsed"
                                        HorizontalAlignment="Left"
                                        Format="F2"
                                        StepValue="10"
                                        Width="50" 
                                        CenterSlotHorizontalAlignment="Right"
                                        Value="{Binding ElementName=x_scale_slider, Path=Value, StringFormat=F2, UpdateSourceTrigger=PropertyChanged}"
                                        />
                    <TextBlock Text="Y" Grid.Column="0" Grid.Row="3" Margin="2,0" TextAlignment="Right" />
                    <Slider x:Name="y_trans_slider"
                            Grid.Column="1" Grid.Row="3"
                            Orientation="Horizontal"
                            Width="60"
                            RenderTransform="1.0,0,0,0.5,0,4"
                            Minimum="{Binding Path=y_trans_min}" 
                            Maximum="{Binding Path=y_trans_max}"
                            Value="{Binding Path=y_trans}" 
                            KeyboardNavigation.IsTabStop="False"
                            />
                    <editors:DoubleEditBox Grid.Column="2" Grid.Row="3"
                                        CheckBoxVisibility="Collapsed" 
                                        SpinnerVisibility="Collapsed"
                                        HorizontalAlignment="Left"
                                        Format="F2"
                                        StepValue="10"
                                        Width="50" 
                                        CenterSlotHorizontalAlignment="Right"
                                        Value="{Binding ElementName=y_trans_slider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                        />
                    <Slider x:Name="y_scale_slider"
                            Grid.Column="3" Grid.Row="3"
                            Orientation="Horizontal"
                            Width="60"
                            RenderTransform="1.0,0,0,0.5,0,4"
                            Minimum="{Binding Path=y_scale_min}" 
                            Maximum="{Binding Path=y_scale_max}"
                            Value="{Binding Path=half_y_scale}" 
                            KeyboardNavigation.IsTabStop="False"
                            />
                    <editors:DoubleEditBox Grid.Column="4" Grid.Row="3"
                                        CheckBoxVisibility="Collapsed" 
                                        SpinnerVisibility="Collapsed"
                                        HorizontalAlignment="Left"
                                        Format="F2"
                                        StepValue="10"
                                        Width="50" 
                                        CenterSlotHorizontalAlignment="Right"
                                        Value="{Binding ElementName=y_scale_slider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                        />
                    <TextBlock Text="Z" Grid.Column="0" Grid.Row="4" Margin="2,0" TextAlignment="Right" />
                    <Slider x:Name="z_trans_slider"
                            Grid.Column="1" Grid.Row="4"
                            Orientation="Horizontal"
                            Width="60"
                            RenderTransform="1.0,0,0,0.5,0,4"
                            Minimum="{Binding Path=z_trans_min}" 
                            Maximum="{Binding Path=z_trans_max}"
                            Value="{Binding Path=z_trans, UpdateSourceTrigger=PropertyChanged}" 
                            KeyboardNavigation.IsTabStop="False"
                            />
                    <editors:DoubleEditBox Grid.Column="2" Grid.Row="4"
                                        CheckBoxVisibility="Collapsed" 
                                        SpinnerVisibility="Collapsed"
                                        HorizontalAlignment="Left"
                                        Format="F2"
                                        StepValue="10"
                                        Width="50" 
                                        CenterSlotHorizontalAlignment="Right"
                                        Value="{Binding ElementName=z_trans_slider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                        />
                    <Slider x:Name="z_scale_slider"
                            Grid.Column="3" Grid.Row="4"
                            Orientation="Horizontal"
                            Width="60"
                            RenderTransform="1.0,0,0,0.5,0,4"
                            Minimum="{Binding Path=z_scale_min}" 
                            Maximum="{Binding Path=z_scale_max}"
                            Value="{Binding Path=half_z_scale}" 
                            KeyboardNavigation.IsTabStop="False"
                            />
                    <editors:DoubleEditBox Grid.Column="4" Grid.Row="4"
                                        CheckBoxVisibility="Collapsed" 
                                        SpinnerVisibility="Collapsed"
                                        HorizontalAlignment="Left"
                                        Format="F2"
                                        StepValue="10"
                                        Width="50" 
                                        CenterSlotHorizontalAlignment="Right"
                                        Value="{Binding ElementName=z_scale_slider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                        />
                </Grid>
            </DataTemplate>

            <DataTemplate DataType="{x:Type daph:MolPopHomogeneousLevel}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="70" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>

                    <StackPanel Orientation="Vertical" Grid.Column="1" Grid.Row="0" Margin="-50,2">
                        <!--<StackPanel Orientation="Horizontal"
                                >
                            <TextBlock Text="concentration-old" Margin="0,0" 
                               Grid.Column="0" Grid.Row="0"  
                               HorizontalAlignment="Right" VerticalAlignment="Center"
                               />
                            <editors:DoubleEditBox CheckBoxVisibility="Collapsed" 
                                                SpinnerVisibility="Collapsed"
                                                HorizontalAlignment="Right"
                                                Format="F2"
                                                StepValue="10"
                                                Width="50" 
                                                Margin="4,0"
                                                CenterSlotHorizontalAlignment="Right"
                                                Value="{Binding Path=concentration, UpdateSourceTrigger=PropertyChanged}"
                                                />
                        </StackPanel>-->
                        
                        <StackPanel Orientation="Horizontal" Margin="20,0">
                            
                            <uc:DoublesBox      HorizontalAlignment="Left" 
                                                Number="{Binding Path=concentration, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"   
                                                DecimalPlaces="2" 
                                                RangeFactor="2"
                                                SNLowerThreshold="0.001"
                                                SNUpperThreshold="1000"
                                                SliderEnabled="False"                                                
                                                Caption="">
                            </uc:DoublesBox>
                            
                        </StackPanel>
                    </StackPanel>
                </Grid>
            </DataTemplate>

            <DataTemplate DataType="{x:Type daph:MolPopLinear}">
                <StackPanel>
                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=cbToroidal, Path=IsChecked}" Value="True">
                                    <Setter Property="Visibility" Value="Hidden"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ElementName=cbToroidal, Path=IsChecked}" Value="False">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                    
                    <StackPanel  Grid.Column="0" Grid.Row="4">
                        <TextBlock Text="impose gradient" Margin="60,2" HorizontalAlignment="Right" VerticalAlignment="Center"  TextAlignment="Right" MinWidth="100">
                            
                        </TextBlock>
                </StackPanel>
                <StackPanel Grid.Column="0" Grid.Row="5" Orientation="Horizontal" Margin="0,-4">
                    <TextBlock x:Name="tbSpecify" Text="direction of gradient" Margin="0,0" 
                                           Height="40" TextWrapping="Wrap" HorizontalAlignment="Left" VerticalAlignment="Center"  TextAlignment="Right" 
                                           Width="100">                                    
                    </TextBlock>
                    <ComboBox  x:Name="cbBoundFace" MinWidth="100" HorizontalAlignment="Right"  Margin="4,0" Height="24"
                                           ItemsSource="{Binding Source={StaticResource boundaryFaces}}"
                                           SelectedValue="{Binding Path=boundary_face, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                           SelectionChanged="cbBoundFace_SelectionChanged">                        
                    </ComboBox>
                </StackPanel>
                    <StackPanel Grid.Column="0" Grid.Row="6" Margin="50,4" Visibility="{Binding ElementName=cbBoundFace, Path=SelectedItem, Converter={StaticResource BoundaryFaceVisConv}}" >
                        <TextBlock x:Name="tbConc" Text="concentration (molec/µm^3)" Margin="0,0" 
                                           HorizontalAlignment="Right" VerticalAlignment="Center"  TextAlignment="Right" 
                                           Width="160"/>
                </StackPanel>
                <StackPanel Visibility="{Binding ElementName=cbBoundFace, Path=SelectedItem, Converter={StaticResource BoundaryFaceVisConv}}"  Grid.Column="0" Grid.Row="7" Orientation="Horizontal"  >
                    <TextBlock x:Name="tbLeft" Margin="0,0" HorizontalAlignment="Right" VerticalAlignment="Center"  TextAlignment="Right" Width="100">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ElementName=cbBoundFace, Path=SelectedIndex}" Value="1">
                                                    <Setter Property="Text" Value="x=0"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ElementName=cbBoundFace, Path=SelectedIndex}" Value="2">
                                                    <Setter Property="Text" Value="y=0"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ElementName=cbBoundFace, Path=SelectedIndex}" Value="3">
                                                    <Setter Property="Text" Value="z=0"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                    </TextBlock>
                        <TextBox  x:Name="txtLeft" MinWidth="100" HorizontalAlignment="Right"  Margin="4,0" Height="24" Text="{Binding Path=boundaryCondition[0].concVal, 
                                        UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:0.00}}" >                        
                    </TextBox>
                </StackPanel>
                <StackPanel Visibility="{Binding ElementName=cbBoundFace, Path=SelectedItem, Converter={StaticResource BoundaryFaceVisConv}}"  Grid.Column="0" Grid.Row="8" Orientation="Horizontal" >
                    <TextBlock x:Name="tbRight" Margin="0,0" HorizontalAlignment="Right" VerticalAlignment="Center"  TextAlignment="Right" Width="100">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=cbBoundFace, Path=SelectedIndex}" Value="1">
                                        <Setter Property="Text" Value="{Binding ElementName=extent_x_slider, Path=Value, StringFormat='x={0}'}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ElementName=cbBoundFace, Path=SelectedIndex}" Value="2">
                                        <Setter Property="Text" Value="{Binding ElementName=extent_y_slider, Path=Value, StringFormat='y={0}'}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ElementName=cbBoundFace, Path=SelectedIndex}" Value="3">
                                        <Setter Property="Text" Value="{Binding ElementName=extent_z_slider, Path=Value, StringFormat='z={0}'}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                    <TextBox  x:Name="txtRight" MinWidth="100" HorizontalAlignment="Right"  Margin="4,0" Height="24" Text="{Binding Path=boundaryCondition[1].concVal, 
                                UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:0.00}}">                        
                    </TextBox>
                </StackPanel>
                </StackPanel>
            </DataTemplate>

            <DataTemplate DataType="{x:Type daph:MolPopGaussian}">
                <StackPanel Orientation="Vertical">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="70" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <StackPanel Orientation="Horizontal" Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="3">
                            <TextBlock Text="peak concentration" Margin="0,0"
                                   Grid.Column="0" Grid.Row="0"  
                                   HorizontalAlignment="Right" VerticalAlignment="Center"
                                   />
                        
                            <editors:DoubleEditBox CheckBoxVisibility="Collapsed" 
                                                    SpinnerVisibility="Collapsed"
                                                    HorizontalAlignment="Right"
                                                    Format="F2"
                                                    StepValue="10"
                                                    Width="50" 
                                                    Margin="4,0"
                                                    CenterSlotHorizontalAlignment="Right"
                                                    Value="{Binding Path=peak_concentration, UpdateSourceTrigger=PropertyChanged}"
                                                    />
                            <TextBlock Text="molec/µm^3" VerticalAlignment="Center" Margin="2,0,0,0"/>
                        </StackPanel>                        
                    </Grid>
                    <!-- ListView as level of indirection for getting to the correct BoxSpec -->
                    <ListView x:Name="molpopGaussianBoxSpecsListView"
                                              ItemsSource="{Binding Source={StaticResource ggBoxSpecsListView}}"
                                              DisplayMemberPath="box_guid"
                                              SelectedValue="{Binding Path=gaussgrad_gauss_spec_guid_ref, Mode=OneWay}"
                                              SelectedValuePath="box_guid"
                                              Visibility="Collapsed"
                                              />
                    <ContentControl Name="GaussianBoxSpecDetails"
                                                    Content="{Binding ElementName=molpopGaussianBoxSpecsListView, Path=SelectedItem}" 
                                                    HorizontalAlignment="Center"
                                                    ContentTemplate="{StaticResource gaussBoxSpecDetailsTemplate}" 
                                                    Margin="0,2"/>
                </StackPanel>
            </DataTemplate>

            <!--"{Binding Path=spec_cell_list, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"-->

            <DataTemplate DataType="{x:Type daph:CellPopSpecific}">                            
                <StackPanel x:Name="panelCoordinates" Grid.Row="1" Grid.Column="0">
                </StackPanel>
            </DataTemplate>

            <DataTemplate DataType="{x:Type daph:CellPopUniform}">
                <StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock>Number of cells:    </TextBlock>                        
                        <TextBox IsReadOnly="True" IsEnabled="False" Width="50" Margin="8,-2" Text="{Binding ElementName=numberBox, Path=Value}"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock>These cells will be evenly distributed.</TextBlock>
                    </StackPanel>
                </StackPanel>
            </DataTemplate>

            <DataTemplate DataType="{x:Type daph:CellPopGaussian}">
                <StackPanel Orientation="Vertical">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="70" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                    </Grid>
                    <!-- ListView as level of indirection for getting to the correct BoxSpec -->
                    <ListView x:Name="cellPopGaussianBoxSpecsListView"
                                              ItemsSource="{Binding Source={StaticResource ggBoxSpecsListView}}"
                                              DisplayMemberPath="box_guid"
                                              SelectedValue="{Binding Path=gauss_spec_guid_ref, Mode=OneWay}"
                                              SelectedValuePath="box_guid"
                                              Visibility="Collapsed"
                                              />
                    <ContentControl Name="GaussianBoxSpecDetails"
                                                    Content="{Binding ElementName=cellPopGaussianBoxSpecsListView, Path=SelectedItem}" 
                                                    HorizontalAlignment="Center"
                                                    ContentTemplate="{StaticResource gaussBoxSpecDetailsTemplate}" 
                                                    Margin="0,2"/>
                </StackPanel>
            </DataTemplate>


            <DataTemplate x:Key="molpopDistributionDetailsTemplate">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="70" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <ContentControl Name="solfac_dist_cc"
                                    Grid.ColumnSpan="2" Grid.Row="0"
                                    Margin="0,6"
                                    BorderBrush="DarkGray" BorderThickness="1"
                                    Content="{Binding Path=mpInfo.mp_distribution}"  />
                </Grid>
            </DataTemplate>           
            
            <DataTemplate x:Key="cellPopDistributionDetailsTemplate">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="70" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <ContentControl Name="cp_dist"
                                    Grid.ColumnSpan="2" Grid.Row="0"
                                    Margin="0,6"
                                    BorderBrush="DarkGray" BorderThickness="1"
                                    Content="{Binding Path=cellPopDist}"   />
                </Grid>
            </DataTemplate>           

            <!-- =========================== -->
            <!-- Mol Pops -->

            <DataTemplate x:Key="molListItemTemplate">
                <StackPanel Orientation="Horizontal">                    
                    <TextBlock Text="{Binding Path=Name}" Margin="5,0,0,0"/>
                </StackPanel>
            </DataTemplate>
            
            <!-- skg daphne -->
            <!-- Reaction -->
            <DataTemplate x:Key="reacListItemTemplate">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding Path=TotalReactionString}" Margin="5,0,0,0"/>
                </StackPanel>
            </DataTemplate>

            <!-- =========================== -->
            <!-- Cell Population -->            
            <!-- Cell Pop Distributions -->
            <DataTemplate x:Key="cellPopDistributionTypeTemplate">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding Converter={StaticResource CellPopDistTypeEnumConv}}"/>
                </StackPanel>
            </DataTemplate>

            <DataTemplate x:Key="cellPopListItemTemplate">
                <StackPanel Orientation="Horizontal">
                    <!--<CheckBox IsChecked="{Binding Path=cellpopulation_render_on}" Style="{StaticResource EyeballCheckboxStyle}"/>-->
                    <Rectangle Width="10" Height="10"
                                               Margin="5,0,0,0"
                                               VerticalAlignment="Center"
                                               Fill="{Binding Path=cellpopulation_color, Converter={StaticResource colorToSolidBrushConv}}"
                                               Stroke="Black" StrokeThickness="0.5"/>

                    <!--Fill="{Binding Path=cellpopulation_color, Converter={StaticResource colorToSolidBrushConv}}"-->

                    <TextBlock Text="{Binding Path=cellpopulation_name}" Margin="5,0,0,0"/>
                    
                    <!--<TextBlock Text=" " />
                    <TextBlock Text="{Binding Path=number}" />
                    <TextBlock Text=" " />
                    <TextBlock Text="{Binding Path=CellType.CellName}" />-->
                    
                    <StackPanel Orientation="Horizontal">
                        <!-- Only want an "s" to show up if more than one cell -->
                        <!--<StackPanel.Style>
                            <Style TargetType="StackPanel">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=number, Converter={StaticResource ManyConv}}" Value="True">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=number, Converter={StaticResource ManyConv}}" Value="False">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>
                        <TextBlock Text="s" />-->
                    </StackPanel>

                </StackPanel>
            </DataTemplate>

            <DataTemplate x:Key="cellListItemTemplate">
                <StackPanel Orientation="Horizontal">
                    <Rectangle Width="10" Height="10"
                                               Margin="5,0,0,0"
                                               VerticalAlignment="Center"
                                               Fill="{Binding Path=cellpopulation_color, Converter={StaticResource colorToSolidBrushConv}}"
                                               Stroke="Black" StrokeThickness="0.5"/>
                    <TextBlock Text="{Binding Path=number}" Margin="5,0,0,0"/>
                    <TextBlock Text=" " />                    
                    <StackPanel Orientation="Horizontal">
                        <!-- Only want an "s" to show up if more than one cell -->
                        <StackPanel.Style>
                            <Style TargetType="StackPanel">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=number, Converter={StaticResource ManyConv}}" Value="True">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=number, Converter={StaticResource ManyConv}}" Value="False">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>
                        <TextBlock Text="s" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <!-- Only want a region name to show up if cells are constrained to region -->
                        <StackPanel.Style>
                            <Style TargetType="StackPanel">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=cellpopulation_constrained_to_region}" Value="True">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=cellpopulation_constrained_to_region}" Value="False">
                                        <Setter Property="Visibility" Value="Hidden" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>
                        <TextBlock Text=" " />
                        <TextBlock Text="{Binding Path=wrt_region, Converter={StaticResource RelativePosEnumConv}}" />
                        <TextBlock Text=" " />
                        <TextBlock Text="{Binding Path=cellpopulation_region_guid_ref, 
                                                                Converter={StaticResource RegionGUIDtoNameConv}, 
                                                                ConverterParameter={StaticResource cellsetRegionsListView}}" />
                    </StackPanel>
                </StackPanel>
            </DataTemplate>

            <!-- Color field template -->
            <!-- CellPopsListBox -->
            <DataTemplate x:Key="colorItemTemplate">
                <StackPanel Orientation="Horizontal">

                    <Rectangle Width="10" Height="10" Margin="4,0" Stroke="Black" StrokeThickness="0.5"   >
                        <Rectangle.Style>
                            <Style TargetType="Rectangle">
                                <Setter Property="Fill" Value="{Binding Converter={StaticResource ColorListToBrushConv}}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding}" Value="7">
                                        <Setter Property="Fill" Value="{Binding ElementName=CellPopsListBox, Path=SelectedItem.cellpopulation_color, Converter={StaticResource colorToSolidBrushConv}}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Rectangle.Style>

                    </Rectangle>
                    <TextBlock Width="40" Text="{Binding}" Margin="5,0,0,0"/>
                </StackPanel>
            </DataTemplate>
            
            <DataTemplate x:Key="cellPopDetailsTemplate">                
                <StackPanel>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="70" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto"/>                          
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <TextBlock Text="name" Margin="6,0"
                                        Grid.Column="0" Grid.Row="1"  
                                        HorizontalAlignment="Right" VerticalAlignment="Center" />
                        <TextBox Text="{Binding Path=cellpopulation_name, UpdateSourceTrigger=PropertyChanged}"
                                        Grid.Column="1" Grid.Row="1"  Margin="0,2"   />                        
                        
                        <TextBlock Text="cell type" Margin="6,0"
                                        Grid.Column="0" Grid.Row="0"  
                                        HorizontalAlignment="Right" VerticalAlignment="Center"  />
                        
                        <ComboBox x:Name="cell_type_combo_box"
                                        Grid.Column="1" Grid.Row="0" Margin="0,2"
                                        MinWidth="80"
                                        ItemsSource="{Binding Source={StaticResource cellTypesListView}}"
                                        DisplayMemberPath="CellName"
                                        SelectionChanged="cell_type_combo_box_SelectionChanged"
                                        SelectedValue="{Binding Path=cell_guid_ref, UpdateSourceTrigger=Explicit}"
                                        SelectedValuePath="cell_guid">
                            
                        </ComboBox>

                        <!--<Popup Name="myPopup" Grid.Column="1" Grid.Row="2" HorizontalAlignment="Right" PlacementTarget="{Binding ElementName=cell_type_combo_box}" >
                            
                            <Popup.Resources>
                                <DataTemplate x:Key="reacsPopupItemTemplate">
                                    <StackPanel Orientation="Horizontal" >
                                        <TextBlock Text="{Binding }" />
                                    </StackPanel>
                                </DataTemplate>
                            </Popup.Resources>
                            
                            <Popup.Style>
                                <Style TargetType="Popup">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=cell_type_combo_box, Path=IsMouseOver}" Value="True">
                                            <Setter Property="IsOpen" Value="True" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding ElementName=cell_type_combo_box, Path=IsDropDownOpen}" Value="True">
                                            <Setter Property="IsOpen" Value="False" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Popup.Style>

                            <StackPanel>
                            <TextBlock Text="Reactions in this cell" Background="White" Foreground="Green"  ></TextBlock>
                                <ListBox x:Name="lbTTt" MaxWidth="500" BorderThickness="2" BorderBrush="DarkBlue" Background="#F0F0F0F0" 
                                 ItemsSource="{Binding ElementName=cell_type_combo_box, Path=SelectedItem, Converter={StaticResource CellGuidToCellReactionsConv}, ConverterParameter={StaticResource ecmReactionsListView}}"
                                 ItemTemplate="{Binding Source={StaticResource reacsPopupItemTemplate}}"    >                                    
                            </ListBox>
                            </StackPanel>

                        </Popup>-->

                        <TextBlock Text="number" Margin="6,0"
                                        Grid.Column="0" Grid.Row="3"  
                                        HorizontalAlignment="Right" VerticalAlignment="Center"  />
                        <StackPanel Orientation="Horizontal"
                                    Grid.Column="1" Grid.Row="3"
                                    Margin="0,4">
                            <Slider x:Name="number_slider"
                                    Orientation="Horizontal"
                                    VerticalAlignment="Center"
                                    Width="100"
                                    RenderTransform="1.0,0,0,0.5,0,6"
                                    Minimum="1" 
                                    Maximum="10000" 
                                    Value="{Binding Path=number, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                    IsSnapToTickEnabled="True" 
                                    TickFrequency="1" 
                                    KeyboardNavigation.IsTabStop="False"
                                    />
                            
                            <editors:Int32EditBox CheckBoxVisibility="Collapsed" 
                                    SpinnerVisibility="Collapsed"
                                    HorizontalAlignment="Right"
                                    Format="N0"
                                    StepValue="10"
                                    Width="50" 
                                    CenterSlotHorizontalAlignment="Right"
                                    Value="{Binding ElementName=number_slider, Path=Value}"
                                    x:Name="numberBox"
                                    ValueChanged="numberBox_ValueChanged"
                                    />
                        </StackPanel>

                        <TextBlock Text="color" Margin="6,0" Grid.Column="0" Grid.Row="4" HorizontalAlignment="Right" VerticalAlignment="Center" />
                        <ComboBox x:Name="cbCellColor"  Width="140" HorizontalAlignment="Left" Grid.Column="1" Grid.Row="4" Margin="0,2"
                                        ItemsSource="{Binding Source={StaticResource colorList}}" 
                                        ItemTemplate="{Binding Source={StaticResource colorItemTemplate}}"
                                        SelectedIndex="{Binding Path=cellpopulation_predef_color, Converter={StaticResource ColorListToIntConv}, 
                                        Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        >                            
                        </ComboBox>

                        <StackPanel Grid.Column="1" Grid.Row="5" >
                            <StackPanel.Style>
                                <Style TargetType="StackPanel">
                                    <Setter Property="Visibility" Value="Hidden"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=cbCellColor, Path=SelectedIndex}" Value="7">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </StackPanel.Style>

                            <editors:ColorEditBox x:Name="cellColorEditBox" 
                                        CheckBoxVisibility="Collapsed"
                                        SpinnerVisibility="Collapsed"
                                        Width="140"
                                        HorizontalAlignment="Left" 
                                        Format="a r g b"
                                        Value="{Binding Path=cellpopulation_color, UpdateSourceTrigger=PropertyChanged}"
                                        Margin="0,2" >

                            </editors:ColorEditBox>
                        </StackPanel>

                        <!-- Show GUID - for debugging only -->
                        <!-- <TextBlock Text="guid_ref" Margin="6,0"
                                        Grid.Column="0" Grid.Row="4"  
                                        HorizontalAlignment="Right" VerticalAlignment="Center" />

                        <TextBox Text="{Binding Path=cell_guid_ref, UpdateSourceTrigger=PropertyChanged}"
                                        Grid.Column="1" Grid.Row="4"  Margin="0,2"   />-->
                    </Grid>
                    <Grid>
                        <Expander ExpandDirection="Down" Padding="6"
                                    
                                IsExpanded="False"
                                Header="Cell Placement Method"
                                x:Name="CPMExpander"
                                Margin="0,-10,0,0" 
                                Canvas.ZIndex="1"         >
                            
                                <StackPanel Orientation="Vertical">                                
                                <StackPanel Orientation="Vertical">
                                    <StackPanel>                                        
                                        <StackPanel Margin="8,0">
                                            
                                            <ComboBox x:Name="cbCellLocationType" Margin="0,4" Width="200" HorizontalAlignment="Left"
                                                ItemsSource="{Binding Source={StaticResource cellPopDistributionTypes}}"
                                                ItemTemplate="{Binding Source={StaticResource cellPopDistributionTypeTemplate}}"
                                                SelectedValue="{Binding Path=cellPopDist.DistType, Mode=OneWay}"
                                                SelectionChanged="cbCellLocationType_SelectionChanged">
                                            </ComboBox>
                                        </StackPanel>
                                            <StackPanel Orientation="Vertical" Margin="16,0">                                            
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                </Grid.RowDefinitions>
                                                
                                                <StackPanel Grid.Column="0" Grid.Row="0">
                                                    <ContentControl Name="cellPopDistrib"
                                                        Content="{Binding ElementName=CellPopsListBox, Path=SelectedItem}" 
                                                        ContentTemplate="{StaticResource cellPopDistributionDetailsTemplate}" 
                                                        Margin="6,2"/>
                                                </StackPanel>

                                                <StackPanel  Margin="0,6,0,0" Grid.Column="0" Grid.Row="1" Orientation="Vertical">
                                                    <TextBlock Margin="0,0" HorizontalAlignment="Left" VerticalAlignment="Center">Actual Cell Locations</TextBlock>
                                                    <DataGrid x:Name="dgLocations" ItemsSource="{Binding ElementName=CellPopsListBox, Path=SelectedItem.cellPopDist.CellStates, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                                    Height="150" MinWidth="200" MinRowHeight="20" MinColumnWidth="20" ColumnWidth="60" MaxColumnWidth="80"
                                                                    CanUserReorderColumns="False" CanUserResizeRows="False"
                                                                    CanUserSortColumns="False" RowHeaderWidth="0"
                                                                    VerticalContentAlignment="Center"
                                                                    CanUserAddRows="False"
                                                                    BorderThickness="1"
                                                                    BorderBrush="Black"
                                                                    local:DataGridBehavior.DisplayRowNumber="True"
                                                                    KeyDown="dgLocations_KeyDown"
                                                                    ScrollBar.Scroll="dgLocations_Scroll"
                                                                    ScrollViewer.ScrollChanged="dgLocations_Scroll"
                                                                    SourceUpdated="dgLocations_Unloaded"
                                                                    LostFocus="dgLocations_CheckPositions"
                                                                    >
                                                        <DataGrid.ContextMenu>
                                                            <ContextMenu >
                                                                <MenuItem Header="Paste" Name="menuCoordinatesPaste" Click="menuCoordinatesPaste_Click"></MenuItem>
                                                            </ContextMenu>
                                                        </DataGrid.ContextMenu>

                                                        <DataGrid.ColumnHeaderStyle>
                                                            <Style TargetType="DataGridColumnHeader" >
                                                                <Setter Property="FontSize" Value="12" />
                                                                <Setter Property="Height" Value="24" />
                                                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                                                <Setter Property="BorderThickness" Value="1" />
                                                                <Setter Property="BorderBrush" Value="Black" />
                                                                <Setter Property="Background">
                                                                    <Setter.Value>
                                                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                                            <GradientStop Offset="0.0" Color="White" />
                                                                            <GradientStop Offset="1.0" Color="Beige" />
                                                                        </LinearGradientBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </DataGrid.ColumnHeaderStyle>                                                        
                                                        <DataGrid.Columns>
                                                            <DataGridTextColumn  Header="Cell" Width="40" 
                                                                ScrollViewer.CanContentScroll ="False"
                                                                Binding="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Converter={local:RowToIndexConverter}}" 
                                                            />

                                                            <!--<DataGridTemplateColumn x:Name="colX" Header="X"  Width="110" MinWidth="100" MaxWidth="200">
                                                                <DataGridTemplateColumn.CellTemplate>
                                                                    <DataTemplate>
                                                                        <TextBox Width="110" TextAlignment="Center" BorderThickness="0" HorizontalAlignment="Center" IsReadOnly="True"
                                                                                Text="{Binding Path=X, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"    >
                                                                        </TextBox>
                                                                    </DataTemplate>
                                                                </DataGridTemplateColumn.CellTemplate>
                                                            </DataGridTemplateColumn>
                                                            <DataGridTemplateColumn x:Name="colY" Header="Y"  Width="110" MinWidth="100" MaxWidth="200">
                                                                <DataGridTemplateColumn.CellTemplate>
                                                                    <DataTemplate>
                                                                        <TextBox Width="110" TextAlignment="Center" BorderThickness="0" HorizontalAlignment="Center" IsReadOnly="True"
                                                                                Text="{Binding Path=Y, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"    >
                                                                        </TextBox>
                                                                    </DataTemplate>
                                                                </DataGridTemplateColumn.CellTemplate>
                                                            </DataGridTemplateColumn>
                                                            <DataGridTemplateColumn x:Name="colZ" Header="Z"  Width="110" MinWidth="100" MaxWidth="200">
                                                                <DataGridTemplateColumn.CellTemplate>
                                                                    <DataTemplate>
                                                                        <TextBox Width="110" TextAlignment="Center" BorderThickness="0" HorizontalAlignment="Center" IsReadOnly="True"
                                                                                Text="{Binding Path=Z, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"    >
                                                                        </TextBox>
                                                                    </DataTemplate>
                                                                </DataGridTemplateColumn.CellTemplate>
                                                            </DataGridTemplateColumn>-->

                                                            
                                                        </DataGrid.Columns>

                                                    </DataGrid>
                                                </StackPanel>
                                            </Grid>

                                        </StackPanel>                                        
                                    </StackPanel>
                                </StackPanel>
                            </StackPanel>
                        </Expander>
                    </Grid>
                </StackPanel>
            </DataTemplate>

            <DataTemplate x:Key="cellDetailsTemplate">

                <local:DaphneStackPanel x:Name="panelCellDetails" Orientation="Horizontal" IsReadOnly="{Binding Path=ReadOnly}">
                    <StackPanel Orientation="Vertical">
                        <StackPanel Orientation="Horizontal" Width="220" >
                            <TextBlock Text="name" Margin="6,0" HorizontalAlignment="Right" VerticalAlignment="Center" Width="80" />
                            <TextBox Text="{Binding Path=CellName, UpdateSourceTrigger=PropertyChanged}" Margin="0,2" Width="120"  />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Width="220" >
                            <TextBlock Text="radius" Margin="6,0" HorizontalAlignment="Right" VerticalAlignment="Center" Width="80" />
                            <TextBox Text="{Binding Path=CellRadius, UpdateSourceTrigger=PropertyChanged}" Margin="0,2"  Width="120" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Width="220" >
                            <TextBlock Text="differentiator" Margin="6,0" Grid.Column="0" Grid.Row="2" HorizontalAlignment="Right" VerticalAlignment="Center" Width="80" />
                            <ComboBox  MinWidth="120"  />
                        </StackPanel>
                    </StackPanel>

                    <Expander                                            
                                Padding="5" ExpandDirection="Down"
                                IsExpanded="True"
                                Header="Locomotor"                                                  
                                x:Name="LocomotorExpander"
                                Margin="0,-10,0,0" 
                                Canvas.ZIndex="1"     
                                HorizontalAlignment="Right"
                                Width="Auto"
                                Visibility="Visible"
                                >

                        <StackPanel Orientation="Vertical" Margin="0,-10">
                            <StackPanel Orientation="Horizontal" Width="240">
                                <StackPanel.Resources>
                                    <DataTemplate x:Key="libMolListItemTemplate">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{Binding Path=Name}" 
                                                       Foreground="{Binding Path=ForegroundColor, Converter={StaticResource textToColorConv}}" 
                                                       Margin="5,0,0,0" />
                                        </StackPanel>
                                    </DataTemplate>
                                </StackPanel.Resources>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="driver" Margin="6,0" HorizontalAlignment="Right" VerticalAlignment="Center" Width="120"/>
                                    <ComboBox  MinWidth="100"
                                                DisplayMemberPath="Name"
                                                SelectedValue="{Binding Path=locomotor_mol_guid_ref}"
                                                SelectedValuePath="molecule_guid">

                                        <ComboBox.ItemsSource>
                                            <CompositeCollection>
                                                <ComboBoxItem>None</ComboBoxItem>
                                                <CollectionContainer
                                                    Collection="{Binding Source={StaticResource moleculesListView}}" />
                                            </CompositeCollection>
                                        </ComboBox.ItemsSource>
                                    </ComboBox>

                                </StackPanel>
                            </StackPanel>

                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="transduction constant" Margin="6,0" HorizontalAlignment="Right" VerticalAlignment="Center" Width="120"/>
                                <TextBox Text="{Binding Path=TransductionConstant, UpdateSourceTrigger=PropertyChanged}"  Margin="0,2" Width="100"  />
                            </StackPanel>

                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="drag coefficient" Margin="6,0" HorizontalAlignment="Right" VerticalAlignment="Center" Width="120"/>
                                <TextBox Text="{Binding Path=DragCoefficient, UpdateSourceTrigger=PropertyChanged}"  Margin="0,2" Width="100"  />
                            </StackPanel>

                        </StackPanel>
                    </Expander>
                </local:DaphneStackPanel>

            </DataTemplate>

            <Style TargetType="editors:DoubleEditBox">
                <Setter Property="CheckBoxVisibility" Value="Collapsed" />
                <Setter Property="SpinnerVisibility" Value="Collapsed" />
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="Format" Value="G" />
                <Setter Property="Minimum" Value="0" />
                <Setter Property="Width" Value="60" />
                <Setter Property="CenterSlotHorizontalAlignment" Value="Right" />
            </Style>
            
            <DataTemplate x:Key="cellTypeListItemTemplate">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding Path=cell_subset_type.cell_subset_name}"/>
                </StackPanel>
            </DataTemplate>
            
            <DataTemplate x:Key="cellTypeReceptorItemTemplate">
                <TextBlock Text="{Binding Path=receptor_solfac_type_guid_ref, 
                        Converter={StaticResource SolfacGUIDtoReceptorNameConv}, 
                        ConverterParameter={StaticResource solfacSolfacTypesListView}}"
                        HorizontalAlignment="Left"
                               />
            </DataTemplate>

            

            <!-- =========================== -->
            <!-- Mol Pop Distributions -->            
            <DataTemplate x:Key="molpopDistributionTypeTemplate">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding Converter={StaticResource MolPopDistTypeEnumConv}}"/>
                </StackPanel>
            </DataTemplate>
            <DataTemplate x:Key="molpopDistributionTypeTemplate2">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding Converter={StaticResource MolPopDistTypeEnumConv}}"/>
                </StackPanel>
            </DataTemplate>

            <DataTemplate x:Key="solfacTimeAmpListItemTemplate">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Time="/>
                    <TextBlock Text="{Binding Path=time_value}"/>
                    <TextBlock Text=", Amp="/>
                    <TextBlock Text="{Binding Path=amplitude}"/>
                </StackPanel>
            </DataTemplate>            

            <DataTemplate x:Key="membraneMolPopDetailsTemplate">
                <local:DaphneStackPanel x:Name="membMolPopDetails" Orientation="Horizontal" IsReadOnly="{Binding ElementName=CellsListBox, Path=SelectedItem.ReadOnly}">
                    <StackPanel>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <StackPanel Orientation="Horizontal" Grid.Column="0" Grid.Row="3" >
                                <TextBlock Text="name" Margin="0,0" HorizontalAlignment="Right"  VerticalAlignment="Center" TextAlignment="Right" MinWidth="60"/>
                                <TextBox Text="{Binding Path=Name, UpdateSourceTrigger=PropertyChanged}"  Margin="4,2" MinWidth="140" HorizontalAlignment="Left"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Grid.Column="0" Grid.Row="1" Margin="0,10">
                                <TextBlock Text="color" Margin="0,0" HorizontalAlignment="Right" VerticalAlignment="Center" TextAlignment="Right" MinWidth="60"  />
                                <editors:ColorEditBox x:Name="cellColorEditBox"
                                    CheckBoxVisibility="Collapsed"
                                    SpinnerVisibility="Collapsed"
                                    Width="140"
                                    HorizontalAlignment="Left" 
                                    Format="a r g b"
                                    Value="{Binding Path=mpInfo.mp_color}"
                                    Margin="4,2"
                                    />
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Grid.Column="0" Grid.Row="2" Margin="0,0" IsEnabled="{Binding Path=mpInfo.mp_render_on}">
                                <TextBlock Text="render wt" Margin="0,0" MinWidth="60"  VerticalAlignment="Center"  TextAlignment="Right"  />
                                <Slider x:Name="solfac_weight_slider"
                                Orientation="Horizontal"
                                VerticalAlignment="Center"
                                    HorizontalAlignment="Left"
                                Width="50"
                                    Margin="4,0"
                                RenderTransform="1.0,0,0,0.5,0,7"
                                Minimum="0" 
                                Maximum="5" 
                                Value="{Binding Path=mpInfo.mp_render_blending_weight}" 
                                IsSnapToTickEnabled="True" 
                                TickFrequency="0.1" 
                                />
                                <TextBlock Text="{Binding ElementName=solfac_weight_slider, Path=Value}" 
                                VerticalAlignment="Center"
                                TextAlignment="Right"
                                Margin="5,0,0,0"
                                MinWidth="20"
                                />
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Grid.Column="0" Grid.Row="0" Margin="0,10">
                                <TextBlock Text="molecule" Margin="0,0" HorizontalAlignment="Right" VerticalAlignment="Center"  TextAlignment="Right" MinWidth="60"/>

                                <ComboBox  x:Name="memb_molecule_combo_box" MinWidth="100" HorizontalAlignment="Left"  Margin="4,0" IsEditable="True"
                                                    ItemsSource="{Binding Source={StaticResource boundaryMoleculesListView}}"
                                                    DisplayMemberPath="Name"                                                    
                                                    SelectedValue="{Binding Path=molecule_guid_ref, UpdateSourceTrigger=Explicit}"
                                                    SelectedValuePath="molecule_guid"
                                                    SelectionChanged="memb_molecule_combo_box_SelectionChanged"
                                                    GotFocus="memb_molecule_combo_box_GotFocus"
                                                    />
                            </StackPanel>
                        </Grid>
                    </StackPanel>
                    <StackPanel Margin="10,0">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <StackPanel Orientation="Vertical" Grid.Column="0" Grid.Row="0">
                                <TextBlock Text="Homogeneous Initial Distribution" Margin="20,0" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                                <StackPanel Orientation="Horizontal" Margin="28,10">
                                    <TextBlock Text="concentration (" VerticalAlignment="Center" />
                                    <TextBlock Text="molec/µm^2" VerticalAlignment="Center" Margin="0,0,0,0"/>
                                    <TextBlock Text=")" VerticalAlignment="Center" />
                                </StackPanel>
                            </StackPanel>
                            
                            <StackPanel Grid.Column="0" Grid.Row="1" Margin="0,-10">
                                <ContentControl Name="membraneMolPopDistributionDetails"
                                        Content="{Binding ElementName=CellMembraneMolPopsListBox, Path=SelectedItem}" 
                                        ContentTemplate="{StaticResource molpopDistributionDetailsTemplate}" 
                                        Margin="6,2"/>
                            </StackPanel>
                        </Grid>
                    </StackPanel>
                </local:DaphneStackPanel>
            </DataTemplate>
            <DataTemplate x:Key="cytosolMolPopDetailsTemplate">
                <local:DaphneStackPanel x:Name="membMolPopDetails" Orientation="Horizontal" IsReadOnly="{Binding ElementName=CellsListBox, Path=SelectedItem.ReadOnly}">
                    <StackPanel>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <StackPanel Orientation="Horizontal" Grid.Column="0" Grid.Row="3" >
                                <TextBlock Text="name" Margin="0,0" HorizontalAlignment="Right"  VerticalAlignment="Center" TextAlignment="Right" MinWidth="60"/>
                                <TextBox Text="{Binding Path=Name, UpdateSourceTrigger=PropertyChanged}"  Margin="4,2" MinWidth="140" HorizontalAlignment="Left"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Grid.Column="0" Grid.Row="1" Margin="0,10">
                                <TextBlock Text="color" Margin="0,0" HorizontalAlignment="Right" VerticalAlignment="Center" TextAlignment="Right" MinWidth="60"  />
                                <editors:ColorEditBox x:Name="cellColorEditBox"
                                    CheckBoxVisibility="Collapsed"
                                    SpinnerVisibility="Collapsed"
                                    Width="140"
                                    HorizontalAlignment="Left" 
                                    Format="a r g b"
                                    Value="{Binding Path=mpInfo.mp_color}"
                                    Margin="4,2"
                                    />
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Grid.Column="0" Grid.Row="2" Margin="0,0" IsEnabled="{Binding Path=mpInfo.mp_render_on}">
                                <TextBlock Text="render wt" Margin="0,0" MinWidth="60"  VerticalAlignment="Center"  TextAlignment="Right"  />
                                <Slider x:Name="solfac_weight_slider"
                                Orientation="Horizontal"
                                VerticalAlignment="Center"
                                    HorizontalAlignment="Left"
                                Width="50"
                                    Margin="4,0"
                                RenderTransform="1.0,0,0,0.5,0,7"
                                Minimum="0" 
                                Maximum="5" 
                                Value="{Binding Path=mpInfo.mp_render_blending_weight}" 
                                IsSnapToTickEnabled="True" 
                                TickFrequency="0.1" 
                                />
                                <TextBlock Text="{Binding ElementName=solfac_weight_slider, Path=Value}" 
                                VerticalAlignment="Center"
                                TextAlignment="Right"
                                Margin="5,0,0,0"
                                MinWidth="20"
                                />
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Grid.Column="0" Grid.Row="0" Margin="0,10">
                                <TextBlock Text="molecule" Margin="0,0" HorizontalAlignment="Right" VerticalAlignment="Center"  TextAlignment="Right" MinWidth="60"/>
                                
                                <ComboBox  x:Name="cyto_molecule_combo_box" MinWidth="100" HorizontalAlignment="Left"  Margin="4,0" IsEditable="True"
                                                    ItemsSource="{Binding Source={StaticResource cytoBulkMoleculesListView}}"
                                                    DisplayMemberPath="Name"                                                    
                                                    SelectedValue="{Binding Path=molecule_guid_ref, UpdateSourceTrigger=Explicit}"
                                                    SelectedValuePath="molecule_guid"
                                                    SelectionChanged="cyto_molecule_combo_box_SelectionChanged"
                                                    GotFocus="cyto_molecule_combo_box_GotFocus"
                                                    />
                            </StackPanel>
                        </Grid>
                    </StackPanel>
                    <StackPanel Margin="10,0">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <StackPanel Orientation="Vertical" Grid.Column="0" Grid.Row="0">
                                <TextBlock Text="Homogeneous Initial Distribution" Margin="20,0" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                                <StackPanel Orientation="Horizontal" Margin="28,10">
                                    <TextBlock Text="concentration (" VerticalAlignment="Center" />
                                    <TextBlock Text="molec/µm^3" VerticalAlignment="Center" Margin="0,0,0,0"/>
                                    <TextBlock Text=")" VerticalAlignment="Center" />
                                </StackPanel>
                            </StackPanel>

                            <StackPanel Grid.Column="0" Grid.Row="1" Margin="0,-10">
                                <ContentControl Name="SolfacDistributionDetails"
                                        Content="{Binding ElementName=CellCytosolMolPopsListBox, Path=SelectedItem}" 
                                        ContentTemplate="{StaticResource molpopDistributionDetailsTemplate}" 
                                        Margin="6,2"/>
                            </StackPanel>
                        </Grid>
                    </StackPanel>
                </local:DaphneStackPanel>
            </DataTemplate>
            
            <DataTemplate x:Key="newMolPopDetailsTemplate">
                <StackPanel Orientation="Horizontal">
                    <StackPanel>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />                                
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />                                
                                <RowDefinition />                                                                
                                <RowDefinition />                                                                                                
                            </Grid.RowDefinitions>
                            <StackPanel Orientation="Horizontal" Grid.Column="0" Grid.Row="3" >
                                <TextBlock Text="name" Margin="0,0" HorizontalAlignment="Right"  VerticalAlignment="Center" TextAlignment="Right" MinWidth="60"/>
                                <TextBox Text="{Binding Path=Name, UpdateSourceTrigger=PropertyChanged}"  Margin="4,2" MinWidth="140" HorizontalAlignment="Left"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Grid.Column="0" Grid.Row="1" Margin="0,10">
                                <TextBlock Text="color" Margin="0,0" HorizontalAlignment="Right" VerticalAlignment="Center" TextAlignment="Right" MinWidth="60"  />
                                <editors:ColorEditBox x:Name="cellColorEditBox"
                                    CheckBoxVisibility="Collapsed"
                                    SpinnerVisibility="Collapsed"
                                    Width="140"
                                    HorizontalAlignment="Left" 
                                    Format="a r g b"
                                    Value="{Binding Path=mpInfo.mp_color}"
                                    Margin="4,2"
                                    />
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Grid.Column="0" Grid.Row="2" Margin="0,0" IsEnabled="{Binding Path=mpInfo.mp_render_on}">
                                <TextBlock Text="render wt" Margin="0,0" MinWidth="60"  VerticalAlignment="Center"  TextAlignment="Right"  />
                                <Slider x:Name="solfac_weight_slider"
                                Orientation="Horizontal"
                                VerticalAlignment="Center"
                                    HorizontalAlignment="Left"
                                Width="50"
                                    Margin="4,0"
                                RenderTransform="1.0,0,0,0.5,0,7"
                                Minimum="0" 
                                Maximum="5" 
                                Value="{Binding Path=mpInfo.mp_render_blending_weight}" 
                                IsSnapToTickEnabled="True" 
                                TickFrequency="0.1" 
                                />
                                <TextBlock Text="{Binding ElementName=solfac_weight_slider, Path=Value}" 
                                VerticalAlignment="Center"
                                TextAlignment="Right"
                                Margin="5,0,0,0"
                                MinWidth="20"
                                />
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Grid.Column="0" Grid.Row="0" Margin="0,10">
                                <TextBlock Text="molecule" Margin="0,0" HorizontalAlignment="Right" VerticalAlignment="Center"  TextAlignment="Right" MinWidth="60"/>

                                <ComboBox  x:Name="ecm_molecule_combo_box" MinWidth="140" HorizontalAlignment="Left"  Margin="4,0" 
                                                    ItemsSource="{Binding Source={StaticResource bulkMoleculesListView}}"
                                                    DisplayMemberPath="Name"
                                                    SelectedValue="{Binding Path=molecule_guid_ref, UpdateSourceTrigger=Explicit}"
                                                    SelectedValuePath="molecule_guid"
                                                    SelectionChanged="molecule_combo_box2_SelectionChanged" >

                                </ComboBox>
                                                    
                            </StackPanel>

                        </Grid>
                    </StackPanel>
                    <StackPanel Margin="10,0">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <StackPanel Orientation="Horizontal" Grid.Column="0" Grid.Row="0">
                                <TextBlock Text="initial distribution" Margin="0,0" HorizontalAlignment="Right" VerticalAlignment="Center" />
                                
                                <ComboBox Margin="10,0" 
                                        Name="MolPopDistributionTypeComboBox"
                                        ItemsSource="{Binding Source={StaticResource molpopDistributionTypes}}"
                                        ItemTemplate="{Binding Source={StaticResource molpopDistributionTypeTemplate}}"
                                        SelectedValue="{Binding Path=mpInfo.mp_distribution.mp_distribution_type, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"
                                        SelectionChanged="MolPopDistributionComboBox_SelectionChanged"
                                        GotFocus="MolPopDistributionTypeComboBox_GotFocus"
                                        MinWidth="120">

                                    <ComboBox.Style>
                                        <Style TargetType="ComboBox">                                            
                                            <Style.Triggers>                                                
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding ElementName=cbBoundFace, Path=SelectedIndex}" Value="0" />
                                                        <Condition Binding="{Binding ElementName=MolPopDistributionTypeComboBox, Path=SelectedIndex}" Value="1"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="ComboBox.SelectedIndex" Value="0"/>
                                                </MultiDataTrigger>
                                                
                                            </Style.Triggers>
                                        </Style>
                                    </ComboBox.Style>
                                    
                                    <ComboBox.ItemContainerStyle>
                                        <Style TargetType="{x:Type ComboBoxItem}">
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding ElementName=cbBoundFace,Path=Visibility}" Value="Hidden" />
                                                        <Condition Binding="{Binding ComboBoxItem.Content}" Value="Linear" />
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="IsEnabled" Value="False" />
                                                </MultiDataTrigger>
                                                
                                            </Style.Triggers>
                                        </Style>
                                    </ComboBox.ItemContainerStyle>
                                </ComboBox>
                            </StackPanel>

                            <StackPanel Grid.Column="0" Grid.Row="1">
                                <ContentControl Name="SolfacDistributionDetails"
                                        Content="{Binding ElementName=lbEcsMolPops, Path=SelectedItem}" 
                                        ContentTemplate="{StaticResource molpopDistributionDetailsTemplate}" 
                                        Margin="6,2"/>
                            </StackPanel>
                            
                        </Grid>
                    </StackPanel>
                </StackPanel>
            </DataTemplate>
            
            <DataTemplate x:Key="reactionDetailsTemplate">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="100" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    
                    <TextBlock Text="rate constant" Margin="6,0"
                            Grid.Column="0" Grid.Row="0"  
                            HorizontalAlignment="Right" VerticalAlignment="Center"
                            />

                    <TextBox Margin="0,2" x:Name="txtRateConst"
                            Grid.Column="1" Grid.Row="0" 
                            Text="{Binding Path=RateConst, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"
                             IsReadOnly="True" />

                    <TextBlock Text="reaction type" Margin="6,0"
                            Grid.Column="0" Grid.Row="1"  
                            HorizontalAlignment="Right" VerticalAlignment="Center"
                            />

                    <TextBox Margin="0,2" x:Name="txtReactionType"
                            Grid.Column="1" Grid.Row="1"  
                                Text="{Binding Path=ReacTypeString, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"
                             IsReadOnly="True" />

                    
                </Grid>
            </DataTemplate>

            <!-- =========================== -->
            <!-- Gaussian Specifications -->

            <DataTemplate x:Key="gaussianSpecListItemTemplate">
                <StackPanel Orientation="Horizontal">
                    <CheckBox IsChecked="{Binding Path=gaussian_region_visibility}" Style="{StaticResource EyeballCheckboxStyle}" />
                    <Rectangle Width="10" Height="10"
                               Margin="5,0,0,0"
                               VerticalAlignment="Center"
                               Fill="{Binding Path=gaussian_spec_color, Converter={StaticResource colorToSolidBrushConv}}"
                               Stroke="Black" StrokeThickness="0.5"/>
                    <TextBlock Text="{Binding Path=gaussian_spec_name}" Margin="5,0,0,0"/>
                </StackPanel>
            </DataTemplate>

            <DataTemplate x:Key="gaussianSpecDetailsTemplate">
                <StackPanel Orientation="Vertical">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="70" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <TextBlock Text="name" Margin="6,0"
                                       Grid.Column="0" Grid.Row="0"  
                                       HorizontalAlignment="Right" VerticalAlignment="Center"
                                       />
                        <TextBox Text="{Binding Path=gaussian_spec_name, UpdateSourceTrigger=PropertyChanged}"
                                     Grid.Column="1" Grid.Row="0"
                                     />
                        <TextBlock Text="color" Margin="6,0"
                                   Grid.Column="0" Grid.Row="3"  
                                   HorizontalAlignment="Right" VerticalAlignment="Center"
                                   />
                        <editors:ColorEditBox x:Name="gaussSpecColorEditBox"
                                          Grid.Column="1" Grid.Row="3"
                                          CheckBoxVisibility="Collapsed"
                                          SpinnerVisibility="Collapsed"
                                          Width="140"
                                          HorizontalAlignment="Left" 
                                          Format="a r g b"
                                          Value="{Binding Path=gaussian_spec_color}"
                                              Margin="0,2"
                                          />
                    </Grid>
                    <ListView Name="ggBoxSpecsListView"
                                              ItemsSource="{Binding Source={StaticResource boxSpecsListView}}"
                                              DisplayMemberPath="box_guid"
                                              SelectedValue="{Binding Path=gaussian_spec_box_guid_ref, Mode=OneWay}"
                                              SelectedValuePath="box_guid"
                                              Visibility="Collapsed"
                                              />
                    <ContentControl Name="GGBoxSpecDetails"
                                                    Content="{Binding ElementName=ggBoxSpecsListView, Path=SelectedItem}" 
                                                    HorizontalAlignment="Center"
                                                    ContentTemplate="{StaticResource gaussBoxSpecDetailsTemplate}" 
                                                    Margin="0,2"/>
                </StackPanel>
            </DataTemplate>

            <DataTemplate x:Key="reactionListItemTemplate">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding Path=TotalReactionString}" Foreground="{Binding Path=ForegroundColor, Converter={StaticResource textToColorConv}}"/>
                    <TextBlock Text="    " />
                    <TextBlock Text="Rate:  " Foreground="{Binding Path=ForegroundColor, Converter={StaticResource textToColorConv}}"/>
                    <TextBlock Text="{Binding Path=rate_const, StringFormat={}{0:#.00}}" Foreground="Black" />
                </StackPanel>
            </DataTemplate>

        </TabControl.Resources>

        <!-- SIM SETUP -->
        <TabItem Header="Sim Setup" >        
            <ScrollViewer VerticalScrollBarVisibility="Auto">
                <StackPanel Orientation="Vertical" Margin="8">

                    <!-- Experiment -->
                    <TextBlock Text="Experiment name" FontWeight="Bold" Margin="0,5,0,0" />
                    <TextBox Text="{Binding Path=experiment_name, UpdateSourceTrigger=PropertyChanged}" x:Name="experiment_name_box"/>

                    <TextBlock Text="Description" FontWeight="Bold" Margin="0,10,0,0" />
                    <TextBox Text="{Binding Path=experiment_description, UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap"
                                        Height="40" MaxWidth="{Binding ElementName=experiment_name_box, Path=ActualWidth}"
                                        VerticalScrollBarVisibility="Auto"/>

                    <!-- TimeConfig -->
                    <TextBlock Text="Time configuration" FontWeight="Bold" Margin="0,10,0,0" />
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="total time" Margin="6,0"
                                                    Grid.Column="0" Grid.Row="2"  
                                                    HorizontalAlignment="Right" VerticalAlignment="Center"
                                                    TextAlignment="Right"
                                                    Width="120"
                                                    />
                        <Slider Name="time_duration_slider"
                                                Orientation="Horizontal"
                                                VerticalAlignment="Center"
                                                Width="100"
                                                RenderTransform="1.0,0,0,0.5,0,7"
                                                Minimum="0.001" 
                                                Maximum="28800" 
                                                Value="{Binding Path=scenario.time_config.duration, UpdateSourceTrigger=PropertyChanged}" 
                                                IsSnapToTickEnabled="True" 
                                                TickFrequency="10" 
                                                KeyboardNavigation.IsTabStop="False"
                                                ValueChanged="time_duration_slider_ValueChanged"
                                                />
                        <editors:DoubleEditBox x:Name="TimeDurationReadout" 
                                                              CheckBoxVisibility="Collapsed" 
                                                              SpinnerVisibility="Collapsed"
                                                              HorizontalAlignment="Right"
                                                              Format="F3"
                                                              StepValue="100"
                                                              Width="60" 
                                                              CenterSlotHorizontalAlignment="Right"
                                                              Value="{Binding ElementName=time_duration_slider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                                              />
                        <TextBlock Text="min" VerticalAlignment="Center" Margin="2,0,0,0"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="rendering interval" Margin="6,0"
                                                    Grid.Column="0" Grid.Row="3"  
                                                    HorizontalAlignment="Right" VerticalAlignment="Center"
                                                    TextAlignment="Right"
                                                    Width="120"
                                                    />
                        <Slider Name="time_step_slider"
                                                Orientation="Horizontal"
                                                VerticalAlignment="Center"
                                                Width="100"
                                                RenderTransform="1.0,0,0,0.5,0,7"
                                                Maximum="{Binding ElementName=time_duration_slider, Path=Value}" 
                                                Minimum="0.001" 
                                                Value="{Binding Path=scenario.time_config.rendering_interval}" 
                                                IsSnapToTickEnabled="True" 
                                                TickFrequency="0.01" 
                                                KeyboardNavigation.IsTabStop="False"
                                                />
                        <editors:DoubleEditBox x:Name="TimeStepReadout" 
                                                              CheckBoxVisibility="Collapsed" 
                                                              SpinnerVisibility="Collapsed"
                                                              HorizontalAlignment="Right"
                                                              Format="N3"
                                                              StepValue="0.01"
                                                              Width="60" 
                                                              CenterSlotHorizontalAlignment="Right"
                                                              Value="{Binding ElementName=time_step_slider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                                              />
                        <TextBlock Text="min" VerticalAlignment="Center" Margin="2,0,0,0"/>
                    </StackPanel>
                    <!--*************************************************-->
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="sampling interval" Margin="6,0"
                                                    Grid.Column="0" Grid.Row="4"  
                                                    HorizontalAlignment="Right" VerticalAlignment="Center"
                                                    TextAlignment="Right"
                                                    Width="120"
                                                    />
                        <Slider Name="sampling_interval_slider"
                                                Orientation="Horizontal"
                                                VerticalAlignment="Center"
                                                Width="100"
                                                RenderTransform="1.0,0,0,0.5,0,7"
                                                Maximum="{Binding ElementName=time_duration_slider, Mode=OneWay, Path=Value}"
                                                Minimum="0.001"
                                                Value="{Binding Path=scenario.time_config.sampling_interval}" 
                                                IsSnapToTickEnabled="True" 
                                                TickFrequency="0.01" 
                                                KeyboardNavigation.IsTabStop="False"
                                                ValueChanged="sampling_interval_slider_ValueChanged"
                                                />
                        <editors:DoubleEditBox x:Name="SamplingInterval" 
                                                              CheckBoxVisibility="Collapsed" 
                                                              SpinnerVisibility="Collapsed"
                                                              HorizontalAlignment="Right"
                                                              Format="N3"
                                                              StepValue="0.01"
                                                              Width="60" 
                                                              CenterSlotHorizontalAlignment="Right"
                                                              Value="{Binding ElementName=sampling_interval_slider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                                              />
                        <TextBlock Text="min" VerticalAlignment="Center" Margin="2,0,0,0"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="repetitions" Margin="6,0"
                                                    Grid.Column="0" Grid.Row="5"  
                                                    HorizontalAlignment="Right" VerticalAlignment="Center"
                                                    TextAlignment="Right"
                                                    Width="120"
                                                    />
                        <Slider Name="exp_rep_slider"
                                                Orientation="Horizontal"
                                                VerticalAlignment="Center"
                                                Width="100"
                                                RenderTransform="1.0,0,0,0.5,0,7"
                                                Minimum="1" 
                                                Maximum="50" 
                                                Value="{Binding Path=experiment_reps}" 
                                                IsSnapToTickEnabled="True" 
                                                TickFrequency="3" 
                                                KeyboardNavigation.IsTabStop="False"
                                                />
                        <editors:Int32EditBox x:Name="ExpRepReadout" 
                                                CheckBoxVisibility="Collapsed" 
                                                SpinnerVisibility="Collapsed"
                                                HorizontalAlignment="Right"
                                                Width="60" 
                                                CenterSlotHorizontalAlignment="Right"
                                                Value="{Binding ElementName=exp_rep_slider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                                />
                        <TextBlock Text="times" VerticalAlignment="Center" Margin="2,0,0,0"/>
                    </StackPanel>

                    <!-- Toroidal BoundaryTypeToBooleanConv
                    SelectedIndex="{Binding Path=scenario.environment.toroidal, Converter=BoolToIndexConv}"
                    -->
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Boundary Condition" FontWeight="Bold" Margin="0,20,0,0"/>
                        <CheckBox x:Name="cbToroidal" Margin="10,22" Visibility="Hidden" IsChecked="{Binding Path=scenario.environment.toroidal}"/>
                        <ComboBox x:Name="comboToroidal" MinWidth="120" Margin="12,10" Height="22"
                                  SelectedIndex="{Binding scenario.environment.toroidal, Converter={StaticResource BoolToIndexConv}}"
                                  ItemsSource="{Binding Source={StaticResource boundaryTypes}}"
                                  SelectionChanged="comboToroidal_SelectionChanged"
                                  >
                        </ComboBox>
                        <!--<Button Click="Button_Click"></Button>-->
                    </StackPanel>
                    
                </StackPanel>
            </ScrollViewer>
        </TabItem>
        
        <!-- Extracellular Medium -->
        <TabItem x:Name="tabECM" Header="Extracellular Medium"  >
            <ScrollViewer VerticalScrollBarVisibility="Auto">
                <StackPanel Name="ConfigStackPanel" Orientation="Vertical" Margin="8">
                    <!-- Environment -->
                    <Expander
                                                Padding="5" 
                                                ExpandDirection="Down"
                                                IsExpanded="False"
                                                Header="Extracellular Medium Extents"                                              
                                                x:Name="EnvironmentExpander"
                                                Margin="0,5,0,0" 
                                                Canvas.ZIndex="1"
                                                BorderThickness="1"
                                                BorderBrush="Black"
                                                Background="{shared:LinearGradientBrush #EEEEEE, #CCCCCC, GradientType=TopLeftToBottomRight}" >

                        <StackPanel>

                        <TextBlock Text="Extracellular Medium Extents" FontWeight="Bold" Margin="0,-10,0,0" />
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="X" Margin="6,0"
                                                    Grid.Column="0" Grid.Row="2"  
                                                    HorizontalAlignment="Right" VerticalAlignment="Center"
                                                    TextAlignment="Right"
                                                    Width="60"
                                                    />
                            <Slider Name="extent_x_slider"
                                                Orientation="Horizontal"
                                                VerticalAlignment="Center"
                                                Width="100"
                                                RenderTransform="1.0,0,0,0.5,0,7"
                                                Minimum="{Binding Path=scenario.environment.extent_min}" 
                                                Maximum="{Binding Path=scenario.environment.extent_max}" 
                                                Value="{Binding Path=scenario.environment.extent_x}" 
                                                IsSnapToTickEnabled="True" 
                                                TickFrequency="1" 
                                                KeyboardNavigation.IsTabStop="False"
                                                />
                            <editors:DoubleEditBox x:Name="ExtentXReadout" 
                                                              CenterSlotHorizontalAlignment="Right"
                                                                  CheckBoxVisibility="Collapsed" 
                                                                  SpinnerVisibility="Collapsed"
                                                                  HorizontalAlignment="Right"
                                                                  Width="60"
                                                              Value="{Binding ElementName=extent_x_slider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                                              />
                            <TextBlock Text="µm" VerticalAlignment="Center" Margin="2,0,0,0"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Y" Margin="6,0"
                                                    Grid.Column="0" Grid.Row="2"  
                                                    HorizontalAlignment="Right" VerticalAlignment="Center"
                                                    TextAlignment="Right"
                                                    Width="60"
                                                    />
                            <Slider Name="extent_y_slider"
                                                    Orientation="Horizontal"
                                                    VerticalAlignment="Center"
                                                    Width="100"
                                                    RenderTransform="1.0,0,0,0.5,0,7"
                                                    Minimum="{Binding Path=scenario.environment.extent_min}" 
                                                    Maximum="{Binding Path=scenario.environment.extent_max}" 
                                                    Value="{Binding Path=scenario.environment.extent_y}" 
                                                    IsSnapToTickEnabled="True" 
                                                    TickFrequency="1" 
                                                    KeyboardNavigation.IsTabStop="False"
                                                    />
                            <editors:DoubleEditBox x:Name="ExtentYReadout"                                                    
                                                                  CenterSlotHorizontalAlignment="Right"
                                                                  CheckBoxVisibility="Collapsed" 
                                                                  SpinnerVisibility="Collapsed"
                                                                  HorizontalAlignment="Right"
                                                                  Width="60" 
                                                                  Value="{Binding ElementName=extent_y_slider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                                                  />
                            <TextBlock Text="µm" VerticalAlignment="Center" Margin="2,0,0,0"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Z" Margin="6,0"
                                                    Grid.Column="0" Grid.Row="2"  
                                                    HorizontalAlignment="Right" VerticalAlignment="Center"
                                                    TextAlignment="Right"
                                                    Width="60"
                                                    />
                        <Slider Name="extent_z_slider"
                                                Orientation="Horizontal"
                                                VerticalAlignment="Center"
                                                Width="100"
                                                RenderTransform="1.0,0,0,0.5,0,7"
                                                Minimum="{Binding Path=scenario.environment.extent_min}" 
                                                Maximum="{Binding Path=scenario.environment.extent_max}" 
                                                Value="{Binding Path=scenario.environment.extent_z}" 
                                                IsSnapToTickEnabled="True" 
                                                TickFrequency="1" 
                                                KeyboardNavigation.IsTabStop="False"
                                                />
                        <editors:DoubleEditBox x:Name="ExtentZReadout" 
                                                              CenterSlotHorizontalAlignment="Right"
                                                                  CheckBoxVisibility="Collapsed" 
                                                                  SpinnerVisibility="Collapsed"
                                                                  HorizontalAlignment="Right"
                                                                  Width="60" 
                                                              Value="{Binding ElementName=extent_z_slider, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                                              />
                        <TextBlock Text="µm" VerticalAlignment="Center" Margin="2,0,0,0"/>
                    </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="grid size" Margin="6,0"
                                                    Grid.Column="0" Grid.Row="2"  
                                                    HorizontalAlignment="Right" VerticalAlignment="Center"
                                                    TextAlignment="Right"
                                                    Width="60"
                                                    />
                                <Slider Name="sliderGridStep"
                                                    Orientation="Horizontal"
                                                    VerticalAlignment="Center"
                                                    Width="100"
                                                    RenderTransform="1.0,0,0,0.5,0,7"
                                                    Minimum="{Binding Path=scenario.environment.gridstep_min}" 
                                                    Maximum="{Binding Path=scenario.environment.gridstep_max}" 
                                                    Value="{Binding Path=scenario.environment.gridstep}" 
                                                    IsSnapToTickEnabled="True" 
                                                    TickFrequency="1" 
                                                    KeyboardNavigation.IsTabStop="False"
                                                    />
                                <editors:DoubleEditBox x:Name="GridStepReadout" 
                                                                  CenterSlotHorizontalAlignment="Right"
                                                                  CheckBoxVisibility="Collapsed" 
                                                                  SpinnerVisibility="Collapsed"
                                                                  HorizontalAlignment="Right"
                                                                  Width="60" 
                                                                  Value="{Binding ElementName=sliderGridStep, Path=Value, UpdateSourceTrigger=PropertyChanged}"
                                                                  />
                                <TextBlock Text="µm" VerticalAlignment="Center" Margin="2,0,0,0"/>
                            </StackPanel>

                        </StackPanel>
                        
                    </Expander>
                    <!-- Mol Pops -->
                    <Expander
                            Padding="5" 
                            ExpandDirection="Down"
                                IsExpanded="False"
                                Header="Molecular Populations"                                              
                                x:Name="MolPopsExpander"
                                Margin="0,5,0,0" 
                                Canvas.ZIndex="1"
                            BorderThickness="1"
                            BorderBrush="Black"
                            Background="{shared:LinearGradientBrush #EEEEEE, #CCCCCC, GradientType=TopLeftToBottomRight}"
                            >

                        <StackPanel>
                            <StackPanel.Resources>
                                <DataTemplate x:Key="ecsMolListItemTemplate">
                                    <StackPanel Orientation="Horizontal">

                                        <TextBlock Text="{Binding Path=Name}" Margin="5,0,0,0"/>
                                    </StackPanel>
                                </DataTemplate>
                                <DataTemplate x:Key="libMolListItemTemplate">
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="{Binding Path=Name}" 
                                                   Foreground="Black" 
                                                   Margin="5,0,0,0" />
                                    </StackPanel>
                                </DataTemplate>
                            </StackPanel.Resources>
                            <!-- Molecular Populations -->                            
                            <StackPanel>
                                <StackPanel.ToolTip>
                                    <StackPanel Width="200" Orientation="Horizontal">
                                        <TextBlock TextWrapping="Wrap" HorizontalAlignment="Left" VerticalAlignment="Top" Padding="5" Width="200">
                                                Click Add button to create a population of cells from a subset defined below. 
                                    Specify the number of cells, their color and the region (from above) that will contain these cells.
                                        </TextBlock>
                                    </StackPanel>
                                </StackPanel.ToolTip>
                                <TextBlock Text="Molecular Populations" FontWeight="Bold" Margin="0,-10,0,0" >
                                </TextBlock>

                            </StackPanel>
                            <ListBox x:Name="lbEcsMolPops" MinHeight="50"
                                    ItemsSource="{Binding Path=scenario.environment.ecs.molpops, Mode=TwoWay}" 
                                    ItemTemplate="{Binding Source={StaticResource ecsMolListItemTemplate}}"
                                    SelectedIndex="-1"
                            />

                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Canvas.ZIndex="10">
                                <Button Name="AddEcmMolButton"  Width="50" Content="Add" Click="AddEcmMolButton_Click"/>
                                <Button Name="RemoveEcmMolButton" Width="50" Content="Remove" Click="RemoveEcmMolButton_Click" />
                            </StackPanel>
                            <Expander ExpandDirection="Down"
                                              IsExpanded="False"
                                              Header="Details"
                                              x:Name="MolDetailsExpander"
                                              Margin="0,-15,0,0" 
                                              Canvas.ZIndex="1"
                                              >

                                <StackPanel Orientation="Vertical">
                                    <ContentControl Name="MolPopDetails"
                                                Content="{Binding ElementName=lbEcsMolPops, Path=SelectedItem}" 
                                                ContentTemplate="{StaticResource newMolPopDetailsTemplate}" 
                                                Margin="6"/>
                                </StackPanel>

                            </Expander>
                        </StackPanel>
                    </Expander>
                    <!-- Reactions -->
                    <Expander
                        Padding="5" 
                        ExpandDirection="Down"
                            IsExpanded="False"
                            Header="Reactions"                                              
                            x:Name="ReacExpander"
                            Margin="0,5,0,0" 
                            Canvas.ZIndex="1"
                        BorderThickness="1"
                        BorderBrush="Black"
                        Background="{shared:LinearGradientBrush #EEEEEE, #CCCCCC, GradientType=TopLeftToBottomRight}" >
                        
                        <Expander.Resources>
                            <DataTemplate x:Key="ecsReacListItemTemplate">
                                <TextBlock Text="{Binding   Converter={StaticResource ReacGUIDtoReacStringConv},
                                                            ConverterParameter={StaticResource ecmReactionsListView}}">
                                 </TextBlock>
                            </DataTemplate>
                        </Expander.Resources>

                        <StackPanel>
                            <!-- Reactions -->
                            <StackPanel>
                                <StackPanel.ToolTip>
                                    <StackPanel Width="200" Orientation="Horizontal">
                                        <TextBlock TextWrapping="Wrap" HorizontalAlignment="Left" VerticalAlignment="Top" Padding="5" Width="200">
                                                Click Add button to add a reaction to the extracellular medium from a list of reactions in the list box below.
                                        </TextBlock>
                                    </StackPanel>
                                </StackPanel.ToolTip>
                                <TextBlock Text="Reactions in ECM" FontWeight="Bold" Margin="0,-10,0,0" >
                                </TextBlock>

                            </StackPanel>
                            
                            <!--<ListBox x:Name="lbEcsReactions" MinHeight="50" 
                                    ItemsSource="{Binding Path=scenario.environment.ecs.reactions_guid_ref}"
                                     ItemTemplate="{Binding Source={StaticResource ecsReacListItemTemplate}}"
                                    SelectedIndex="-1">
                            </ListBox>-->

                            <ListView x:Name="lvEcsReactions" 
                                      ItemsSource="{Binding Path=scenario.environment.ecs.reactions_guid_ref}"
                                      SelectedIndex="-1"
                                >
                                
                                <ListView.View>
                                    <GridView>
                                        <GridView.ColumnHeaderContainerStyle>
                                            <Style TargetType="GridViewColumnHeader">
                                                <Setter Property="Height" Value="Auto"></Setter>
                                                <Setter Property="Background">
                                                    <Setter.Value>
                                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                            <GradientStop Offset="0.0" Color="White" />
                                                            <GradientStop Offset="1.0" Color="Beige" />
                                                        </LinearGradientBrush>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </GridView.ColumnHeaderContainerStyle>

                                        <GridViewColumn Width="80" Header="Rate constant">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding   Converter={StaticResource ReacGUIDtoReacStringConv},
                                                            ConverterParameter={StaticResource ecmReactionsListView},
                                                            ConverterCulture='de-DE'}">
                                                        <TextBlock.Style>
                                                            <Style>
                                                                <Setter Property="TextBlock.Foreground" 
                                                                        Value="Black">
                                                                </Setter>
                                                            </Style>
                                                        </TextBlock.Style>
                                                    </TextBlock>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn Width="300" Header="Reaction" >

                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding   Converter={StaticResource ReacGUIDtoReacStringConv},
                                                            ConverterParameter={StaticResource ecmReactionsListView}}">
                                                        <TextBlock.Style>
                                                            <Style>
                                                                <Setter Property="TextBlock.Foreground" 
                                                                        Value="Black">
                                                                </Setter>
                                                            </Style>
                                                        </TextBlock.Style>
                                                    </TextBlock>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>

                                        </GridViewColumn>
                                    </GridView>
                                </ListView.View>
                                
                            </ListView>
                            
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Canvas.ZIndex="10">
                                <Button Name="RemoveEcmReacButton" Width="50" Content="Remove" Click="RemoveEcmReacButton_Click" />
                            </StackPanel>
                            
                            <Expander ExpandDirection="Down"
                                              IsExpanded="False"
                                              Header="Add a reaction"
                                              x:Name="AddReacExpander"
                                              Margin="0,0,0,0" 
                                              Canvas.ZIndex="1"
                                              >
                                <StackPanel Orientation="Vertical" Margin="10,0">
                                    <TextBlock Text="Available Reactions" Grid.Column="0" Grid.Row="3"  FontWeight="Bold"  Margin="0,0,6,0" />
                                    <!--<ListView x:Name="lvAvailableReacs" Grid.Column="0" Grid.Row="4" Grid.ColumnSpan="2" Margin="0,0,6,0" AlternationCount="2"   
                                            ItemsSource="{Binding Path=entity_repository.reactions, Mode=TwoWay}"
                                            SelectedIndex="0"
                                            MinHeight="50" MaxHeight="150"
                                            >
                                    -->

                                    <ListView x:Name="lvAvailableReacs" Grid.Column="0" Grid.Row="4" Grid.ColumnSpan="2" Margin="0,0,6,0" AlternationCount="2"   
                                                ItemsSource="{Binding Source={StaticResource ecmAvailableReactionsListView}}"
                                                SelectedIndex="0"
                                                MinHeight="50" MaxHeight="150"
                                    >
                                        <ListView.View>
                                            <GridView>
                                                <GridView.ColumnHeaderContainerStyle>
                                                    <Style TargetType="GridViewColumnHeader">
                                                        <Setter Property="Height" Value="Auto"></Setter>
                                                        <Setter Property="Background">
                                                            <Setter.Value>
                                                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                                    <GradientStop Offset="0.0" Color="White" />
                                                                    <GradientStop Offset="1.0" Color="Beige" />
                                                                </LinearGradientBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </GridView.ColumnHeaderContainerStyle>

                                                <GridViewColumn Width="80" Header="Rate constant">
                                                    <GridViewColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <TextBlock Text="{Binding rate_const, StringFormat={}{0:#.00}}">
                                                        <TextBlock.Style>
                                                            <Style>
                                                                <Setter Property="TextBlock.Foreground"  Value="Black">
                                                                </Setter>
                                                            </Style>
                                                        </TextBlock.Style>
                                                            </TextBlock>
                                                        </DataTemplate>
                                                    </GridViewColumn.CellTemplate>
                                                </GridViewColumn>
                                                <GridViewColumn Width="300" Header="Reaction" >
                                                    <GridViewColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <TextBlock Text="{Binding TotalReactionString}">
                                                        <TextBlock.Style>
                                                            <Style>
                                                                <Setter Property="TextBlock.Foreground"  Value="Black">
                                                                </Setter>
                                                            </Style>
                                                        </TextBlock.Style>
                                                            </TextBlock>
                                                        </DataTemplate>
                                                    </GridViewColumn.CellTemplate>

                                                </GridViewColumn>
                                            </GridView>
                                        </ListView.View>
                                    </ListView>
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Canvas.ZIndex="10">
                                        <Button Name="AddEcmReacButton"  Width="50" Content="Add" Click="AddEcmReacButton_Click"/>
                                    </StackPanel>
                                </StackPanel>
                            </Expander>


                        </StackPanel>
                    </Expander>
                    
                    <!-- Remove reaction complexes for now 10/15/13 -->
                    <!-- Reaction Complexes -->
                    <Expander
                        Visibility="Hidden"
                        Padding="5" 
                        ExpandDirection="Down"
                            IsExpanded="False"
                            Header="Reaction Complexes"                                            
                            x:Name="ReacCompExpander"
                            Margin="0,5,0,0" 
                            Canvas.ZIndex="1"
                        BorderThickness="1"
                        BorderBrush="Black"
                        Background="{shared:LinearGradientBrush #EEEEEE, #CCCCCC, GradientType=TopLeftToBottomRight}" >

                        <StackPanel>
                            
                            <StackPanel>
                                <StackPanel.Resources>
                                    <DataTemplate x:Key="reacComplexListItemTemplate">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{Binding Path=Name}" />
                                        </StackPanel>
                                    </DataTemplate>
                                    <DataTemplate x:Key="ecsReacComplexListItemTemplate">                                        
                                        <TextBlock Text="{Binding   Converter={StaticResource ReacComplexGUIDtoStringConv},
                                                            ConverterParameter={StaticResource ecmReactionComplexesListView}}">
                                        </TextBlock>
                                    </DataTemplate>
                                </StackPanel.Resources>

                                <StackPanel.ToolTip>
                                    <StackPanel Width="200" Orientation="Horizontal">
                                        <TextBlock TextWrapping="Wrap" HorizontalAlignment="Left" VerticalAlignment="Top" Padding="5" Width="200">
                                                        Click Add button to add a reaction complex to the extracellular medium from a list of reactions complexes in the list box below.
                                        </TextBlock>
                                    </StackPanel>
                                </StackPanel.ToolTip>
                                <TextBlock Text="Reaction Complexes" Margin="0,-10,0,0" >
                                </TextBlock>
                        
                                <ListBox x:Name="ReactionComplexListBox" MinHeight="50" 
                                    ItemsSource="{Binding Path=scenario.environment.ecs.reaction_complexes_guid_ref}" 
                                    ItemTemplate="{Binding Source={StaticResource ecsReacComplexListItemTemplate}}"
                                    SelectedIndex="0"
                                 />

                            </StackPanel>
                    
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Canvas.ZIndex="10">
                                <Button Name="RemoveReacCompButton" Width="50" Content="Remove" Click="RemoveEcmReacCompButton_Click" />
                            </StackPanel>


                            <Expander ExpandDirection="Down"
                                    IsExpanded="False"
                                    Header="Details"
                                    x:Name="ReactionComplexDetailsExpander"
                                    Margin="0,5,0,0" 
                                    Canvas.ZIndex="1"
                                    BorderThickness="1"
                                    BorderBrush="Black"
                                    Background="{shared:LinearGradientBrush #EEEEEE, #CCCCCC, GradientType=TopLeftToBottomRight}" >

                                <StackPanel Orientation="Vertical" >
                                    <StackPanel.Resources>
                                        <DataTemplate x:Key="ecsReacListItemTemplate">
                                            <TextBlock Text="{Binding   Converter={StaticResource ReacGUIDtoReacStringConv},
                                                            ConverterParameter={StaticResource ecmReactionsListView}}">
                                            </TextBlock>
                                        </DataTemplate>
                                        
                                        
                                    </StackPanel.Resources>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="Name" Margin="6,0" HorizontalAlignment="Right" VerticalAlignment="Center" />
                                        <TextBox Margin="0,2" x:Name="txtReacComplexName" IsReadOnly="True" 
                                                Text="{Binding  ElementName=ReactionComplexListBox, 
                                                                Path=SelectedItem,
                                                                Converter={StaticResource ReacComplexGUIDtoStringConv},
                                                                ConverterParameter={StaticResource ecmReactionComplexesListView}}" 
                                                                />
                                    </StackPanel >
                                    <StackPanel x:Name="spReacComp"
                                        Tag="{Binding ElementName=ReactionComplexListBox, Path=SelectedItem, 
                                                        Converter={StaticResource ReacComplexGUIDtoReactionComplexConv},
                                                        ConverterParameter={StaticResource ecmReactionComplexesListView}}">

                                        <StackPanel.Resources>                                            
                                            <DataTemplate x:Key="cellReacListItemTemplate">
                                                <TextBlock Text="{Binding Converter={StaticResource ReacGUIDtoReacStringConv},
                                                            ConverterParameter={StaticResource ecmReactionsListView}}">
                                                </TextBlock>
                                            </DataTemplate>
                                        </StackPanel.Resources>

                                        <TextBlock Text="Reactions" Margin="6,0"  />

                                        <ListBox x:Name="ecmRCReacsListBox" MinHeight="50" Height="100" MaxHeight="100" AlternationCount="2"
                                                ItemsSource="{Binding ElementName=spReacComp, Path=Tag.reactions_guid_ref, Mode=OneWay, UpdateSourceTrigger=PropertyChanged }"
                                                ItemTemplate="{Binding Source={StaticResource cellReacListItemTemplate}}"
                                                 
                                                >
                                        </ListBox>
                                        
                                        
                                    </StackPanel>
                                    
                                </StackPanel>
                            </Expander>

                            <Expander ExpandDirection="Down"
                                IsExpanded="False"
                                Header="Add reaction complex"
                                x:Name="AddReacCxExpander"
                                Margin="0,5,0,0" 
                                Canvas.ZIndex="1"
                                BorderThickness="1"
                                BorderBrush="Black"
                                Background="{shared:LinearGradientBrush #EEEEEE, #CCCCCC, GradientType=TopLeftToBottomRight}" >
                                              
                                <StackPanel Orientation="Vertical" Margin="10,0">
                                    <StackPanel.Resources>
                                        <DataTemplate x:Key="reacCxListItemTemplate">
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="{Binding Path=Name}" />
                                            </StackPanel>
                                        </DataTemplate>

                                        <DataTemplate x:Key="rcReacListItemTemplate">
                                            <TextBlock Text="{Binding   Converter={StaticResource ReacGUIDtoReacStringConv},
                                                            ConverterParameter={StaticResource ecmReactionsListView}}">
                                            </TextBlock>
                                        </DataTemplate>

                                        <DataTemplate x:Key="addEcsReacComplexDetailsTemplate">
                                            <StackPanel>                                                
                                                <StackPanel Orientation="Vertical">
                                                    <TextBlock Text="Reactions in selected Complex" Grid.Column="0" Grid.Row="3"  Margin="0,-10,0,0" />
                                                    <ListBox x:Name="lbReacsInComplex" Grid.Column="0" Grid.Row="4" Grid.ColumnSpan="2" Margin="0,0,5,0" MinHeight="50"  AlternationCount="2"                                                        
                                                        ItemsSource="{Binding Path=reactions_guid_ref, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"                                                      
                                                        ItemTemplate="{Binding Source={StaticResource rcReacListItemTemplate}}" >
                                                    </ListBox>
                                                </StackPanel>
                                            </StackPanel>
                                        </DataTemplate>
                                    </StackPanel.Resources>
                                    
                                    <TextBlock Text="Reaction Complexes Library"  Margin="0,0,6,0" />
                                    <ListBox x:Name="lbAvailableReacCx" Grid.Column="0" Grid.Row="4" Grid.ColumnSpan="2" Margin="0,0,6,0" MinHeight="50" AlternationCount="2"                                                        
                                        ItemsSource="{Binding Path=entity_repository.reaction_complexes}"                                                      
                                        ItemTemplate="{Binding Source={StaticResource reacCxListItemTemplate}}"
                                        SelectedIndex="0"
                                        >
                                    </ListBox>
                                    <StackPanel Orientation="Vertical" HorizontalAlignment="Right" Margin="0,0,6,0" Canvas.ZIndex="10">
                                        <Button Name="AddReacCxButton"  Width="50" Content="Add" Click="AddEcmReacCompButton_Click"/>
                                    </StackPanel>

                                    <ContentControl Name="AddReactionComplexDetails"
                                        Content="{Binding ElementName=lbAvailableReacCx, Path=SelectedItem}" 
                                        ContentTemplate="{StaticResource addEcsReacComplexDetailsTemplate}" 
                                        Margin="6"/>
                                
                                </StackPanel>
                            </Expander>

                            
                            
                        </StackPanel>
                    </Expander>

                    
                </StackPanel>
            </ScrollViewer>
        </TabItem>

        <!-- CELL POPULATIONS -->
        <TabItem x:Name="tabCellPop" Header="Cell Populations">
            <ScrollViewer VerticalScrollBarVisibility="Auto">
                <StackPanel x:Name="EntitiesStackPanel" Orientation="Vertical" Margin="8">

                    <!-- CELL POPULATIONS -->
                    <Expander ExpandDirection="Down" Padding="5"
                            IsExpanded="True"
                            Header="Cell Populations"
                            x:Name="CellPopsExpander"
                            Margin="0,4,0,0" 
                            Canvas.ZIndex="1"
                            BorderThickness="1"
                            BorderBrush="Black"
                            Background="{shared:LinearGradientBrush #EEEEEE, #CCCCCC, GradientType=TopLeftToBottomRight}"
                            >

                        <StackPanel>
                            <ListBox x:Name="CellPopsListBox" MinHeight="50" 
                                             ItemsSource="{Binding Path=scenario.cellpopulations, UpdateSourceTrigger=PropertyChanged}" 
                                             ItemTemplate="{Binding Source={StaticResource cellPopListItemTemplate}}"
                                             SelectedIndex="0"
                                             SelectionChanged="cellPopsListBoxSelChanged"
                                     
                                             />
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Canvas.ZIndex="10">
                                <Button Name="AddCellPopButton"  Width="50" Content="Add" Click="AddCellPopButton_Click"/>
                                <Button Name="RemoveCellPopButton" Width="50" Content="Remove" Click="RemoveCellPopButton_Click" />
                            </StackPanel>
                            <Expander ExpandDirection="Down" Padding="6"
                                    IsExpanded="True"
                                    Header="Cell Population Details"
                                    x:Name="CellPopsDetailsExpander"
                                    Margin="0,-15,0,0" 
                                    Canvas.ZIndex="1"
                                    >

                                <StackPanel Orientation="Vertical">
                                    <StackPanel Orientation="Horizontal">
                                        <ContentControl Name="CellPopDetails"
                                                Content="{Binding ElementName=CellPopsListBox, Path=SelectedItem}" 
                                                ContentTemplate="{StaticResource cellPopDetailsTemplate}" 
                                                Margin="6,-4"/>
                                    </StackPanel>
                                </StackPanel>
                            </Expander>
                        </StackPanel>
                    </Expander>


                    <!-- Cell Interaction Parameters -->
                    <Expander
                            Padding="5" 
                            ExpandDirection="Down"
                                IsExpanded="False"
                                Header="Cell Interaction Parameters"                                              
                                x:Name="CellParamsExpander"
                                Margin="0,5,0,0" 
                                Canvas.ZIndex="1"
                            BorderThickness="1"
                            BorderBrush="Black"
                            Background="{shared:LinearGradientBrush #EEEEEE, #CCCCCC, GradientType=TopLeftToBottomRight}" >

                        <StackPanel>

                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="penetration resistance" Margin="6,0"
                                                    Grid.Column="0" Grid.Row="2"  
                                                    HorizontalAlignment="Right" VerticalAlignment="Center"
                                                    TextAlignment="Right"
                                                    Width="120"
                                                    />
                                <editors:DoubleEditBox x:Name="phi1_readout" 
                                                              CheckBoxVisibility="Collapsed" 
                                                              SpinnerVisibility="Collapsed"
                                                              HorizontalAlignment="Right"
                                                              Format="F2"
                                                              StepValue="100"
                                                              Width="50" 
                                                              CenterSlotHorizontalAlignment="Right"
                                                              Value="{Binding Path=sim_params.phi1, UpdateSourceTrigger=PropertyChanged}"
                                                              />
                                <TextBlock Text="µm^2/min^2" VerticalAlignment="Center" Margin="2,0,0,0"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="phi2" Margin="6,0"
                                                    Grid.Column="0" Grid.Row="3"  
                                                    HorizontalAlignment="Right" VerticalAlignment="Center"
                                                    TextAlignment="Right"
                                                    Width="120"
                                                    />

                                <editors:DoubleEditBox x:Name="phi2_readout" 
                                                              CheckBoxVisibility="Collapsed" 
                                                              SpinnerVisibility="Collapsed"
                                                              HorizontalAlignment="Right"
                                                              Format="N2"
                                                              StepValue="0.1"
                                                              Width="50" 
                                                              CenterSlotHorizontalAlignment="Right"
                                                              Value="{Binding Path=sim_params.phi2, UpdateSourceTrigger=PropertyChanged}"
                                                              />
                                <TextBlock Text="µm^2/min^2" VerticalAlignment="Center" Margin="2,0,0,0"/>
                            </StackPanel>
                        </StackPanel>

                    </Expander>

                </StackPanel>
            </ScrollViewer>
        </TabItem>

        <!-- REPORTS -->
        <TabItem Header="Reports" Loaded="TabItem_Loaded">
            <ScrollViewer VerticalScrollBarVisibility="Auto">
                <StackPanel Orientation="Vertical" Margin="8" >
                    <StackPanel.Resources >
                        <DataTemplate x:Key="cellTemplate">
                            <StackPanel Orientation="Horizontal">
                                <CheckBox IsEnabled="{Binding}"/>
                            </StackPanel>
                        </DataTemplate>
                        <DataTemplate x:Key="molGuidsListItemTemplate">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding Path=Name}" Margin="5,0,0,0" Width="100"/>
                                <TextBlock Text="    " Margin="5,0,0,0"/>
                                <TextBlock Text="{Binding Path=molecule_guid}" Margin="5,0,0,0"/>
                            </StackPanel>
                        </DataTemplate>
                        <DataTemplate x:Key="cellGuidsListItemTemplate">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding Path=CellName}" Margin="5,0,0,0"/>
                                <TextBlock Text="    " Margin="5,0,0,0"/>
                                <TextBlock Text="{Binding Path=cell_guid}" Margin="5,0,0,0"/>
                            </StackPanel>
                        </DataTemplate>
                        <DataTemplate x:Key="reactionGuidsListItemTemplate">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding Path=TotalReactionString}" Margin="5,0,0,0"/>
                                <TextBlock Text="    " Margin="5,0,0,0"/>
                                <TextBlock Text="{Binding Path=reaction_guid}" Margin="5,0,0,0"/>
                            </StackPanel>
                        </DataTemplate>
                        <daph:RptEnumBooleanConverter x:Key="rptEnumBoolConverter" />
                        
                    </StackPanel.Resources>

                    <!-- Report Settings -->
                    <Expander ExpandDirection="Down" Padding="5"
                            IsExpanded="False"
                            Header="Report Settings"
                            Margin="0,4,0,0" 
                            Canvas.ZIndex="1"
                            BorderThickness="1"
                            BorderBrush="Black"
                            Background="{shared:LinearGradientBrush #EEEEEE, #CCCCCC, GradientType=TopLeftToBottomRight}"
                            >
                        <StackPanel>
                            <TextBlock Text="File name root:" FontWeight="Bold" Margin="0,-10,0,0" />
                            <TextBox x:Name="txtFileNameRoot" Text="{Binding Path=reporter_file_name, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"></TextBox>
                        </StackPanel>
                    </Expander>


                    <!-- Molecules in Extracellular Medium -->
                    <Expander ExpandDirection="Down" Padding="5"
                            IsExpanded="False"
                            Header="Molecules in Extracellular Medium"
                            Margin="0,4,0,0" 
                            Canvas.ZIndex="1"
                            BorderThickness="1"
                            BorderBrush="Black"
                            Background="{shared:LinearGradientBrush #EEEEEE, #CCCCCC, GradientType=TopLeftToBottomRight}"
                            >
                        <!--<TextBlock Text="Molecules in Extracellular Medium" FontWeight="Bold" Margin="0,5,0,0" />-->
                        <DataGrid x:Name="dgEcmMols" 
                            ItemsSource="{Binding Path=scenario.environment.ecs.molpops}" AutoGenerateColumns="False" 
                            Height="150" MinWidth="200" MinRowHeight="20" MinColumnWidth="20" ColumnWidth="60" MaxColumnWidth="300"
                            CanUserReorderColumns="False" CanUserResizeRows="False"
                            CanUserSortColumns="False" RowHeaderWidth="0"
                            VerticalContentAlignment="Center"
                            CanUserAddRows="False"
                            BorderThickness="1"
                            BorderBrush="Black"
                            >

                            <DataGrid.ColumnHeaderStyle>
                                <Style TargetType="DataGridColumnHeader" >
                                    <Setter Property="FontSize" Value="12" />
                                    <Setter Property="Height" Value="24" />
                                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                                    <Setter Property="BorderThickness" Value="1" />
                                    <Setter Property="BorderBrush" Value="Black" />
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                <GradientStop Offset="0.0" Color="White" />
                                                <GradientStop Offset="1.0" Color="Beige" />
                                            </LinearGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </DataGrid.ColumnHeaderStyle>

                            <DataGrid.Columns>

                                <DataGridTemplateColumn Header="molecular population" Width="150">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock HorizontalAlignment="Center" Text="{Binding Path=Name, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTemplateColumn Header="mean">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox HorizontalAlignment="Center" IsChecked="{Binding Path=report_mp.mean, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTemplateColumn Header="full">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <!--<RadioButton GroupName="{Binding molpop.molecule_guid_ref}" HorizontalAlignment="Center" IsChecked="{Binding Path=full, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>-->
                                            <!--<RadioButton GroupName="{Binding molecule_guid_ref}" 
                                                     IsChecked="{Binding Path=report_mp.mp_extended, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource rptEnumBoolConverter}, ConverterParameter=LEAN}"
                                                     >
                                        </RadioButton>-->
                                            <CheckBox HorizontalAlignment="Center" IsChecked="{Binding Path=report_mp.mp_extended, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource rptEnumBoolConverter}, ConverterParameter=LEAN}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTemplateColumn Header="full+gradient" Width="90">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <!--<RadioButton GroupName="{Binding molecule_guid_ref}"  HorizontalAlignment="Center" IsChecked="{Binding Path=fullgrad, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>-->
                                            <!--<RadioButton GroupName="{Binding molecule_guid_ref}" 
                                                     IsChecked="{Binding Path=report_mp.mp_extended, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource rptEnumBoolConverter}, ConverterParameter=COMPLETE}"
                                                     >
                                        </RadioButton>-->
                                            <CheckBox HorizontalAlignment="Center" IsChecked="{Binding Path=report_mp.mp_extended, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource rptEnumBoolConverter}, ConverterParameter=COMPLETE}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                            </DataGrid.Columns>
                        </DataGrid>
                    </Expander>

                    <!-- Cell Information -->
                    <Expander ExpandDirection="Down" Padding="5"
                            IsExpanded="False"
                            Header="Cell Information"
                            Margin="0,4,0,0" 
                            Canvas.ZIndex="1"
                            BorderThickness="1"
                            BorderBrush="Black"
                            Background="{shared:LinearGradientBrush #EEEEEE, #CCCCCC, GradientType=TopLeftToBottomRight}"
                            >
                        <!--<TextBlock Text="Cell Information" FontWeight="Bold" Margin="0,10,0,0" />-->
                        <DataGrid x:Name="dgCellDetails" AutoGenerateColumns="False" 
                              ItemsSource="{Binding Path=scenario.cellpopulations, UpdateSourceTrigger=PropertyChanged}"     
                              Height="120" MinWidth="200" MinRowHeight="20" MinColumnWidth="50" ColumnWidth="200" MaxColumnWidth="300"
                              CanUserReorderColumns="False" CanUserResizeRows="False"
                              CanUserSortColumns="False" RowHeaderWidth="0"
                              VerticalContentAlignment="Center"
                              CanUserAddRows="False"
                              BorderThickness="1"
                              BorderBrush="Black"
                            >
                            <DataGrid.ColumnHeaderStyle>
                                <Style TargetType="DataGridColumnHeader" >
                                    <Setter Property="FontSize" Value="12" />
                                    <Setter Property="Height" Value="24" />
                                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                                    <Setter Property="BorderThickness" Value="1" />
                                    <Setter Property="BorderBrush" Value="Black" />
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                <GradientStop Offset="0.0" Color="White" />
                                                <GradientStop Offset="1.0" Color="Beige" />
                                            </LinearGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </DataGrid.ColumnHeaderStyle>

                            <!--<TextBlock HorizontalAlignment="Center" Text="{Binding Path=cell_guid_ref, Converter={StaticResource CellGUIDtoCellNameConv},-->
                                
                            <DataGrid.Columns>
                                <DataGridTemplateColumn Header="cell population" >
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock HorizontalAlignment="Center" Text="{Binding Path=cellpopulation_name, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTemplateColumn Header="position" Width="60">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox HorizontalAlignment="Center" IsChecked="{Binding Path=report_xvf.position, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTemplateColumn Header="velocity" Width="60">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox HorizontalAlignment="Center" IsChecked="{Binding Path=report_xvf.velocity, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTemplateColumn Header="force" Width="60">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox HorizontalAlignment="Center" IsChecked="{Binding Path=report_xvf.force, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                            </DataGrid.Columns>
                        </DataGrid>
                    </Expander>

                    <!-- Molecules by Cell -->
                    <Expander ExpandDirection="Down" Padding="5"
                            IsExpanded="False"
                            Header="Molecules by cell"
                            Margin="0,4,0,0" 
                            Canvas.ZIndex="1"
                            BorderThickness="1"
                            BorderBrush="Black"
                            Background="{shared:LinearGradientBrush #EEEEEE, #CCCCCC, GradientType=TopLeftToBottomRight}"
                            >
                        <StackPanel>
                            <ListBox x:Name="lbRptCellPops" MinHeight="100" 
                                ItemsSource="{Binding Path=scenario.cellpopulations}" 
                                DisplayMemberPath="cellpopulation_name"
                            />
                            <!-- EcmProbeMP -->
                            <Expander ExpandDirection="Down" Padding="5"
                                IsExpanded="False"
                                Header="ECM probe at cell location"
                                Margin="0,4,0,0" 
                                Canvas.ZIndex="1"
                                BorderThickness="1"
                                BorderBrush="Black"
                                Background="{shared:LinearGradientBrush #EEEEEE, #CCCCCC, GradientType=TopLeftToBottomRight}"
                                >
                                <StackPanel>
                                    <DataGrid x:Name="dgEcmProbeMols" AutoGenerateColumns="False" 
                                        ItemsSource="{Binding ElementName=lbRptCellPops, Path=SelectedItem.ecm_probe}"                                                         
                                        Height="120" MinWidth="200" MinRowHeight="20" MinColumnWidth="90" ColumnWidth="100" MaxColumnWidth="200"
                                        CanUserReorderColumns="False" CanUserResizeRows="False"
                                        CanUserSortColumns="False" RowHeaderWidth="0"
                                        VerticalContentAlignment="Center"
                                        CanUserAddRows="False"
                                        BorderThickness="1"
                                        BorderBrush="Black"
                                        >

                                        <DataGrid.ColumnHeaderStyle>
                                            <Style TargetType="DataGridColumnHeader" >
                                                <Setter Property="FontSize" Value="12" />
                                                <Setter Property="Height" Value="24" />
                                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                                <Setter Property="BorderThickness" Value="1" />
                                                <Setter Property="BorderBrush" Value="Black" />
                                                <Setter Property="Background">
                                                    <Setter.Value>
                                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                            <GradientStop Offset="0.0" Color="White" />
                                                            <GradientStop Offset="1.0" Color="Beige" />
                                                        </LinearGradientBrush>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </DataGrid.ColumnHeaderStyle>

                                        <DataGrid.Columns>
                                            <DataGridTemplateColumn Header="molecular population" Width="125" >
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBlock HorizontalAlignment="Center" Text="{Binding Path=molpop_guid_ref, Converter={StaticResource MolPopGUIDtoMolPopNameConv},
                                                            ConverterParameter={StaticResource molPopsListView}}"/>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>

                                            <DataGridTemplateColumn Header="concentration" Width="100">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <CheckBox HorizontalAlignment="Center" IsChecked="{Binding Path=mp_extended, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource rptEnumBoolConverter}, ConverterParameter=LEAN}"/>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>

                                            <DataGridTemplateColumn Header="concentration+gradient" Width="140">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <CheckBox HorizontalAlignment="Center" IsChecked="{Binding Path=mp_extended, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource rptEnumBoolConverter}, ConverterParameter=COMPLETE}"/>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>
                                        </DataGrid.Columns>
                                    </DataGrid>
                                </StackPanel>
                            </Expander>    
                            
                            <Expander ExpandDirection="Down" Padding="5"
                            IsExpanded="False"
                            Header="Molecules in membrane"
                            Margin="0,4,0,0" 
                            Canvas.ZIndex="1"
                            BorderThickness="1"
                            BorderBrush="Black"
                            Background="{shared:LinearGradientBrush #EEEEEE, #CCCCCC, GradientType=TopLeftToBottomRight}"
                            >
                                <StackPanel>
                                    <DataGrid x:Name="dgCellMembMols" AutoGenerateColumns="False"                                              
                                    ItemsSource="{Binding ElementName=lbRptCellPops, Path=SelectedItem.cell_guid_ref, Converter={StaticResource CellGuidToCellMembMolPopsConv}, ConverterParameter={StaticResource cellTypesListView}}"                         
                                    Height="120" MinWidth="200" MinRowHeight="20" MinColumnWidth="50" ColumnWidth="200" MaxColumnWidth="300"
                                    CanUserReorderColumns="False" CanUserResizeRows="False"
                                    CanUserSortColumns="False" RowHeaderWidth="0"
                                    VerticalContentAlignment="Center"
                                    CanUserAddRows="False"
                                    BorderThickness="1"
                                    BorderBrush="Black"
                                    >
                                        <DataGrid.ColumnHeaderStyle>
                                            <Style TargetType="DataGridColumnHeader" >
                                                <Setter Property="FontSize" Value="12" />
                                                <Setter Property="Height" Value="24" />
                                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                                <Setter Property="BorderThickness" Value="1" />
                                                <Setter Property="BorderBrush" Value="Black" />
                                                <Setter Property="Background">
                                                    <Setter.Value>
                                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                            <GradientStop Offset="0.0" Color="White" />
                                                            <GradientStop Offset="1.0" Color="Beige" />
                                                        </LinearGradientBrush>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </DataGrid.ColumnHeaderStyle>

                                        <DataGrid.Columns>

                                            <DataGridTemplateColumn Header="molecular population" Width="125">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBlock HorizontalAlignment="Center" Text="{Binding Path=molecule_guid_ref, Converter={StaticResource MolGUIDtoMolNameConv},
                                                            ConverterParameter={StaticResource moleculesListView}}"/>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>

                                            <DataGridTemplateColumn Header="mean" Width="70">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <CheckBox HorizontalAlignment="Center" IsChecked="{Binding Path=report_mp.mp_extended, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource rptEnumBoolConverter}, ConverterParameter=LEAN}"/>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>

                                            <DataGridTemplateColumn Header="mean+gradient" Width="100">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <CheckBox HorizontalAlignment="Center" IsChecked="{Binding Path=report_mp.mp_extended, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource rptEnumBoolConverter}, ConverterParameter=COMPLETE}"/>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>
                                        </DataGrid.Columns>
                                    </DataGrid>
                                </StackPanel>
                            </Expander>


                            <Expander ExpandDirection="Down" Padding="5"
                            IsExpanded="False"
                            Header="Molecules in cytosol"
                            Margin="0,4,0,0" 
                            Canvas.ZIndex="1"
                            BorderThickness="1"
                            BorderBrush="Black"
                            Background="{shared:LinearGradientBrush #EEEEEE, #CCCCCC, GradientType=TopLeftToBottomRight}"
                            >
                                <StackPanel>
                                    <DataGrid x:Name="dgCellCytosolMols" AutoGenerateColumns="False" 
                                        ItemsSource="{Binding ElementName=lbRptCellPops, Path=SelectedItem.cell_guid_ref, Converter={StaticResource CellGuidToCellCytoMolPopsConv}, ConverterParameter={StaticResource cellTypesListView}}"                                                                                 
                                        Height="120" MinWidth="200" MinRowHeight="20" MinColumnWidth="50" ColumnWidth="200" MaxColumnWidth="300"
                                        CanUserReorderColumns="False" CanUserResizeRows="False"
                                        CanUserSortColumns="False" RowHeaderWidth="0"
                                        VerticalContentAlignment="Center"
                                        CanUserAddRows="False"
                                        BorderThickness="1"
                                        BorderBrush="Black"
                                        >

                                        <DataGrid.ColumnHeaderStyle>
                                            <Style TargetType="DataGridColumnHeader" >
                                                <Setter Property="FontSize" Value="12" />
                                                <Setter Property="Height" Value="24" />
                                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                                <Setter Property="BorderThickness" Value="1" />
                                                <Setter Property="BorderBrush" Value="Black" />
                                                <Setter Property="Background">
                                                    <Setter.Value>
                                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                            <GradientStop Offset="0.0" Color="White" />
                                                            <GradientStop Offset="1.0" Color="Beige" />
                                                        </LinearGradientBrush>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </DataGrid.ColumnHeaderStyle>

                                        <DataGrid.Columns>
                                            <DataGridTemplateColumn Header="molecular population" Width="120">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBlock HorizontalAlignment="Center" Text="{Binding Path=molecule_guid_ref, Converter={StaticResource MolGUIDtoMolNameConv},
                                                            ConverterParameter={StaticResource moleculesListView}}"/>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>

                                            <DataGridTemplateColumn Header="mean" Width="70">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <CheckBox HorizontalAlignment="Center" IsChecked="{Binding Path=report_mp.mp_extended, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource rptEnumBoolConverter}, ConverterParameter=LEAN}"/>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>

                                            <DataGridTemplateColumn Header="mean+gradient" Width="100">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <CheckBox HorizontalAlignment="Center" IsChecked="{Binding Path=report_mp.mp_extended, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource rptEnumBoolConverter}, ConverterParameter=COMPLETE}"/>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>
                                        </DataGrid.Columns>
                                    </DataGrid>
                                </StackPanel>
                            </Expander>


                        </StackPanel>
                    </Expander>
                </StackPanel>
                    
            </ScrollViewer>
        </TabItem>

        <!-- LIBRARIES: MOLECULES, REACTIONS, CELLS, REACTIONS COMPLEXES, AND DIFFERENTIATION SCHEMES -->
        <TabItem Header="Component Libraries">
            <ScrollViewer VerticalScrollBarVisibility="Auto">
                <StackPanel>
                    <StackPanel.Resources>
                        <DataTemplate x:Key="libMolListItemTemplate">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding Path=Name}" 
                                                   Foreground="Black" 
                                                   Margin="5,0,0,0" />
                            </StackPanel>
                        </DataTemplate>

                    </StackPanel.Resources>
                    <!-- MOLECULES -->
                    <Expander                                            
                            Padding="5" ExpandDirection="Down"
                            IsExpanded="False"
                            Header="Molecules"                                                  
                            x:Name="MoleculesExpander"
                            Margin="0,2,0,0" 
                            Canvas.ZIndex="1"
                            BorderThickness="1"
                            BorderBrush="Black"
                            Background="{shared:LinearGradientBrush #EEEEEE, #CCCCCC, GradientType=TopLeftToBottomRight}"
                                >

                        <StackPanel>

                            <DataGrid x:Name="dgLibMolecules" 
                                ItemsSource="{Binding Path=entity_repository.molecules}" AutoGenerateColumns="False" 
                                Height="150" MinWidth="200" MinRowHeight="20" MinColumnWidth="20" ColumnWidth="60" MaxColumnWidth="80"
                                CanUserReorderColumns="False" CanUserResizeRows="False"
                                CanUserSortColumns="False" RowHeaderWidth="0"
                                VerticalContentAlignment="Center"
                                CanUserAddRows="False"
                                BorderThickness="1"
                                BorderBrush="Black"
                                >

                                <DataGrid.ColumnHeaderStyle>
                                    <Style TargetType="DataGridColumnHeader" >
                                        <Setter Property="FontSize" Value="12" />
                                        <Setter Property="Height" Value="24" />
                                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                                        <Setter Property="BorderThickness" Value="1" />
                                        <Setter Property="BorderBrush" Value="Black" />
                                        <Setter Property="Background">
                                            <Setter.Value>
                                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                    <GradientStop Offset="0.0" Color="White" />
                                                    <GradientStop Offset="1.0" Color="Beige" />
                                                </LinearGradientBrush>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </DataGrid.ColumnHeaderStyle>

                                <DataGrid.Columns>

                                    <DataGridTemplateColumn Header="Name"  Width="150" MinWidth="100" MaxWidth="200">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <!--<TextBlock HorizontalAlignment="Center" Text="{Binding Path=Name, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"/>-->

                                                <TextBox  TextAlignment="Center" BorderThickness="0" HorizontalAlignment="Center" Text="{Binding Path=Name, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                                          LostFocus="TextBox_LostFocus">
                                                    <TextBox.Style>
                                                        <Style TargetType="{x:Type TextBox}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Path=ReadOnly}" Value="True">
                                                                    <Setter Property="IsEnabled" Value="False" />
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding Path=ReadOnly}" Value="False">
                                                                    <Setter Property="IsEnabled" Value="True" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBox.Style>
                                                </TextBox>


                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>

                                    <DataGridTemplateColumn Header="Diff Coeff" x:Name="colDiff" Width="90">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBox Width="80" TextAlignment="Center" BorderThickness="0" HorizontalAlignment="Center" Text="{Binding Path=DiffusionCoefficient, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">

                                                    <TextBox.Style>
                                                        <Style TargetType="{x:Type TextBox}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Path=ReadOnly}" Value="True">
                                                                    <Setter Property="IsEnabled" Value="False" />
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding Path=ReadOnly}" Value="False">
                                                                    <Setter Property="IsEnabled" Value="True" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBox.Style>

                                                </TextBox>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>

                                    <DataGridTemplateColumn Header="Weight">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock HorizontalAlignment="Center" Text="{Binding Path=MolecularWeight, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>

                                    <DataGridTemplateColumn Header="Radius">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock HorizontalAlignment="Center" Text="{Binding Path=EffectiveRadius, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn Header="Membrane Bound" Width="120" MinWidth="100" MaxWidth="150" >
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <CheckBox HorizontalAlignment="Center" IsChecked="{Binding Path=molecule_location, Mode=TwoWay, Converter={StaticResource MolPopLocationBoolConv}, UpdateSourceTrigger=PropertyChanged}">
                                                    <CheckBox.Style>
                                                        <Style TargetType="{x:Type CheckBox}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Path=ReadOnly}" Value="True">
                                                                    <Setter Property="IsEnabled" Value="False" />
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding Path=ReadOnly}" Value="False">
                                                                    <Setter Property="IsEnabled" Value="True" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </CheckBox.Style>

                                                </CheckBox>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>

                                </DataGrid.Columns>
                            </DataGrid>

                            <!--ItemTemplate="{Binding Source={StaticResource libMolListItemTemplate}}"-->

                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Canvas.ZIndex="10">
                                <Button Name="btnCopyMolec"  Width="50" Content="Copy" Click="btnCopyMolecule_Click"></Button>
                                <Button Name="btnAddMolec"  Width="50" Content="Add" Click="btnAddLibMolecule_Click"></Button>
                                <Button Name="btnRemoveMolec" Width="50" Content="Remove"  Click="btnRemoveMolecule_Click"></Button>
                            </StackPanel>
                        </StackPanel>

                    </Expander>
                    <!-- REACTIONS -->
                    <Expander
                                Padding="5" 
                                ExpandDirection="Down"
                                IsExpanded="False"
                                Header="Reactions"                                              
                                x:Name="ReactionsExpander"
                                Margin="0,4,0,0" 
                                Canvas.ZIndex="1"
                                BorderThickness="1"
                                BorderBrush="Black"                        
                                Background="{shared:LinearGradientBrush #EEEEEE, #CCCCCC, GradientType=TopLeftToBottomRight}"                                
                                >
                        <StackPanel>
                            <ListView x:Name="lvReactions" 
                                          ItemsSource="{Binding Path=entity_repository.reactions, Mode=TwoWay}"
                                          MinHeight="50" MaxHeight="150"
                                          >
                                <ListView.View>
                                    <GridView>
                                        <GridView.ColumnHeaderContainerStyle>
                                            <Style TargetType="GridViewColumnHeader">
                                                <!--<Setter Property="BorderThickness" Value="1"></Setter>
                                                    <Setter Property="BorderBrush" Value="Green"></Setter>-->
                                                <Setter Property="Height" Value="Auto"></Setter>
                                                <Setter Property="Background">
                                                    <Setter.Value>
                                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                            <GradientStop Offset="0.0" Color="White" />
                                                            <GradientStop Offset="1.0" Color="Beige" />
                                                        </LinearGradientBrush>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </GridView.ColumnHeaderContainerStyle>

                                        <GridViewColumn x:Name="colRate" Width="80" Header="Rate constant">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <!--<TextBlock Text="{Binding rate_const, StringFormat={}{0:#.00}}"> 
                                                            <TextBlock.Style>
                                                                <Style>
                                                                    <Setter Property="TextBlock.Foreground" 
                                                                            Value="Black">
                                                                    </Setter>
                                                                </Style>
                                                            </TextBlock.Style>
                                                    </TextBlock>-->
                                                    <!--<TextBox Text="{Binding rate_const, StringFormat={}{0:#.00}}">-->
                                                    <TextBox Width="{Binding ElementName=colRate, Path=Width}">
                                                        <TextBox.Text>
                                                            <!--<Binding Path="daph_rate_const.Value" Mode="TwoWay" UpdateSourceTrigger="LostFocus" Converter="{StaticResource DoubleToFormattedStringConv}">-->
                                                            <Binding Path="rate_const" Mode="TwoWay" UpdateSourceTrigger="LostFocus" >
                                                                    <Binding.ConverterParameter>
                                                                    <FrameworkElement DataContext="{TemplateBinding DataContext}" />
                                                                </Binding.ConverterParameter>
                                                            </Binding>
                                                        </TextBox.Text>
                                                        <TextBox.Style>
                                                            <Style>                                                                
                                                                <Setter Property="TextBox.Foreground" Value="Black"> </Setter>
                                                                <!--<Setter Property="TextBox.Text" Value="{Binding Path=rate_const}"></Setter>-->
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding Path=ReadOnly}" Value="True">
                                                                        <Setter Property="TextBox.IsReadOnly" Value="True" />
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding Path=ReadOnly}" Value="False">
                                                                        <Setter Property="TextBox.IsReadOnly" Value="False" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </TextBox.Style>
                                                    </TextBox>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn Width="300" Header="Reaction" >

                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding TotalReactionString}">
                                                            <TextBlock.Style>
                                                                <Style>
                                                                    <Setter Property="TextBlock.Foreground" 
                                                                            Value="Black">
                                                                    </Setter>
                                                                </Style>
                                                            </TextBlock.Style>
                                                    </TextBlock>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>

                                        </GridViewColumn>
                                    </GridView>
                                </ListView.View>
                            </ListView>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Canvas.ZIndex="10">
                                <Button x:Name="btnCopyReaction" Grid.Column="2" Grid.Row="1" Width="100" Click="btnCopyReaction_Click">Copy</Button>
                                <Button x:Name="btnRemoveReaction" Grid.Column="2" Grid.Row="1" Width="100" Click="btnRemoveReaction_Click">Remove</Button>
                            </StackPanel>

                            <!--</Expander>-->
                            <Expander 
                                    Padding="10" ExpandDirection="Down"
                                    IsExpanded="False"
                                    Header="Add Reaction"                                                  
                                    x:Name="AddReaction"
                                    Margin="0,4,0,0" 
                                    Canvas.ZIndex="1"
                                    BorderThickness="1"
                                    BorderBrush="Black"
                                    Background="{shared:LinearGradientBrush #EEEEEE, #CCCCCC, GradientType=TopLeftToBottomRight}"                                                        
                                    Width="480"
                                    Grid.Row="8" Grid.Column="0" Grid.ColumnSpan="5"
                                    HorizontalAlignment="Left">
                                <Grid>
                                    <local:AddReactionControl />
                                </Grid>
                            </Expander>
                        </StackPanel>
                    </Expander>

                    <!-- REACTION COMPLEXES -->
                    <Expander
                        Padding="5" 
                        ExpandDirection="Down"
                        IsExpanded="False"
                        Header="Reaction Complexes"                           
                        x:Name="ReacComplexExpander"
                        Margin="0,4,0,0" 
                        Canvas.ZIndex="1"
                        BorderThickness="1"
                        BorderBrush="Black"
                        Background="{shared:LinearGradientBrush #EEEEEE, #CCCCCC, GradientType=TopLeftToBottomRight}" >

                        <!-- REACTION COMPLEXES -->
                        <Expander.Resources>
                            <Style  TargetType="{x:Type ListBoxItem}">
                                <Style.Triggers>
                                    <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                                        <Setter Property="Background" Value="White"></Setter>
                                    </Trigger>
                                    <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                        <Setter Property="Background" Value="Beige"></Setter>
                                        <Setter Property="BorderBrush" Value="Black" />
                                        <Setter Property="BorderThickness" Value="1" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Expander.Resources>
                        <StackPanel>
                            <StackPanel.Resources>
                                <DataTemplate x:Key="reacComplexListItemTemplate">
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="{Binding Path=Name}" />
                                    </StackPanel>
                                </DataTemplate>

                                <DataTemplate x:Key="rcReacListItemTemplate">
                                    <TextBlock Text="{Binding   Converter={StaticResource ReacGUIDtoReacStringConv},
                                                            ConverterParameter={StaticResource ecmReactionsListView}}">
                                    </TextBlock>
                                </DataTemplate>
                            </StackPanel.Resources>

                            <StackPanel>

                                <TextBlock Text="Reaction Complexes" Grid.Column="0" Grid.Row="0" Margin="0,0,0,0" />
                                <ListBox x:Name="lbComplexes" MinHeight="50"
                                            ItemsSource="{Binding Path=entity_repository.reaction_complexes}"                                                      
                                            ItemTemplate="{Binding Source={StaticResource reacComplexListItemTemplate}}"
                                            SelectedIndex="0">
                                </ListBox>
                            </StackPanel>

                            <StackPanel DataContext="{Binding ElementName=lbComplexes, Path=SelectedItem}" Orientation="Horizontal" HorizontalAlignment="Right"  Canvas.ZIndex="10">
                                <TextBlock Text="Name  " HorizontalAlignment="Left" Margin="0,2"/>
                                <TextBox x:Name="txtCxName" Width="150" HorizontalAlignment="Left" Text="{Binding Path=Name}" ></TextBox>
                                <Button x:Name="btnEditComplex" Width="50" Click="btnEditReactionComplex_Click">Edit</Button>
                                <Button x:Name="btnCopyComplex" Width="50" Click="btnCopyReactionComplex_Click">Copy</Button>
                                <Button x:Name="btnAddComplex" Width="50" Click="btnAddReactionComplex_Click">New</Button>
                                <Button x:Name="btnRemoveComplex" Width="60" Click="btnRemoveReactionComplex_Click">Remove</Button>
                            </StackPanel>

                            <!-- List of Reactions in selected Reaction Complex -->
                            <StackPanel DataContext="{Binding ElementName=lbComplexes, Path=SelectedItem}" >
                                <TextBlock Text="Reactions" />
                                <!--<ListBox x:Name="lbReactions2" MinHeight="50" AlternationCount="2"
                                    ItemsSource="{Binding Path=Reactions, Mode=OneWay}"                                                      
                                    DisplayMemberPath="TotalReactionString" >
                                </ListBox>-->
                                <!--<ListBox x:Name="lbReacComplexReactions" MinHeight="50" Height="100" MaxHeight="100" Width="225"
                                        ItemsSource="{Binding Path=reactions_guid_ref}"
                                        ItemTemplate="{Binding Source={StaticResource rcReacListItemTemplate}}"
                                        >
                                </ListBox>-->

                                <!-- ItemsSource="{Binding Path=reactions_guid_ref, Mode=TwoWay}" -->
                                <ListView x:Name="lvReacComplexReactions" 
                                      ItemsSource="{Binding Path=ReactionRates, Mode=TwoWay}"
                                      SelectedIndex="-1"
                                        >
                                    <ListView.View>
                                        <GridView>
                                            <GridView.ColumnHeaderContainerStyle>
                                                <Style TargetType="GridViewColumnHeader">
                                                    <Setter Property="Height" Value="Auto"></Setter>
                                                    <Setter Property="Background">
                                                        <Setter.Value>
                                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                                <GradientStop Offset="0.0" Color="White" />
                                                                <GradientStop Offset="1.0" Color="Beige" />
                                                            </LinearGradientBrush>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </GridView.ColumnHeaderContainerStyle>

                                            <GridViewColumn Width="80" Header="Rate constant">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        
                                                        <!--<TextBlock Text="{Binding   Converter={StaticResource ReacGUIDtoReacStringConv},
                                                            ConverterParameter={StaticResource ecmReactionsListView},
                                                            ConverterCulture='de-DE'}">-->
                                                        <TextBlock Text="{Binding Path=ReactionComplexRate}">
                                                        <TextBlock.Style>
                                                            <Style>
                                                                <Setter Property="TextBlock.Foreground" 
                                                                        Value="Black">
                                                                </Setter>
                                                            </Style>
                                                        </TextBlock.Style>
                                                        </TextBlock>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Width="300" Header="Reaction" >

                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding Path=Guid, Converter={StaticResource ReacGUIDtoReacStringConv},
                                                            ConverterParameter={StaticResource ecmReactionsListView}}">
                                                        <!--<TextBlock Text="{Binding Path=reac.TotalReactionString,   Converter={StaticResource ReacGUIDtoReacStringConv},
                                                            ConverterParameter={StaticResource ecmReactionsListView}}">-->
                                                        <TextBlock.Style>
                                                            <Style>
                                                                <Setter Property="TextBlock.Foreground" 
                                                                        Value="Black">
                                                                </Setter>
                                                            </Style>
                                                        </TextBlock.Style>
                                                        </TextBlock>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>

                                            </GridViewColumn>
                                        </GridView>
                                    </ListView.View>
                                </ListView>
                                
                                <ToggleButton x:Name="btnGraphReactionComplex" IsChecked="False" Grid.Column="4" Grid.Row="3" Grid.ColumnSpan="2" Width="140" HorizontalAlignment="Right" 
                                              Checked="btnGraphReactionComplex_Checked" >Run Reaction Complex</ToggleButton>
                                
                                <!--<Button x:Name="btnGraphReactionComplex" Grid.Column="4" Grid.Row="3" Grid.ColumnSpan="2" Width="140" HorizontalAlignment="Right" Click="btnGraphReactionComplex_Click">Run Reaction Complex</Button>-->
                            </StackPanel>
                        </StackPanel>
                    </Expander>

                    <!-- CELLS -->
                    <Expander ExpandDirection="Down" Padding="5"
                            IsExpanded="False"
                            Header="Cells"
                            x:Name="CellsExpander"
                            Margin="0,4,0,0" 
                            Canvas.ZIndex="1"
                            BorderThickness="1"
                            BorderBrush="Black"
                            Background="{shared:LinearGradientBrush #EEEEEE, #CCCCCC, GradientType=TopLeftToBottomRight}"
                            >
                        <StackPanel>
                            <ListBox x:Name="CellsListBox" MinHeight="50" MaxHeight="100"
                                    ItemsSource="{Binding Path=entity_repository.cells}" 
                                    DisplayMemberPath="CellName"
                                    SelectedIndex="0"
                                    SelectionChanged="CellsListBox_SelectionChanged"
                                    />
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Canvas.ZIndex="10">
                                <Button Name="CopyCellButton"  Width="50" Content="Copy" Click="CopyCellButton_Click" />
                                <Button Name="AddCellButton"  Width="50" Content="Add" Click="AddLibCellButton_Click"/>
                                <Button Name="RemoveCellButton" Width="50" Content="Remove" Click="RemoveCellButton_Click" />
                            </StackPanel>

                            <Expander ExpandDirection="Down" Padding="6"
                                    IsExpanded="False"
                                    Header="Cell Details"
                                    x:Name="CellsDetailsExpander"
                                    Margin="0,-15,0,0" 
                                    Canvas.ZIndex="1"
                                    >

                                <local:DaphneStackPanel x:Name="panelCellMolPops" IsReadOnly="{Binding ElementName=CellsListBox, Path=SelectedItem.ReadOnly}">
                                    <!--<StackPanel Orientation="Vertical">-->
                                    <StackPanel Orientation="Horizontal">
                                        <ContentControl Name="CellDetails" Height="84"
                                                Content="{Binding ElementName=CellsListBox, Path=SelectedItem}" 
                                                ContentTemplate="{StaticResource cellDetailsTemplate}" 
                                                Margin="6,4"/>
                                    </StackPanel>


                                    <!-- Mol Pops in this cell by their location, i.e. cytoplasm or membrane -->
                                    <Expander
                                                Padding="5" 
                                                ExpandDirection="Down"
                                                    IsExpanded="False"
                                                    Header="Cell Molecular Populations"                                              
                                                    x:Name="CellMolPopsExpander"
                                                    Margin="0,15,0,0" 
                                                    Canvas.ZIndex="1"
                                                BorderThickness="1"
                                                BorderBrush="Black"
                                                Background="{shared:LinearGradientBrush #EEEEEE, #CCCCCC, GradientType=TopLeftToBottomRight}" >

                                        <!-- Cell Molecular Populations -->
                                        <StackPanel>
                                            <StackPanel Orientation="Horizontal">

                                                <!-- Membrane Mol Pops -->
                                                <StackPanel Orientation="Vertical">
                                                    <TextBlock Text="Membrane" FontWeight="Bold" Margin="0,4,0,0" >
                                                    </TextBlock>
                                                    <ListBox x:Name="CellMembraneMolPopsListBox" MinHeight="50" Height="100" MaxHeight="100" Width="230"
                                                                ItemsSource="{Binding ElementName=CellsListBox, Path=SelectedItem.membrane.molpops}" 
                                                                DisplayMemberPath="Name"
                                                                SelectedIndex="0" 
                                                                     SelectionChanged="CellMembraneMolPopsListBox_SelectionChanged"/>

                                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Canvas.ZIndex="10">
                                                        <Button Name="MembraneAddMolButton"  Width="50" Content="Add" Click="MembraneAddMolButton_Click" />
                                                        <Button Name="MembraneRemoveMolButton" Width="50" Content="Remove" Click="MembraneRemoveMolButton_Click"/>
                                                    </StackPanel>
                                                </StackPanel>

                                                <!-- Cytosol Mol Pops -->
                                                <StackPanel Orientation="Vertical" >
                                                    <TextBlock Text="Cytosol" FontWeight="Bold" Margin="0,4,0,0" ></TextBlock>
                                                    <ListBox x:Name="CellCytosolMolPopsListBox" MinHeight="50" Height="100" MaxHeight="100" Width="230"
                                                                    ItemsSource="{Binding ElementName=CellsListBox, Path=SelectedItem.cytosol.molpops}" 
                                                                    DisplayMemberPath="Name"                                                    
                                                                    SelectedIndex="-1"
                                                                     SelectionChanged="CellCytosolMolPopsListBox_SelectionChanged"/>
                                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Canvas.ZIndex="10">
                                                        <Button Name="CytosolAddMolButton"  Width="50" Content="Add" Click="CytosolAddMolButton_Click"/>
                                                        <Button Name="CytosolRemoveMolButton" Width="50" Content="Remove" Click="CytosolRemoveMolButton_Click"/>
                                                    </StackPanel>
                                                </StackPanel>

                                            </StackPanel>

                                            <!-- Cell Mol Pop Details -->
                                            <StackPanel>

                                                <Expander ExpandDirection="Down"
                                                          IsExpanded="False"
                                                          Header="Membrane Molecular Population Details"
                                                          x:Name="MembraneMolPopDetailsExpander"
                                                          Margin="0,0,0,0" 
                                                          Canvas.ZIndex="1"
                                                          >
                                                    <StackPanel Orientation="Vertical">
                                                        <ContentControl Name="MembMolPopDetails"
                                                                    Content="{Binding ElementName=CellMembraneMolPopsListBox, Path=SelectedItem}" 
                                                                    ContentTemplate="{StaticResource membraneMolPopDetailsTemplate}" 
                                                                    Margin="6"/>
                                                    </StackPanel>
                                                </Expander>
                                                <Expander ExpandDirection="Down"
                                                          IsExpanded="False"
                                                          Header="Cytosol Molecular Population Details"
                                                          x:Name="CytosolMolPopDetailsExpander"
                                                          Margin="0,0,0,0" 
                                                          Canvas.ZIndex="1"
                                                          >
                                                    <StackPanel Orientation="Vertical">
                                                        <ContentControl Name="CytoMolPopDetails"
                                                                    Content="{Binding ElementName=CellCytosolMolPopsListBox, Path=SelectedItem}"    
                                                                        ContentTemplate="{StaticResource cytosolMolPopDetailsTemplate}"
                                                                    Margin="6">
                                                        </ContentControl>

                                                    </StackPanel>

                                                </Expander>
                                            </StackPanel>

                                        </StackPanel>
                                        <!--</StackPanel>-->

                                    </Expander>
                                    <!-- Reactions in this cell and their location -->
                                    <Expander
                                                Padding="5" 
                                                ExpandDirection="Down"
                                                IsExpanded="False"
                                                Header="Cell Reactions"                                              
                                                x:Name="CellReacExpander"
                                                Margin="0,5,0,0" 
                                                Canvas.ZIndex="1"
                                                BorderThickness="1"
                                                BorderBrush="Black"
                                                Background="{shared:LinearGradientBrush #EEEEEE, #CCCCCC, GradientType=TopLeftToBottomRight}" >

                                        <StackPanel>
                                            <!-- Reactions in cell -->
                                            <StackPanel.Resources>
                                                <DataTemplate x:Key="cellReacListItemTemplate">
                                                    <StackPanel Orientation="Horizontal">
                                                        <TextBlock Width="40" MinWidth="40" Text="{Binding   Converter={StaticResource ReacGUIDtoReacStringConv}, StringFormat={}{0:#.00},
                                                                ConverterParameter={StaticResource ecmReactionsListView}, ConverterCulture='de-DE'}">
                                                        </TextBlock>
                                                        <TextBlock Margin="10,0" Text="{Binding   Converter={StaticResource ReacGUIDtoReacStringConv},  
                                                                ConverterParameter={StaticResource ecmReactionsListView}}">
                                                        </TextBlock>
                                                    </StackPanel>
                                                </DataTemplate>
                                            </StackPanel.Resources>
                                            
                                            <StackPanel>
                                                <TabControl SelectionChanged="TabControl_SelectionChanged">
                                                    <!-- Membrane -->
                                                    <TabItem >
                                                        <TabItem.Header>
                                                            <TextBlock Text="Membrane" FontWeight="Bold" />
                                                        </TabItem.Header>
                                                        <StackPanel Orientation="Vertical">
                                                            <ListBox x:Name="MembReacListBox" MinHeight="50" Height="100" 
                                                             ItemsSource="{Binding ElementName=CellsListBox, Path=SelectedItem.membrane.reactions_guid_ref}"
                                                             ItemTemplate="{Binding Source={StaticResource cellReacListItemTemplate}}"
                                                             >
                                                            </ListBox>
                                                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Canvas.ZIndex="10">
                                                                <Button Name="MembraneRemoveReacButton" Width="50" Content="Remove" Click="MembraneRemoveReacButton_Click"/>
                                                            </StackPanel>
                                                            <StackPanel>
                                                                <Expander ExpandDirection="Down"
                                                                      IsExpanded="False"
                                                                      Header="Add a reaction"
                                                                      x:Name="CellAddReacExpander"
                                                                      Margin="0,0,0,0" 
                                                                      Canvas.ZIndex="1"
                                                                          Expanded="CellAddReacExpander_Expanded"
                                                                      >
                                                                      <StackPanel Orientation="Vertical" Margin="10,0">
                                                                            <TextBlock Text="Available Reactions" Grid.Column="0" Grid.Row="3"  FontWeight="Bold"  Margin="0,0,6,0" />
                                                                            <ListView x:Name="lvCellAvailableReacs" Grid.Column="0" Grid.Row="4" Grid.ColumnSpan="2" Margin="0,0,6,0" AlternationCount="2"                                                                                                                
                                                                                ItemsSource="{Binding Source={StaticResource membraneAvailableReactionsListView}}"
                                                                                SelectedIndex="-1"
                                                                                MinHeight="50" MaxHeight="150"
                                                                                >

                                                                                <ListView.View>
                                                                                <GridView>
                                                                                    <GridView.ColumnHeaderContainerStyle>
                                                                                        <Style TargetType="GridViewColumnHeader">
                                                                                            <Setter Property="Height" Value="Auto"></Setter>
                                                                                            <Setter Property="Background">
                                                                                                <Setter.Value>
                                                                                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                                                                        <GradientStop Offset="0.0" Color="White" />
                                                                                                        <GradientStop Offset="1.0" Color="Beige" />
                                                                                                    </LinearGradientBrush>
                                                                                                </Setter.Value>
                                                                                            </Setter>
                                                                                        </Style>
                                                                                    </GridView.ColumnHeaderContainerStyle>

                                                                                    <GridViewColumn Width="80" Header="Rate constant">
                                                                                        <GridViewColumn.CellTemplate>
                                                                                            <DataTemplate>
                                                                                                <TextBlock Text="{Binding rate_const, StringFormat={}{0:#.00}}">
                                                                                                <TextBlock.Style>
                                                                                                    <Style>
                                                                                                        <Setter Property="TextBlock.Foreground" 
                                                                                                                Value="Black">
                                                                                                        </Setter>
                                                                                                    </Style>
                                                                                                </TextBlock.Style>
                                                                                                </TextBlock>
                                                                                            </DataTemplate>
                                                                                        </GridViewColumn.CellTemplate>
                                                                                    </GridViewColumn>
                                                                                    <GridViewColumn Width="300" Header="Reaction" >
                                                                                        <GridViewColumn.CellTemplate>
                                                                                            <DataTemplate>
                                                                                                <TextBlock Text="{Binding TotalReactionString}">
                                                        <TextBlock.Style>
                                                            <Style>
                                                                <Setter Property="TextBlock.Foreground" 
                                                                        Value="Black">
                                                                </Setter>
                                                            </Style>
                                                        </TextBlock.Style>
                                                                                                </TextBlock>
                                                                                            </DataTemplate>
                                                                                        </GridViewColumn.CellTemplate>

                                                                                    </GridViewColumn>
                                                                                </GridView>
                                                                            </ListView.View>
                                                                            </ListView>
                                                                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Canvas.ZIndex="10">
                                                                                <Button Name="MembraneAddReacButton"  Width="120" Content="Add" Click="MembraneAddReacButton_Click"/>
                                                                            </StackPanel>
                                                                    </StackPanel>
                                                                </Expander>
                                                            </StackPanel>
                                                        </StackPanel>
                                                    </TabItem>
                                                    
                                                    <!-- Cytosol -->
                                                    <TabItem >
                                                        <TabItem.Header>
                                                            <TextBlock Text="Cytosol" FontWeight="Bold" />
                                                        </TabItem.Header>
                                                        <StackPanel Orientation="Vertical" >                                                            
                                                            <ListBox x:Name="CytosolReacListBox" MinHeight="50" Height="100" 
                                                             ItemsSource="{Binding ElementName=CellsListBox, Path=SelectedItem.cytosol.reactions_guid_ref}"
                                                             ItemTemplate="{Binding Source={StaticResource cellReacListItemTemplate}}"
                                                             >
                                                            </ListBox>
                                                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Canvas.ZIndex="10">
                                                                <Button Name="CytosolRemoveReacButton" Width="50" Content="Remove" Click="CytosolRemoveReacButton_Click" />
                                                            </StackPanel>
                                                            <StackPanel>
                                                                <Expander ExpandDirection="Down"
                                                                    IsExpanded="False"
                                                                    Header="Add a reaction"
                                                                    x:Name="CellAddReacExpander2"
                                                                    Margin="0,0,0,0" 
                                                                    Canvas.ZIndex="1"
                                                                          Expanded="CellAddReacExpander2_Expanded"
                                                                    >
                                                                    <StackPanel Orientation="Vertical" Margin="10,0">
                                                                        <TextBlock Text="Available Reactions" Grid.Column="0" Grid.Row="3"  FontWeight="Bold"  Margin="0,0,6,0" />                                                    
                                                                        <ListView x:Name="lvCytosolAvailableReacs" Grid.Column="0" Grid.Row="4" Grid.ColumnSpan="2" Margin="0,0,6,0" AlternationCount="2"                                                                                                                
                                                                            ItemsSource="{Binding Source={StaticResource cytosolAvailableReactionsListView}}"
                                                                            SelectedIndex="-1"
                                                                            MinHeight="50" MaxHeight="150"
                                                                            >

                                                                            <ListView.View>
                                                                                <GridView>
                                                                                    <GridView.ColumnHeaderContainerStyle>
                                                                                        <Style TargetType="GridViewColumnHeader">
                                                                                            <Setter Property="Height" Value="Auto"></Setter>
                                                                                            <Setter Property="Background">
                                                                                                <Setter.Value>
                                                                                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                                                                        <GradientStop Offset="0.0" Color="White" />
                                                                                                        <GradientStop Offset="1.0" Color="Beige" />
                                                                                                    </LinearGradientBrush>
                                                                                                </Setter.Value>
                                                                                            </Setter>
                                                                                        </Style>
                                                                                    </GridView.ColumnHeaderContainerStyle>

                                                                                    <GridViewColumn Width="80" Header="Rate constant">
                                                                                        <GridViewColumn.CellTemplate>
                                                                                            <DataTemplate>
                                                                                                <TextBlock Text="{Binding rate_const, StringFormat={}{0:#.00}}">
                                                                                                    <TextBlock.Style>
                                                                                                        <Style>
                                                                                                            <Setter Property="TextBlock.Foreground" 
                                                                                                                    Value="Black">
                                                                                                            </Setter>
                                                                                                        </Style>
                                                                                                    </TextBlock.Style>
                                                                                                </TextBlock>
                                                                                            </DataTemplate>
                                                                                        </GridViewColumn.CellTemplate>
                                                                                    </GridViewColumn>
                                                                                    <GridViewColumn Width="300" Header="Reaction" >
                                                                                        <GridViewColumn.CellTemplate>
                                                                                            <DataTemplate>
                                                                                                <TextBlock Text="{Binding TotalReactionString}">
                                                                                                    <TextBlock.Style>
                                                                                                        <Style>
                                                                                                            <Setter Property="TextBlock.Foreground" 
                                                                                                                    Value="Black">
                                                                                                            </Setter>
                                                                                                        </Style>
                                                                                                    </TextBlock.Style>
                                                                                                </TextBlock>
                                                                                            </DataTemplate>
                                                                                        </GridViewColumn.CellTemplate>

                                                                                    </GridViewColumn>
                                                                                </GridView>
                                                                            </ListView.View>
                                                                        </ListView>
                                                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Canvas.ZIndex="10">
                                                                            <Button Name="CytosolAddReacButton"  Width="120" Content="Add" Click="CytosolAddReacButton_Click"/>
                                                                        </StackPanel>
                                                                    </StackPanel>
                                                                </Expander>
                                                            </StackPanel>
                                                        </StackPanel>
                                                    </TabItem>
                                                    
                                                </TabControl>
                                            </StackPanel>

                                        </StackPanel>
                                    </Expander>
                                    <!-- Reaction Complexes in this cell and their location -->
                                    <!-- Hidden for now 10/15/13 -->
                                    <Expander
                                        Visibility="Hidden"
                                        Padding="5" 
                                        ExpandDirection="Down"
                                            IsExpanded="False"
                                            Header="Cell Reaction Complexes"                                            
                                            x:Name="CellReacCompExpander"
                                            Margin="0,5,0,0" 
                                            Canvas.ZIndex="1"
                                        BorderThickness="1"
                                        BorderBrush="Black"
                                        Background="{shared:LinearGradientBrush #EEEEEE, #CCCCCC, GradientType=TopLeftToBottomRight}" >

                                        <StackPanel>

                                            <StackPanel>
                                                <StackPanel.Resources>
                                                    <DataTemplate x:Key="reacComplexListItemTemplate">
                                                        <StackPanel Orientation="Horizontal">
                                                            <TextBlock Text="{Binding Path=Name}" />
                                                        </StackPanel>
                                                    </DataTemplate>
                                                </StackPanel.Resources>

                                                <StackPanel.ToolTip>
                                                    <StackPanel Width="200" Orientation="Horizontal">
                                                        <TextBlock TextWrapping="Wrap" HorizontalAlignment="Left" VerticalAlignment="Top" Padding="5" Width="200">
                                                        Click Add button to add a reaction complex to the extracellular medium from a list of reactions complexes in the list box below.
                                                        </TextBlock>
                                                    </StackPanel>
                                                </StackPanel.ToolTip>
                                                <TextBlock Text="Reaction Complexes" Margin="0,-10,0,0" >
                                                </TextBlock>

                                                <ListBox x:Name="CellReactionComplexListBox" MinHeight="50" 
                                                    ItemsSource="{Binding Path=entity_repository.reaction_complexes}" 
                                                    ItemTemplate="{Binding Source={StaticResource reacComplexListItemTemplate}}"
                                                    SelectedIndex="0"     />
                                            </StackPanel>

                                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Canvas.ZIndex="10">
                                                <Button Name="CellAddReacCompExpandButton"  Width="50" Content="Add" />
                                                <Button Name="CellRemoveReacCompButton" Width="50" Content="Remove" />
                                            </StackPanel>

                                            <Expander ExpandDirection="Down"
                                                IsExpanded="False"
                                                Header="Add reaction complex"
                                                x:Name="CellAddReacCxExpander"
                                                Margin="0,5,0,0" 
                                                Canvas.ZIndex="1"
                                                BorderThickness="1"
                                                BorderBrush="Black"
                                                Background="{shared:LinearGradientBrush #EEEEEE, #CCCCCC, GradientType=TopLeftToBottomRight}" >

                                                <StackPanel Orientation="Vertical" Margin="10,0">
                                                    <StackPanel.Resources>
                                                        <DataTemplate x:Key="reacCxListItemTemplate">
                                                            <StackPanel Orientation="Horizontal">
                                                                <TextBlock Text="{Binding Path=Name}" />
                                                            </StackPanel>
                                                        </DataTemplate>

                                                        <DataTemplate x:Key="addReacComplexDetailsTemplate">
                                                            <StackPanel>
                                                                <StackPanel Orientation="Vertical">
                                                                    <TextBlock Text="Reactions in selected Complex" Grid.Column="0" Grid.Row="3"  Margin="0,-10,0,0" />
                                                                    <ListBox x:Name="lbReacsInComplex" Grid.Column="0" Grid.Row="4" Grid.ColumnSpan="2" Margin="0,0,5,0" MinHeight="50" AlternationCount="2"                                                        
                                                                        ItemsSource="{Binding Path=Reactions, Mode=OneWay}"                                                      
                                                                        DisplayMemberPath="TotalReactionString" >
                                                                    </ListBox>
                                                                </StackPanel>
                                                            </StackPanel>
                                                        </DataTemplate>
                                                    </StackPanel.Resources>
                                                    <TextBlock Text="Reaction Complexes Library"  Margin="0,0,6,0" />
                                                    <ListBox x:Name="lbCellAvailableReacCx" Grid.Column="0" Grid.Row="4" Grid.ColumnSpan="2" Margin="0,0,6,0" AlternationCount="2"                                                        
                                                            ItemsSource="{Binding Path=entity_repository.reaction_complexes, Mode=TwoWay}"                                                      
                                                            ItemTemplate="{Binding Source={StaticResource reacCxListItemTemplate}}"
                                                            SelectedIndex="0"     >
                                                    </ListBox>
                                                    <StackPanel Orientation="Vertical" HorizontalAlignment="Right" Margin="0,0,6,0" Canvas.ZIndex="10">
                                                        <Button Name="CellAddReacCxButton"  Width="50" Content="Add" Click="CellAddReacCxButton_Click" />
                                                    </StackPanel>
                                                    <ContentControl Name="CellAddReactionComplexDetails"
                                                        Content="{Binding ElementName=lbCellAvailableReacCx, Path=SelectedItem}" 
                                                        ContentTemplate="{StaticResource addReacComplexDetailsTemplate}" 
                                                        Margin="6"/>
                                                </StackPanel>
                                            </Expander>
                                            <Expander ExpandDirection="Down"
                                                IsExpanded="False"
                                                Header="Details"
                                                x:Name="CellReactionComplexDetailsExpander"
                                                Margin="0,5,0,0" 
                                                Canvas.ZIndex="1"
                                                BorderThickness="1"
                                                BorderBrush="Black"
                                                Background="{shared:LinearGradientBrush #EEEEEE, #CCCCCC, GradientType=TopLeftToBottomRight}" >

                                                <StackPanel Orientation="Vertical">
                                                    <StackPanel.Resources>
                                                        <DataTemplate x:Key="reactionComplexDetailsTemplate">
                                                            <StackPanel>
                                                                <StackPanel Orientation="Horizontal">
                                                                    <TextBlock Text="Reaction Complex Name" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="6,0" />
                                                                    <TextBox Margin="0,2" x:Name="txtReacComplexName" Text="{Binding Path=Name, Mode=OneWay}" IsReadOnly="True" />
                                                                </StackPanel>
                                                                <StackPanel Orientation="Vertical">
                                                                    <TextBlock Text="Reactions" Grid.Column="0" Grid.Row="3"  Margin="5,0,0,0" />
                                                                    <ListBox x:Name="lbReacsInComplex" Grid.Column="0" Grid.Row="4" Grid.ColumnSpan="2" Margin="5,0,6,0" AlternationCount="2"                                                        
                                                                        ItemsSource="{Binding Path=Reactions, Mode=OneWay}"                                                      
                                                                        DisplayMemberPath="TotalReactionString" >
                                                                    </ListBox>
                                                                </StackPanel>
                                                            </StackPanel>
                                                        </DataTemplate>
                                                    </StackPanel.Resources>
                                                    <ContentControl Name="CellReactionComplexDetails"
                                                        Content="{Binding ElementName=CellReactionComplexListBox, Path=SelectedItem}" 
                                                        ContentTemplate="{StaticResource reactionComplexDetailsTemplate}" 
                                                        Margin="6"/>
                                                </StackPanel>
                                            </Expander>
                                        </StackPanel>
                                    </Expander>

                                    <!--</StackPanel>-->
                                </local:DaphneStackPanel>
                            </Expander>
                        </StackPanel>
                    </Expander>

                    <!-- DIFFERENTIATION SCHEMES -->
                    <!-- HIDE FOR NOW -->
                    <Expander   
                        Visibility="Hidden"
                        Padding="5" ExpandDirection="Down"
                        IsExpanded="False"
                        Header="Differentiation Schemes"                                                  
                        x:Name="DiffSchemeExpander"
                        Margin="0,4,0,0" 
                        Canvas.ZIndex="1"
                        BorderThickness="1"
                        BorderBrush="Black"
                        Background="{shared:LinearGradientBrush #EEEEEE, #CCCCCC, GradientType=TopLeftToBottomRight}" >

                        <StackPanel Orientation="Vertical" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True">
                            <Grid DataContext="{Binding ElementName=lbDiff, Path=SelectedItem}">
                                <Grid.Resources>
                                    <DataTemplate x:Key="diffSchemeListItemTemplate">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{Binding Path=Name}" />
                                        </StackPanel>
                                    </DataTemplate>

                                    <DataTemplate x:Key="geneListItemTemplate">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Width="50" Text="{Binding Path=Name}" />
                                            <CheckBox IsChecked="{Binding Path=Active}" />
                                        </StackPanel>
                                    </DataTemplate>

                                    <DataTemplate x:Key="stateListItemTemplate">
                                        <StackPanel Orientation="Vertical">
                                            <TextBlock VerticalAlignment="Top" Text="{Binding Path=Name}" />
                                            <ListBox VerticalContentAlignment="Top" HorizontalContentAlignment="Center" 
                                                ItemsSource="{Binding Path=Genes}" DisplayMemberPath="Active" 
                                                ItemTemplate="{Binding Source={StaticResource geneListItemTemplate}}" />
                                        </StackPanel>
                                    </DataTemplate>

                                    <DataTemplate x:Key="cellState2ListItemTemplate">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Width="20" Text="{Binding Path=Name}" />
                                            <TextBlock Width="10" Text="" />
                                            <TextBox Width="50" Text="{Binding Path=MolName}" />
                                            <!--<ComboBox VerticalContentAlignment="Top" HorizontalContentAlignment="Center" 
                                                                        ItemsSource="{Binding Path=molecNames}" 
                                                                        />-->
                                        </StackPanel>
                                    </DataTemplate>
                                    <DataTemplate x:Key="cellStateListItemTemplate">
                                        <StackPanel Orientation="Vertical">
                                            <TextBlock VerticalAlignment="Top" Text="{Binding Path=Name}" />
                                            <ListBox VerticalContentAlignment="Top" HorizontalContentAlignment="Center" ItemsSource="{Binding Path=CellStates}" DisplayMemberPath="Active" 
                                                                    ItemTemplate="{Binding Source={StaticResource cellState2ListItemTemplate}}" />
                                        </StackPanel>
                                    </DataTemplate>

                                    <DataTemplate x:Key="diffStatesListItemTemplate">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Width="80" Text="{Binding Path=Name}" />
                                        </StackPanel>
                                    </DataTemplate>

                                    <DataTemplate x:Key="cellStateGridItemTemplate">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Width="80" Text="{Binding Path=MolName}" />
                                        </StackPanel>
                                    </DataTemplate>
                                </Grid.Resources>

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="200" />
                                    <ColumnDefinition Width="130" />
                                    <ColumnDefinition Width="120" />
                                    <ColumnDefinition Width="120" />
                                    <ColumnDefinition Width="120" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto" />
                                    <RowDefinition Height="auto" />
                                    <RowDefinition Height="auto" />
                                    <RowDefinition Height="auto" />
                                    <RowDefinition Height="auto" />
                                    <RowDefinition Height="auto" />
                                    <RowDefinition Height="auto" />
                                    <RowDefinition Height="auto" />
                                </Grid.RowDefinitions>

                                <!-- DIFFERENTIATION SCHEMES -->
                                <!--<TextBlock Text="Differentiation Schemes" Grid.Column="0" Grid.Row="0"  FontWeight="Bold"  Margin="0,10,0,0" />-->
                                <ListBox x:Name="lbDiff" Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="3" Height="100" Margin="0,10,0,0" 
                                                            ItemsSource="{Binding Path=ListDiffSchemes}"                                                      
                                                            ItemTemplate="{Binding Source={StaticResource diffSchemeListItemTemplate}}"
                                                            SelectedIndex="0" >
                                </ListBox>
                                <StackPanel Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Left">
                                    <TextBlock Text="Name"  Width="50" HorizontalAlignment="Left" VerticalAlignment="Center" FontWeight="Bold"  Margin="0,10,0,0" />
                                    <TextBox x:Name="txtDiffName" Text="{Binding Path=Name}"  Width="200" Height="24"  Margin="0,10,0,0"  ></TextBox>
                                </StackPanel>

                                <StackPanel Grid.Column="1" Grid.Row="1" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Right">
                                    <Button x:Name="btnEditDiff" Grid.Column="1" Grid.Row="1" Width="40" HorizontalAlignment="Left" >Edit</Button>
                                    <Button x:Name="btnAddDiff" Width="40" HorizontalAlignment="Right" >Add</Button>
                                    <Button x:Name="btnCopyDiff" Width="50" HorizontalAlignment="Left" >Copy</Button>
                                    <Button x:Name="btnRemoveDiff" Width="60" HorizontalAlignment="Right" >Remove</Button>
                                </StackPanel>

                                <TextBlock Text="Epigenetic Map" Grid.Column="0" Grid.Row="2" Width="120" HorizontalAlignment="Left" VerticalAlignment="Center" FontWeight="Bold"  Margin="0,10,0,0" />

                                <!-- Differentiation Matrix for selected Differentiation Scheme-->
                                <DataGrid Visibility="Hidden" x:Name="dgDiffScheme" Height="100" Grid.Column="0" Grid.Row="7" Grid.ColumnSpan="2" Margin="0,10,0,0" AlternatingRowBackground="Beige"
                                                                ItemsSource="{Binding Path=CellStates}" DisplayMemberPath="MolName">

                                    <DataGrid.ColumnHeaderStyle>
                                        <Style  TargetType="DataGridColumnHeader" >
                                            <Setter Property="FontSize" Value="14" />
                                            <Setter Property="Background" Value="Beige" />
                                            <Setter Property="BorderBrush" Value="Black" />
                                            <Setter Property="BorderThickness" Value="1" />
                                            <Setter Property="MinWidth" Value="50" />
                                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                                            <Setter Property="ContentTemplate" >
                                                <Setter.Value>
                                                    <DataTemplate >
                                                        <StackPanel>
                                                            <TextBlock Text="Header" />
                                                            <!--<TextBlock Text="{Binding}" />-->
                                                            <!--<TextBlock Text="{Binding Path=Name}"/>-->
                                                        </StackPanel>
                                                    </DataTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </DataGrid.ColumnHeaderStyle>
                                    <!--<DataGrid.RowHeaderTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, 
                                                                        AncestorType={x:Type DataGridRow}}, 
                                                                        Path=Item.Name}"/>
                                        </DataTemplate>
                                    </DataGrid.RowHeaderTemplate>-->

                                </DataGrid>

                                <StackPanel Orientation="Horizontal" Grid.Column="0" Grid.Row="4" Grid.ColumnSpan="5">
                                    <!-- This datagrid is the best one so far -->
                                    <DataGrid Margin="0,10,0,0" x:Name="TheGrid" Width="350"
                                                            AutoGenerateColumns="False"
                                                            IsReadOnly="False"
                                                            CanUserAddRows="False" 
                                                                AlternatingRowBackground="Beige"
                                                            >

                                        <!--<DataGrid.RowHeaderTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, 
                                                                    AncestorType={x:Type DataGridRow}}, 
                                                                    Path=Item.Name}"/>
                                            </DataTemplate>
                                        </DataGrid.RowHeaderTemplate>-->

                                    </DataGrid>
                                    <ListBox Visibility="Hidden"  Height="144" HorizontalAlignment="Left" Margin="0,10,0,0" Name="lbScheme" VerticalAlignment="Top" Width="250" VerticalContentAlignment="Top" 
                                                                ItemsSource="{Binding Path=States}"
                                                                ItemTemplate="{Binding Source={StaticResource stateListItemTemplate}}">
                                        <ListBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <WrapPanel IsItemsHost="True" />
                                            </ItemsPanelTemplate>
                                        </ListBox.ItemsPanel>
                                    </ListBox>
                                </StackPanel>

                                <TextBlock Text="Differentiation Regulators" Grid.Column="0" Grid.Row="5" Width="150" HorizontalAlignment="Left" VerticalAlignment="Center" FontWeight="Bold"  Margin="0,10,0,0" />
                                <StackPanel Orientation="Horizontal" Grid.Column="0" Grid.Row="6" Grid.ColumnSpan="5">

                                    <!-- This CellState datagrid is good -->
                                    <DataGrid Height="144" Width="350" Margin="0,10,0,0" x:Name="CellStateGrid" 
                                                                AutoGenerateColumns="False"
                                                                IsReadOnly="False"
                                                                CanUserAddRows="False" >
                                        <!--SelectedCellsChanged="CellStateGrid_SelectedCellsChanged"-->

                                        <DataGrid.Resources>
                                            <Style x:Name="MyStyle" TargetType="ComboBox">
                                                <Setter Property="IsEnabled" Value="True" />
                                                <Setter Property="Visibility" Value="Visible" />
                                            </Style>
                                        </DataGrid.Resources>
                                        <!--<DataGrid.RowHeaderTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, 
                                                                        AncestorType={x:Type DataGridRow}}, 
                                                                        Path=Item.Name}"/>
                                            </DataTemplate>
                                        </DataGrid.RowHeaderTemplate>-->

                                    </DataGrid>
                                    <ListBox Visibility="Hidden" Height="144" HorizontalAlignment="Left" Margin="0,10,0,0" Name="lbCellStates" VerticalAlignment="Top" Width="250" VerticalContentAlignment="Top" 
                                                                ItemsSource="{Binding Path=CellStates}"
                                                                ItemTemplate="{Binding Source={StaticResource cellStateListItemTemplate}}">
                                        <ListBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <WrapPanel IsItemsHost="True" />
                                            </ItemsPanelTemplate>
                                        </ListBox.ItemsPanel>
                                    </ListBox>
                                    <!--<Button x:Name="btnDebug1" Height="24" Width="40" HorizontalAlignment="Left" Click="btnDebug1_Click">Debug</Button>-->
                                </StackPanel>
                            </Grid>
                        </StackPanel>
                    </Expander>

                </StackPanel>
            </ScrollViewer>
        </TabItem>


        <!-- GUID VIEWER -->
        <TabItem Header="GUID Viewer" Visibility="Hidden">
            <ScrollViewer VerticalScrollBarVisibility="Auto">
                <StackPanel Orientation="Vertical">

                <StackPanel Orientation="Vertical">
                        
                </StackPanel>
                <StackPanel Orientation="Vertical" Margin="8">
                    <StackPanel.Resources>
                        <DataTemplate x:Key="molGuidsListItemTemplate">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding Path=Name}" Margin="5,0,0,0" Width="100"/>
                                <TextBlock Text="    " Margin="5,0,0,0"/>
                                <TextBlock Text="{Binding Path=molecule_guid}" Margin="5,0,0,0"/>
                            </StackPanel>
                        </DataTemplate>
                        <DataTemplate x:Key="molpopGuidsListItemTemplate">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding Path=Name}" Margin="5,0,0,0" Width="100"/>
                                <TextBlock Text="    " Margin="5,0,0,0"/>
                                <TextBlock Text="{Binding Path=molpop_guid}" Margin="5,0,0,0"/>
                            </StackPanel>
                        </DataTemplate>
                        <DataTemplate x:Key="cellGuidsListItemTemplate">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding Path=CellName}" Margin="5,0,0,0"/>
                                <TextBlock Text="    " Margin="5,0,0,0"/>
                                <TextBlock Text="{Binding Path=cell_guid}" Margin="5,0,0,0"/>
                            </StackPanel>
                        </DataTemplate>
                        <DataTemplate x:Key="reactionGuidsListItemTemplate">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding Path=TotalReactionString}" Margin="5,0,0,0"/>
                                <TextBlock Text="    " Margin="5,0,0,0"/>
                                <TextBlock Text="{Binding Path=reaction_guid}" Margin="5,0,0,0"/>
                            </StackPanel>
                        </DataTemplate>
                    </StackPanel.Resources>

                    <!-- Molecular Populations -->
                    <TextBlock Text="Molecular Populations" FontWeight="Bold" Margin="0,5,0,0" />
                    <ListBox x:Name="MolPopGuids" MinHeight="50" 
                                ItemsSource="{Binding Path=scenario.environment.ecs.molpops}" 
                                ItemTemplate="{Binding Source={StaticResource molpopGuidsListItemTemplate}}"
                                SelectedIndex="0"
                                />
                    
                    <!-- Molecules -->
                    <TextBlock Text="Molecules" FontWeight="Bold" Margin="0,5,0,0" />
                    <ListBox x:Name="MolGuids" MinHeight="50" 
                                ItemsSource="{Binding Path=entity_repository.molecules}" 
                                ItemTemplate="{Binding Source={StaticResource molGuidsListItemTemplate}}"
                                SelectedIndex="0"
                                />

                    <!-- Cells -->
                    <TextBlock Text="Cells" FontWeight="Bold" Margin="0,5,0,0" />
                    <ListBox x:Name="CellGuids" MinHeight="50" 
                                ItemsSource="{Binding Path=entity_repository.cells}" 
                                ItemTemplate="{Binding Source={StaticResource cellGuidsListItemTemplate}}"
                                SelectedIndex="0"
                                />

                    <!-- Reactions -->
                    <TextBlock Text="Reactions" FontWeight="Bold" Margin="0,10,0,0" />
                    <ListBox x:Name="ReactionGuids" MinHeight="50" 
                                ItemsSource="{Binding Path=entity_repository.reactions}" 
                                ItemTemplate="{Binding Source={StaticResource reactionGuidsListItemTemplate}}"
                                SelectedIndex="0"
                                />

                </StackPanel>
                </StackPanel>

            </ScrollViewer>
        </TabItem>

    </TabControl>
</docking:ToolWindow>
