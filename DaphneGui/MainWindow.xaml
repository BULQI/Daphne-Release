<Window x:Class="DaphneGui.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:wf="clr-namespace:System.Windows.Forms;assembly=System.Windows.Forms"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:local="clr-namespace:DaphneGui"
        xmlns:work="clr-namespace:Workbench"
        xmlns:daph="clr-namespace:Daphne;assembly=Daphne"
        xmlns:push="clr-namespace:DaphneGui.Pushing"
        xmlns:editors="http://schemas.actiprosoftware.com/winfx/xaml/editors"
	    xmlns:shared="http://schemas.actiprosoftware.com/winfx/xaml/shared"
	    xmlns:docking="http://schemas.actiprosoftware.com/winfx/xaml/docking"
        xmlns:uc="clr-namespace:DaphneUserControlLib;assembly=DaphneUserControlLib"
        xmlns:plot="clr-namespace:DaphneGui.CellPopDynamics"
        xmlns:lin="clr-namespace:DaphneGui.CellLineage"
        Title="Daphne"
        Width="1500" Height="770" Closing="Window_Closing"
        Icon="Daphne.ico"
        Name="mainWindow"
        LocationChanged="mainWindow_LocationChanged"
        >

    <Window.Resources>

        <local:CellRenderPopFromProtocolConverter x:Key="CellRenderPopFromProtocolConverter"/>

        <local:RenderMethodEnumDescriptionConverter x:Key="RenderMethodEnumDescriptionConverter" />

        <local:ToolwinComponentVisibilityConverter x:Key="ToolwinComponentVisibilityConverter" />

        <local:ToolwinComponentConverter x:Key="ToolwinComponentConv" />

        <local:SimSetupControl x:Key="simSetupControl"/>

        <!-- Tab header text layout for LP fitting tab -->
        <DataTemplate x:Key="TabItemHeaderTemplate">
            <Grid>
                <ContentPresenter Content="{TemplateBinding Property=ContentControl.Content}" 
                                  RenderTransformOrigin="0.5,0.5" >
                    <ContentPresenter.LayoutTransform>
                        <TransformGroup>
                            <RotateTransform Angle="-90"/>
                        </TransformGroup>
                    </ContentPresenter.LayoutTransform>
                </ContentPresenter>
            </Grid>
        </DataTemplate>

    </Window.Resources>
    
    <Window.CommandBindings>
        <CommandBinding Command="ApplicationCommands.Open" 
                        CanExecute="CommandBindingOpen_CanExecute" 
                        Executed="CommandBindingOpen_Executed" />
        
        <CommandBinding Command="ApplicationCommands.Save" 
                        CanExecute="CommandBindingSave_CanExecute" 
                        Executed="CommandBindingSave_Executed" />
        
        <CommandBinding Command="{x:Static local:MainWindow.SelectReportFolderCommand}" 
                        CanExecute="CommandBindingSelectReportFolder_CanExecute"
                        Executed="CommandBindingSelectReportFolder_Executed" />
        
        
    </Window.CommandBindings>

    <Window.InputBindings>
        <KeyBinding Key="O"
                    Modifiers="Control" 
                    Command="ApplicationCommands.Open" />

        <!--<KeyBinding Key="J"
                    Modifiers="Control" 
                    Command="ApplicationCommands.Open" />-->

        <KeyBinding Key="S"
                    Modifiers="Control" 
                    Command="ApplicationCommands.Save" />

    </Window.InputBindings>

    
    <!-- Begin GUI layout definitions -->
    <DockPanel LastChildFill="True">
        
        <shared:PixelSnapper DockPanel.Dock="Top">
            <Menu x:Name="MainMenu">
                <!--><MenuItem Header="Edit"/>-->
                <MenuItem Header="File" Name="fileMenu">
                    <MenuItem Header="New Protocol" Name="newScenario" Click="newScenario_Click"></MenuItem>
                    <MenuItem Header="Load Protocol..." Name="loadScenario" Command="ApplicationCommands.Open" DataContext="{Binding}" />
                    <MenuItem Header="Restore default path" Name="defaultPath" Click="defaultFolder" />
                    <MenuItem Header="Save Protocol" Name="saveScenario" Command="ApplicationCommands.Save" />
                    <MenuItem Header="Save Protocol As..." Name="saveScenarioAs" Click="saveScenarioAs_Click" />
                    <MenuItem Header="Save State..." Name="saveState" IsEnabled="{Binding Path=RunStatus, UpdateSourceTrigger=PropertyChanged, Converter={local:SimulationStateToBoolConverter}}" Click="saveState_Click" />
                    <Separator />
                    <MenuItem Header="Export in SBML" Name="ExportSBML">
                        <MenuItem Header="Simulation Model" Name="ExportModelSBML" Click="ExportSBML_Click" />
                        <MenuItem Header="Reaction Complex" Name="ExportComplexSBML" Click="ExportReactionComplexSBML_Click" />
                    </MenuItem>
                    <MenuItem Header="Import from SBML" Name="ImportSBML" Click="ImportSBML_Click" />

                    <!--<Separator />
                    <MenuItem Header="Load 2P text file into database..." Name="parse2Ptext" Click="parse2Ptext_Click" />-->
                    <Separator />
                    <MenuItem Header="Load past experiment..." Name="loadExp" Click="OpenExpSelectWindow" />
                    <MenuItem Header="Export AVI" Name="exportAVI" IsEnabled="False" Click="ExportAVI" />
                    <Separator />
                    <!--<local:RecentFileList x:Name="recentFileList" />-->
                    <MenuItem Header="Exit..." Name="exitApp" Click="exitApp_Click" />
                </MenuItem>
                <MenuItem Header="File" Name="userStoreFileMenu" Visibility="Collapsed">
                    <MenuItem Header="Save Store" Name="fileSaveStore" Click="menuAdminSave_Click" />
                    <MenuItem Header="Save Store As..." Name="fileSaveStoreAs" Click="menuAdminSaveAs_Click" />
                </MenuItem>
                
                <MenuItem Header="Analysis" Name="analysisMenu" IsEnabled="False" >
                    <MenuItem Header="Cell Population Dynamics..." Name="analCellPopDynMenu" Click="analCellPopDynMenu_Click"/>
                    <MenuItem Header="Cell Lineage..." Name="LineageAnalMenu" Click="OpenLineageWindow" />
                    <MenuItem Header="Cell Tracks" Name="fitMenu" Click="cellTracksMenu_Click" Visibility="Collapsed" />
                </MenuItem>
                <MenuItem Header="Options" Name="optionsMenu">
                    <MenuItem Header="User preferences">
                        <MenuItem Header="Fit autozoom" Name="autoZoomFitMenu" IsCheckable="True" IsChecked="True" Click="autoZoomFit_click" />
                        <MenuItem Header="Restart opens last Protocol" Name="openLastScenarioMenu" IsCheckable="True" IsChecked="False" Click="openLastScenario_click" />
                        <MenuItem Header="Cell summaries" Name="writeCellSummariesMenu" IsCheckable="True" IsChecked="False" Click="runCellSummaries_click" Visibility="Collapsed" />
                        <MenuItem Header="Run statistical summary" Name="runStatisticalSummaryMenu" IsCheckable="True" IsChecked="True" Click="runStatisticalSummary_click" Visibility="Collapsed" />
                        <MenuItem Header="Unique name reminders" Name="uniqueNamesMenu" IsCheckable="True" IsChecked="False" Click="uniqueNames_click" Visibility="Collapsed" />
                    </MenuItem>
                    <MenuItem Header="Data storage" Name = "DataStorageMenu">
                        <MenuItem Header="Skip data writes" Name="skipDataWriteMenu" IsCheckable="True" IsChecked="False" Click="skipDataWrite_Click" />
                        <Separator />
                        <MenuItem Header="Select report folder" Name="selectReportFolderMenu" Command="{x:Static local:MainWindow.SelectReportFolderCommand}"/>
                    </MenuItem>
                    <!--<MenuItem Header="Statistical Analysis" Name = "StatsMenu">
                        <MenuItem Header="Skip Mean Distance From Center" Name="skipMeanDist" IsCheckable="True" IsChecked="False"   />
                        <MenuItem Header="Skip Inter Cell Distance" Name="skipInterCell" IsCheckable="True" IsChecked="False"        />
                        <MenuItem Header="Skip Mean Speed" Name="skipMeanSpeed" IsCheckable="True" IsChecked="False"                 />
                        <MenuItem Header="Skip Chemotactic Index" Name="skipChemotactic" IsCheckable="True" IsChecked="False"        />
                        <MenuItem Header="Skip Time Values" Name="skipTimeVal" IsCheckable="True" IsChecked="False"                  />
                    </MenuItem>-->
                </MenuItem>

                <MenuItem Header="_Window">
                    <MenuItem x:Name="menu_ActivateSimSetup" Header="Protocol"  
							  Command="docking:DockingCommands.ActivateWindow" 
                              CommandTarget="{Binding ElementName=mainWindow, Path=ToolWinType, Converter={StaticResource ToolwinComponentConv}}" />
                    <MenuItem x:Name="menu_ActivateVTKView" Header="3D View"  
							  Command="docking:DockingCommands.ActivateWindow" CommandTarget="{Binding ElementName=VTKDisplayDocWindow}"
                              Visibility="{Binding ElementName=mainWindow, Path=ToolWinType, Converter={StaticResource ToolwinComponentVisibilityConverter}, 
                                    ConverterParameter=VTKDisplayDocWindow}" />
                    <MenuItem x:Name="menu_ComponentsLibrary" Header="Subcellular Components Store"  
							  Command="docking:DockingCommands.ActivateWindow" CommandTarget="{Binding ElementName=ComponentsToolWindow}" />
                    <MenuItem x:Name="menu_CellsLibrary" Header="Cells Store"  
							  Command="docking:DockingCommands.ActivateWindow" CommandTarget="{Binding ElementName=CellStudioToolWindow}"
                              Visibility="{Binding ElementName=mainWindow, Path=ToolWinType, Converter={StaticResource ToolwinComponentVisibilityConverter}, 
                                    ConverterParameter=CellStudioToolWindow}" />
                    <MenuItem x:Name="menu_ActivateRCChart" Header="Reaction Complex Chart"  
							  Command="docking:DockingCommands.ActivateWindow" CommandTarget="{Binding ElementName=ReacComplexChartWindow}"
                              Visibility="{Binding ElementName=mainWindow, Path=ToolWinType, Converter={StaticResource ToolwinComponentVisibilityConverter}, 
                                    ConverterParameter=ReacComplexChartWindow}" />
                    <MenuItem x:Name="menu_CellPopDyn" Header="Cell Population Dynamics"  
							  Command="docking:DockingCommands.ActivateWindow" CommandTarget="{Binding ElementName=plotToolWindow}" />
                    <MenuItem x:Name="menu_CellLineage" Header="Cell Lineage"  
							  Command="docking:DockingCommands.ActivateWindow" CommandTarget="{Binding ElementName=lineageWindow}" />

                    <!-- This one is not yet functional -->
                    <!--<MenuItem x:Name="menu_ActivateAnalysisChart" Header="Activate Run Stats Results"  
							  Command="docking:DockingCommands.ActivateWindow" CommandTarget="{Binding ElementName=ChartViewDocWindow}" />-->
                    <!--<MenuItem x:Name="menu_ActivateDisplayOptions" Header="Activate Display Options"  
							  Command="docking:DockingCommands.ActivateWindow" CommandTarget="{Binding ElementName=DisplayOptionsToolWindow}" />-->
                </MenuItem>
                
                <MenuItem Header="Stores"                 Name="pushMenu">
                    <MenuItem Header="Molecules..."              Name="pushMol"         Click="pushMol_Click"  />
                    <MenuItem Header="Genes..."                  Name="pushGene"        Click="pushGene_Click" 
                              Visibility="{Binding ElementName=mainWindow, Path=ToolWinType, Converter={StaticResource ToolwinComponentVisibilityConverter}, 
                                    ConverterParameter=CatalogGenes}"/>
                    <MenuItem Header="Reactions..."              Name="pushReac"        Click="pushReac_Click" />
                    <MenuItem Header="Reaction Complexes..."     Name="pushReacComplex" Click="pushReacComplex_Click" />
                    <MenuItem Header="Cells..."                  Name="pushCell"        Click="pushCell_Click" 
                              Visibility="{Binding ElementName=mainWindow, Path=ToolWinType, Converter={StaticResource ToolwinComponentVisibilityConverter}, 
                                    ConverterParameter=CatalogCells}"/>
                    <MenuItem Header="Differentiation Scheme..." Name="pushDiffScheme"  Click="pushDiffScheme_Click" IsEnabled="False" Visibility="Collapsed"/>
                    <MenuItem Header="Transition Drivers..."     Name="pushTransDriver" Click="pushTransDriver_Click" IsEnabled="False" Visibility="Collapsed"/>
                </MenuItem>
                
                <MenuItem Header="Data Export" Name = "ExportMenu" Visibility="Collapsed">
                    <MenuItem Header="B Cell Summary" Name="bCellSummaryExport" Click="bCellSummaryExport_Click" />
                    <MenuItem Header="B Cell Pedigree" Name="bCellPedigreeExport" Click="bCellPedigreeExport_Click" />
                    <MenuItem Header="B Cell FDC Summary" Name="bCellFDCSummaryExport" Click="bCellFDCSummaryExport_Click" />
                    <Separator />
                    <MenuItem Header="Export All" Name="allExport" Click="allExport_Click" />
                </MenuItem>
                <MenuItem Header="Administration" Name="AdminMenu">
                    <MenuItem Header="User Store" Name="menuUserStore" Click="menuUserStore_Click" />
                    <MenuItem Header="Daphne Store" Name="menuDaphneStore" Click="menuDaphneStore_Click" Visibility="Collapsed" />
                    <MenuItem Header="Save" Name="menuAdminSave" Visibility="Collapsed" Click="menuAdminSave_Click"/>
                    <MenuItem Header="Save As..." Name="menuAdminSaveAs" Click="menuAdminSaveAs_Click" Visibility="Collapsed" />
                    <MenuItem Header="Return to Protocol" Name="menuProtocolStore" Click="menuProtocolStore_Click" IsEnabled="False" />               
                </MenuItem>
              
                <MenuItem Header="Help">
                    <MenuItem Header="Dev help" Name="devHelp" Click="devHelp_click" />
                    <MenuItem Header="Tech help" Name="techHelp" Click="techHelp_click" />
                    <!-- Commented out for now. Do we need this? -->
                    <!--<MenuItem Header="Tech help" Name="techHelp" >
                        <MenuItem Header="Fitting" Name="fittingHelp" Click="fittingHelp_click" />
                        <MenuItem Header="Locomotion" Name="locomotionHelp" Click="locomotionHelp_click" />
                        <MenuItem Header="Receptor dynamics" Name="receptorHelp" Click="receptorHelp_click" />                        
                    </MenuItem>-->
                    <MenuItem Header="About..." Name="helpAbout" Click="helpAbout_Click" />
                </MenuItem>
            </Menu>
        </shared:PixelSnapper>

        <shared:PixelSnapper DockPanel.Dock="Top">
            <ToolBarTray>
                <ToolBarTray.Resources>
                    <!-- Gray out button images when toolbar is disabled -->
                    <Style TargetType="{x:Type Image}" x:Key="toolbarImageStyle">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}, AncestorLevel=1}, Path=IsEnabled}" Value="False">
                                <Setter Property="Opacity" Value="0.25"></Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                    <Style TargetType="{x:Type Image}" x:Key="toolbarTBImageStyle">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}, AncestorLevel=1}, Path=IsEnabled}" Value="False">
                                <Setter Property="Opacity" Value="0.25"></Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                    <Style TargetType="{x:Type Image}" x:Key="toolbarPlayButtonImageStyle">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}, AncestorLevel=1}, Path=IsEnabled}" Value="False">
                                <Setter Property="Opacity" Value="0.25"></Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ToolBarTray.Resources>                
                <ToolBar Name="SaveToolbar" RenderOptions.BitmapScalingMode="NearestNeighbor">
                    <Button Content="Apply" HorizontalAlignment="Left" Name="applyButton" 
                                Width="60" ToolTipService.InitialShowDelay="1500"
                                Margin="0" Click="applyButton_Click">
                        <Button.ToolTip>
                            <ToolTip>
                                <StackPanel Width="200" Orientation="Horizontal">
                                    <TextBlock TextWrapping="Wrap" HorizontalAlignment="Left" 
                                                        VerticalAlignment="Top" Padding="5" Width="200">
                                            Refresh the 3D visualization with the current Protocol options while setting up the simulated experiment (before hitting run).
                                    </TextBlock>
                                </StackPanel>
                            </ToolTip>
                        </Button.ToolTip>
                    </Button>                    
                    <Button Content="Save" HorizontalAlignment="Right" Name="saveButton" 
                                Width="60" ToolTipService.InitialShowDelay="1500"
                                Margin="0" Command="ApplicationCommands.Save">
                        <Button.ToolTip>
                            <ToolTip>
                                <StackPanel Width="200" Orientation="Horizontal">
                                    <TextBlock TextWrapping="Wrap" HorizontalAlignment="Left" 
                                                        VerticalAlignment="Top" Padding="5" Width="200">
                                        Save the simulation.
                                    </TextBlock>
                                </StackPanel>
                            </ToolTip>
                        </Button.ToolTip>
                    </Button>
                </ToolBar>
                <ToolBar Name="SimControlToolbar" RenderOptions.BitmapScalingMode="NearestNeighbor">
                    <Button Content="Run" HorizontalAlignment="Right" Name="runButton" 
                                Width="60" ToolTipService.InitialShowDelay="1500"
                                Margin="0" Click="runButton_Click">
                        <Button.ToolTip>
                            <ToolTip>
                                <StackPanel Width="200" Orientation="Horizontal">
                                    <TextBlock TextWrapping="Wrap" HorizontalAlignment="Left" 
                                                        VerticalAlignment="Top" Padding="5" Width="200">
                                        Start the simulation.
                                    </TextBlock>
                                </StackPanel>
                            </ToolTip>
                        </Button.ToolTip>
                    </Button>
                    <Button Content="Abort" HorizontalAlignment="Left" Name="abortButton" 
                                Width="60" ToolTipService.InitialShowDelay="1500"
                                Margin="0" Click="abortButton_Click">
                        <Button.ToolTip>
                            <ToolTip>
                                <StackPanel Width="200" Orientation="Horizontal">
                                    <TextBlock TextWrapping="Wrap" HorizontalAlignment="Left" 
                                                        VerticalAlignment="Top" Padding="5" Width="200">
                                            Abort the simulation.
                                    </TextBlock>
                                </StackPanel>
                            </ToolTip>
                        </Button.ToolTip>
                    </Button>
                </ToolBar>
                <ToolBar Name="VCR_Toolbar" RenderOptions.BitmapScalingMode="NearestNeighbor" IsEnabled="False">
                    <Button Name="VCRbutton_First" Click="VCRbutton_First_Click" ToolBar.OverflowMode="Never">
                        <Image Source="Images/pqVcrFirst24.png" Width="24" Style="{StaticResource toolbarImageStyle}"/>
                    </Button>
                    <Button Name="VCRbutton_Back" Click="VCRbutton_Back_Click" ToolBar.OverflowMode="Never">
                        <Image Source="Images/pqVcrBack24.png" Width="24" Style="{StaticResource toolbarImageStyle}"/>
                    </Button>
                    <ToggleButton Name="VCRbutton_Play" Checked="VCRbutton_Play_Checked" Unchecked="VCRbutton_Play_Unchecked" ToolBar.OverflowMode="Never">
                        <ToggleButton.Resources>
                            <Image x:Key="PlayImage" Source="Images/pqVcrPlay24.png" Width="24" Style="{StaticResource toolbarTBImageStyle}"/>
                            <Image x:Key="PauseImage" Source="Images/pqVcrPause24.png" Width="24" Style="{StaticResource toolbarTBImageStyle}"/>
                        </ToggleButton.Resources>
                        <!-- This works for toggling image along with checked state, but I don't know how to get a xaml preview to show up properly -->
                        <ToggleButton.Style>
                            <Style TargetType="ToggleButton">
                                <Style.Triggers>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="Content" Value="{StaticResource PauseImage}" />
                                    </Trigger>
                                    <Trigger Property="IsChecked" Value="False">
                                        <Setter Property="Content" Value="{StaticResource PlayImage}" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ToggleButton.Style>
                    </ToggleButton>
                    <Button Name="VCRbutton_Forward" Click="VCRbutton_Forward_Click" ToolBar.OverflowMode="Never">
                        <Image Source="Images/pqVcrForward24.png" Width="24" Style="{StaticResource toolbarImageStyle}"/>
                    </Button>
                    <Button Name="VCRbutton_Last" Click="VCRbutton_Last_Click" ToolBar.OverflowMode="Never">
                        <Image Source="Images/pqVcrLast24.png" Width="24" Style="{StaticResource toolbarImageStyle}"/>
                    </Button>
                    <Slider Name="VCRslider"
                                    Orientation="Horizontal"
                                    VerticalAlignment="Center"
                                    Margin="5,0,0,0"
                                    ToolBar.OverflowMode="Never"
                                    Width="80"
                                    RenderTransform="1.0,0,0,0.5,0,4"
                                    Minimum="0" 
                                    Maximum="100" 
                                    Value="{Binding Path=CurrentFrame, Mode=TwoWay}"
                                    IsSnapToTickEnabled="True" 
                                    TickFrequency="1"
                                    PreviewMouseLeftButtonDown="VCRSlider_LeftMouse_Down"
                                    PreviewMouseLeftButtonUp="VCRSlider_LeftMouse_Up" />
                    <editors:DoubleEditBox ToolBar.OverflowMode="Never"
                                                CheckBoxVisibility="Collapsed" 
                                                SpinnerVisibility="Collapsed"
                                                VerticalAlignment="Center"
                                                Format="F1"
                                                Margin="5,0,1,0" 
                                                Width="50" 
                                                CenterSlotHorizontalAlignment="Right"
                                                Value="{Binding Path=CurrentTime, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                                
                                                />
                    <TextBlock VerticalAlignment="Center" Text="min" />
                    <Separator Margin="4,0" />
                    <TextBlock VerticalAlignment="Center" Text="speed factor" />
                    
                    <Slider Name="SpeedSlider"
                                    Orientation="Horizontal"
                                    VerticalAlignment="Center"
                                    Margin="5,0,0,0"
                                    ToolBar.OverflowMode="Never"
                                    Width="80"
                                    RenderTransform="1.0,0,0,0.5,0,4"
                                    Minimum="-5" 
                                    Maximum="5" 
                                    Value="{Binding Path=SpeedFactorExponent, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                    IsSnapToTickEnabled="True" 
                                    TickFrequency="0.1"
                            />
                    
                    <TextBox x:Name="SpeedBox" MinWidth="80"
                            VerticalAlignment="Center"
                            Margin="2,0,5,0"
                            Validation.ErrorTemplate="{StaticResource validationErrorTemplate}"
                            >

                        <TextBox.Text>
                            <Binding ElementName="SpeedSlider" Path="Value" StringFormat="{}{0:F3}" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay">
                                <Binding.ValidationRules>
                                    <local:SpeedFactorValidator></local:SpeedFactorValidator>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>

                    </TextBox>

                </ToolBar>
            </ToolBarTray>
        </shared:PixelSnapper>

        <!-- StatusBar -->
        <shared:PixelSnapper DockPanel.Dock="Bottom">
            <StatusBar x:Name="statusBar" Padding="0,2,0,0">
                <StatusBarItem x:Name="statusBarMessagePanel" Content="Ready:  Protocol" />
                <Button x:Name="ReturnToProtocolButton" Margin="20,0" Visibility="Collapsed" Click="ReturnToProtocolButton_Click"
                        Background="{shared:LinearGradientBrush #FF549EF4, #FFBFD8F4, GradientType=TopToBottom}" >Return to protocol</Button>
            </StatusBar>
        </shared:PixelSnapper>

        <!-- Main Window panels layout grid -->

        <!-- DockSite -->
        <docking:DockSite x:Name="dockSite" 
                          CanDocumentWindowsRaft="True"
                          AreDocumentWindowsDestroyedOnClose="False"
                          UseHostedAutoHidePopups="False"
                          AutomationProperties.AutomationId="DaphneDockSite"
                          >            

            <docking:SplitContainer x:Name="ProtocolSplitContainer">
                
                <!-- Workbench Tab control -->
                <docking:ToolWindowContainer docking:DockSite.ControlSize="560,1" x:Name="ProtocolToolWindowContainer" AutomationProperties.AutomationId="DaphneLeftTWContainer">
                    <local:ToolWinBase x:Name="ProtocolToolWindow"/>
                </docking:ToolWindowContainer>

                <!-- Right-hand content containers -->
                <docking:SplitContainer Orientation="Vertical">

                    <docking:SplitContainer.Resources>
                        <DataTemplate x:Key="cellTabTemplate">
                            <Grid>
                                <!--<Border BorderThickness="1" CornerRadius="4,4,4,4" BorderBrush="Lime"></Border>-->
                                <!--<Image Source="Images/MyGreenCells.bmp" />-->
                                <TextBlock Text="Cells Store" />
                            </Grid>
                        </DataTemplate>

                        <DataTemplate x:Key="renderTabTemplate">
                            <Grid>
                                <!--<Border BorderThickness="1" CornerRadius="4,4,4,4" BorderBrush="Lime"></Border>-->
                                <!--<Image Source="Images/MyGreenCells.bmp" />-->
                                <TextBlock Text="Render Scheme" />
                            </Grid>
                        </DataTemplate>

                        <DataTemplate x:Key="plotTabTemplate">
                            <Grid>
                                <TextBlock Text="Cell Dynamics" />
                            </Grid>
                        </DataTemplate>

                    </docking:SplitContainer.Resources>
                    
                    <!-- VTK Windows Forms Host panel -->
                    <!-- Workspace -->
                    <docking:Workspace>
                        <docking:TabbedMdiHost x:Name="tabbedMdiHost">
                            <docking:TabbedMdiContainer Name="MdiTabContainer" Background="LightGray">
                                <docking:DocumentWindow x:Name="VTKDisplayDocWindow" Title="3D View" TabBorderThickness="1" TabBorderBrush="Beige"
                                    Visibility="{Binding ElementName=mainWindow, Path=ToolWinType, Converter={StaticResource ToolwinComponentVisibilityConverter}, 
                                    ConverterParameter=VTKDisplayDocWindow}">
                                    <DockPanel Grid.Row="0" x:Name="vtkDisplay_DockPanel" Visibility="{Binding ElementName=VTKDisplayDocWindow, Path=Visibility}">
                                        <DockPanel.Resources>
                                            <!-- Gray out button images when toolbar is disabled -->
                                            <Style TargetType="{x:Type Image}" x:Key="toolbarImageStyle">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}, AncestorLevel=1}, Path=IsEnabled}" Value="False">
                                                        <Setter Property="Opacity" Value="0.25"></Setter>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                            <Style TargetType="{x:Type Image}" x:Key="toolbarTBImageStyle">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}, AncestorLevel=1}, Path=IsEnabled}" Value="False">
                                                        <Setter Property="Opacity" Value="0.25"></Setter>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                            <Style TargetType="{x:Type Image}" x:Key="toolbarPlayButtonImageStyle">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}, AncestorLevel=1}, Path=IsEnabled}" Value="False">
                                                        <Setter Property="Opacity" Value="0.25"></Setter>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </DockPanel.Resources>

                                        <ToolBarTray DockPanel.Dock="Top">
                                            <ToolBar Name="Tools_Toolbar"
                                                IsEnabled="{Binding ToolsToolbar_IsEnabled}"
                                                RenderOptions.BitmapScalingMode="NearestNeighbor">
                                                <ToggleButton Name="WhArrowToolButton" 
                                                    IsChecked="{Binding WhArrowToolButton_IsChecked}" 
                                                    IsEnabled="{Binding WhArrowToolButton_IsEnabled}"
                                                    ToolBar.OverflowMode="AsNeeded" ToolTip="Navigation tool" ToolTipService.ShowOnDisabled="True">
                                                    <Image Source="Images/cursors_wh_arrow.png" Style="{StaticResource toolbarTBImageStyle}"/>
                                                </ToggleButton>
                                                <ToggleButton Name="HandToolButton" 
                                                          IsChecked="{Binding HandToolButton_IsChecked}" 
                                                          IsEnabled="{Binding HandToolButton_IsEnabled}"
                                                          ToolBar.OverflowMode="AsNeeded" ToolTip="Cell selection tool" ToolTipService.ShowOnDisabled="True">
                                                    <Image Source="Images/cursors_hand.png" Style="{StaticResource toolbarTBImageStyle}" DataContext="{Binding}" />
                                                </ToggleButton>
                                                <ContentControl>
                                                    
                                                    <StackPanel Orientation="Vertical">
                                                        <!--This is a hidden check box but we use it to figure out if tracks are active or not-->
                                                        <CheckBox x:Name="chkTracks" IsChecked="{Binding Path=TracksActive}" Visibility="Collapsed"/>
                                                        <ComboBox x:Name="ToolModesCombo" Margin="5,3,0,0" Grid.Row="1" Grid.Column="0" BorderThickness="1" BorderBrush="Black"
                                                              Height="26"
                                                              Background="{shared:LinearGradientBrush #EEEEEE, #CCCCCC, GradientType=TopLeftToBottomRight}"
                                                              HorizontalAlignment="Left" 
                                                              ItemsSource="{Binding Path=CellSelectionToolModes}"
                                                              IsEnabled="{Binding HandToolOption_IsEnabled}"
                                                              SelectionChanged="CellSelectionToolCB_SelectionChanged"
                                                              SelectedIndex="0" 
                                                              MinWidth="50"
                                                              ToolTip="White hand mode">

                                                            <!--For disabling combo box item-->
                                                            <ComboBox.Resources>
                                                                <local:ComboboxDisableMultiConverter x:Key="itemDisableMultiConverter"/>
                                                            </ComboBox.Resources>
                                                            
                                                            <ComboBox.ItemContainerStyle>
                                                                <Style TargetType="ComboBoxItem">
                                                                    <Setter Property="IsEnabled" Value="True"/>
                                                                        <Style.Triggers>
                                                                            <DataTrigger Value="False">
                                                                                <DataTrigger.Binding>
                                                                                    <MultiBinding Converter="{StaticResource itemDisableMultiConverter}">
                                                                                            <Binding Path="Content" RelativeSource="{RelativeSource Self}"/>
                                                                                            <Binding ElementName="chkTracks" Path="IsChecked" />
                                                                                    </MultiBinding>
                                                                                </DataTrigger.Binding>
                                                                                <Setter Property="IsEnabled" Value="False"></Setter>
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </ComboBox.ItemContainerStyle>

                                                        </ComboBox>
                                                    </StackPanel>
                                                </ContentControl>
                                                <Separator ToolBar.OverflowMode="AsNeeded"/>

                                                <Grid>
                                                    <Expander x:Name="CellOptionsExpander"
                                                              ExpandDirection="Down" 
                                                              MinWidth="112"
                                                              IsExpanded="False"
                                                              Header="Cell Options"
                                                              Margin="4,4,0,0" 
                                                              Canvas.ZIndex="1"
                                                              BorderThickness="1"
                                                              BorderBrush="Black"
                                                              Background="{shared:LinearGradientBrush #EEEEEE, #CCCCCC, GradientType=TopLeftToBottomRight}"
                                                              Expanded="CellOptionsExpander_Expanded"
                                                                >
                                                    </Expander>
                                                    <Popup x:Name="CellOptionsPopup"  AllowsTransparency="True" PopupAnimation="Fade"
                                                           PlacementTarget="{Binding ElementName=CellOptionsExpander}" Placement="Bottom" 
                                                           IsOpen="{Binding ElementName=CellOptionsExpander, Path=IsExpanded}"
                                                           ComboBox.SelectionChanged="CellsColorByCB_SelectionChanged"
                                                           CheckBox.Checked="CellRenderOnOffChanged"
                                                           CheckBox.Unchecked="CellRenderOnOffChanged"
                                                           >
                                                        <StackPanel Orientation="Vertical">
                                                            <local:CellOptions DataContext="{Binding ElementName=ComponentsToolWindow, Path=DataContext}"
                                                                               Tag="{Binding ElementName=vtkDisplay_DockPanel, Path=DataContext}"/>
                                                        </StackPanel>
                                                    </Popup>
                                                </Grid>

                                                <Grid>
                                                    <Expander x:Name="ECMOptionsExpander"
                                                              MinWidth="114"
                                                              ExpandDirection="Down" 
                                                              IsExpanded="False"
                                                              Header="ECM Options"
                                                              Margin="4,4,0,0" 
                                                              Canvas.ZIndex="1"
                                                              BorderThickness="1"
                                                              BorderBrush="Black"
                                                              Background="{shared:LinearGradientBrush #EEEEEE, #CCCCCC, GradientType=TopLeftToBottomRight}"
                                                              Expanded="ECMOptionsExpander_Expanded"
                                                            >
                                                    </Expander>
                                                    <Popup x:Name="ECMOptionsPopup"  AllowsTransparency="False"
                                                           PlacementTarget="{Binding ElementName=ECMOptionsExpander}" 
                                                           Placement="Bottom" 
                                                           IsOpen="{Binding ElementName=ECMOptionsExpander, Path=IsExpanded}"
                                                           CheckBox.Checked="MolPopRenderOnOffChanged"
                                                           CheckBox.Unchecked="MolPopRenderOnOffChanged"
                                                           >
                                                        <StackPanel Orientation="Vertical">
                                                            <local:ECMMolecules DataContext="{Binding ElementName=ComponentsToolWindow, Path=DataContext}" 
                                                                                Tag="{Binding ElementName=vtkDisplay_DockPanel, Path=DataContext}"/>
                                                        </StackPanel>
                                                    </Popup>
                                                </Grid>

                                                <Slider x:Name="ColorMapScaleFactorSlider"
                                                        Visibility="{Binding ColorScaleSlider_IsEnabled}"
                                                        Value="{Binding ColorScaleMaxFactor}"
                                                        Orientation="Horizontal"
                                                        VerticalAlignment="Center"
                                                        ToolBar.OverflowMode="AsNeeded"
                                                        Width="50"
                                                        RenderTransform="1.0,0,0,0.5,0,6"
                                                        Minimum="0.01" 
                                                        Maximum="1"
                                                        KeyboardNavigation.IsTabStop="False"
                                                        >
                                                </Slider>
                                                <TextBlock ToolBar.OverflowMode="AsNeeded" 
                                                            VerticalAlignment="Center"
                                                            Margin="2,0,5,0"
                                                            Visibility="{Binding ColorScaleSlider_IsEnabled}"
                                                            Text="{Binding ColorScaleMaxFactor, StringFormat={}{0:F2}, Mode=OneWay}"
                                                            />
                                               
                                                <ToggleButton Name="OrientationMarkerButton" Margin="6,0"
                                                        IsChecked="{Binding OrientationMarker_IsChecked}" 
                                                        ToolTip="Show orientation axes marker" ToolTipService.ShowOnDisabled="True">
                                                    <Image Source="Images/pqShowOrientationAxes24.png" Width="24" Style="{StaticResource toolbarTBImageStyle}" />
                                                </ToggleButton>
                                                <ToggleButton Name="ResetCameraButton" 
                                                        IsChecked="{Binding ResetCamera_IsChecked}" 
                                                        ToolTip="Reset camera" ToolTipService.ShowOnDisabled="True">
                                                    <Image Source="Images/pqResetCamera24.png" Width="24" Style="{StaticResource toolbarTBImageStyle}" />
                                                </ToggleButton>
                                                <Separator ToolBar.OverflowMode="Never"/>
                                                <ToggleButton Name="BackgroundButton" 
                                                        IsChecked="{Binding BackgroundButton_IsChecked}" 
                                                        Click="BackgroundButton_Click"
                                                        ToolTip="Choose background" ToolTipService.ShowOnDisabled="True">
                                                    <Image Source="Images/bucket.png" Width="24"  Height="24" Style="{StaticResource toolbarTBImageStyle}" />
                                                </ToggleButton>
                                                <uc:GreyScaleColorPicker Margin="2,0"  x:Name="bgPicker" Visibility="Collapsed"  VerticalAlignment="Bottom" MaxWidth="110"  
                                                                             SelectedColor="{Binding Path=CurrentColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                                             />
                                                <Separator ToolBar.OverflowMode="Never" />
                                                <Button Content="Export" Height="24" HorizontalAlignment="Left" Margin="2,0,0,0" Name="save3DView" VerticalAlignment="Center" Width="52" Visibility="Visible" IsEnabled="True" Click="save3DView_Click"/>                                                
                                            </ToolBar>
                                        </ToolBarTray>

                                        <!-- VTK render window -->
                                        <ContentPresenter MinHeight="100" Content="{Binding Wfh}" />
                                    </DockPanel>
                                </docking:DocumentWindow>
                                <local:ComponentsToolWindow x:Name="ComponentsToolWindow" DataContext="MainWindow.SOP.Protocol"  Title="Subcellular Components Store" ClipToBounds="True" TabBorderThickness="1" TabBorderBrush="Beige"  
                                    Visibility="{Binding ElementName=mainWindow, Path=ToolWinType, Converter={StaticResource ToolwinComponentVisibilityConverter}, 
                                    ConverterParameter=ComponentsToolWindow}" />                                
                                <local:CellStudioToolWindow x:Name="CellStudioToolWindow" Title="Cells Store" HeaderTemplate="{Binding Source={StaticResource cellTabTemplate}}" ClipToBounds="True" TabBorderThickness="1" TabBorderBrush="Beige"                         
                                    Visibility="{Binding ElementName=mainWindow, Path=ToolWinType, Converter={StaticResource ToolwinComponentVisibilityConverter}, 
                                    ConverterParameter=CellStudioToolWindow}"/>
                                <work:ChartViewToolWindow x:Name="ReacComplexChartWindow" Title="Reaction Complex Results" ClipToBounds="True" TabBorderThickness="1" TabBorderBrush="Beige" 
                                    Visibility="{Binding ElementName=mainWindow, Path=ToolWinType, Converter={StaticResource ToolwinComponentVisibilityConverter}, 
                                    ConverterParameter=ReacComplexChartWindow}" />
                                <local:RenderSkinWindow x:Name="renderSkinWindow" Title="Render Scheme"
                                       HeaderTemplate="{Binding Source={StaticResource renderTabTemplate}}" ClipToBounds="True" TabBorderThickness="1" TabBorderBrush="Beige" 
                                       Visibility="{Binding ElementName=mainWindow, Path=ToolWinType, Converter={StaticResource ToolwinComponentVisibilityConverter}, 
                                       ConverterParameter=renderSkinWindow}"      />
                                <plot:CellPopDynToolWindow x:Name="plotToolWindow" Title="Cell Dynamics" Visibility="Visible"
                                       ClipToBounds="True" TabBorderThickness="1" TabBorderBrush="Beige"
                                       HeaderTemplate="{Binding Source={StaticResource plotTabTemplate}}"     />
                                <lin:CellLineageControl x:Name="lineageWindow" Title="Cell Lineage" Visibility="Visible"
                                                        ClipToBounds="True" TabBorderThickness="1" TabBorderBrush="Beige"  />

                                <!--DataContext="{Binding Path=MainWindow.SOP.Protocol.scenario}"-->

                            </docking:TabbedMdiContainer>
                        </docking:TabbedMdiHost>
                    </docking:Workspace>

                    <!-- skg 8/12/12 Cell Molecular Info -->
                    <docking:ToolWindowContainer x:Name="Tool1" docking:DockSite.ControlSize="1,260" >
                        <docking:ToolWindow x:Name="ToolWinCellInfo" Title="Cell Data" >
                            <ScrollViewer VerticalScrollBarVisibility="Auto" >
                                <StackPanel>
                                <shared:PixelSnapper DockPanel.Dock="Top">
                                    <ToolBarTray>
                                        <ToolBar Name="CellInfoToolbar" RenderOptions.BitmapScalingMode="NearestNeighbor" Height="30">
                                            <StackPanel Orientation="Horizontal" Grid.Row="0" Grid.Column="0">
                                                <Label FontSize="12" FontFamily="Verdana" FontWeight="Bold" Width="60" Height="24" Margin="20,2">Cell Id:</Label>
                                                <TextBox x:Name="txtCellIdent" FontSize="12" FontFamily="Verdana" FontWeight="Bold" Text="" Height="24" Width="50" Margin="20,2"></TextBox>
                                                <Button x:Name="btnShowCellInfoById" Margin="20,0" Height="24" Width="80" Click="btnShowCellInfoById_Click">Update</Button>
                                            </StackPanel>
                                        </ToolBar>
                                    </ToolBarTray>
                                </shared:PixelSnapper>

                                <Grid x:Name="CellInfoGrid">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                        <TabControl x:Name="CellInfoTabControl" Grid.Row="0" Grid.Column="0" TabStripPlacement="Bottom"  >

                                            <TabItem Header="Molecular" x:Name="TabItemMolConcs" >
                                            <StackPanel>
                                                <TextBlock x:Name="tbMolConcs" TextAlignment="Left"></TextBlock>
                                                    <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto" />
                                                        <ColumnDefinition Width="Auto" />
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="32*"/>
                                                        <RowDefinition Height="32*" />
                                                    </Grid.RowDefinitions>                                                    
                                                </Grid>
                                                    <Grid>
                                                    <ListView x:Name="lvCellMolConcs" Margin="0,4"
                                                      MinHeight="100" MaxHeight="150" >
                                                        <ListView.View>
                                                            <GridView>
                                                                <GridView.ColumnHeaderContainerStyle>
                                                                    <Style TargetType="GridViewColumnHeader">
                                                                        <Setter Property="Height" Value="Auto"></Setter>
                                                                        <Setter Property="Background">
                                                                            <Setter.Value>
                                                                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                                                    <GradientStop Offset="0.0" Color="White" />
                                                                                    <GradientStop Offset="1.0" Color="Beige" />
                                                                                </LinearGradientBrush>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </GridView.ColumnHeaderContainerStyle>

                                                                <GridViewColumn Width="120" Header="Molecule">
                                                                    <GridViewColumn.CellTemplate>
                                                                        <DataTemplate>
                                                                            <TextBlock Text="{Binding Path=Molecule}"></TextBlock>
                                                                        </DataTemplate>
                                                                    </GridViewColumn.CellTemplate>
                                                                </GridViewColumn>
                                                                <GridViewColumn Width="120" Header="Concentration">
                                                                    <GridViewColumn.CellTemplate>
                                                                        <DataTemplate>
                                                                            <uc:DoublesBox SliderEnabled="False" DecimalPlaces="2" ZeroEpsilon="0.000001"  IsReadOnly="True" Number="{Binding Path=Concentration}"></uc:DoublesBox>
                                                                        </DataTemplate>
                                                                    </GridViewColumn.CellTemplate>
                                                                </GridViewColumn>

                                                                <GridViewColumn Width="100" Header="Gradient X">
                                                                    <GridViewColumn.CellTemplate>
                                                                        <DataTemplate>
                                                                            <uc:DoublesBox SliderEnabled="False" DecimalPlaces="2" IsReadOnly="True" SNUpperThreshold="1000"  Number="{Binding Path=Gradient[0]}"></uc:DoublesBox>
                                                                        </DataTemplate>
                                                                    </GridViewColumn.CellTemplate>
                                                                </GridViewColumn>
                                                                <GridViewColumn Width="100" Header="Gradient Y" >
                                                                    <GridViewColumn.CellTemplate>
                                                                        <DataTemplate>
                                                                            <uc:DoublesBox SliderEnabled="False" DecimalPlaces="2" IsReadOnly="True" SNUpperThreshold="1000"  Number="{Binding Path=Gradient[1]}"></uc:DoublesBox>
                                                                        </DataTemplate>
                                                                    </GridViewColumn.CellTemplate>
                                                                </GridViewColumn>
                                                                <GridViewColumn Width="100" Header="Gradient Z">
                                                                    <GridViewColumn.CellTemplate>
                                                                        <DataTemplate>
                                                                            <uc:DoublesBox SliderEnabled="False" DecimalPlaces="2" IsReadOnly="True" SNUpperThreshold="1000"  Number="{Binding Path=Gradient[2]}"></uc:DoublesBox>
                                                                        </DataTemplate>
                                                                    </GridViewColumn.CellTemplate>
                                                                </GridViewColumn>

                                                            </GridView>
                                                        </ListView.View>
                                                    </ListView>
                                                </Grid>
                                            </StackPanel>
                                        </TabItem>
                                        <TabItem Header="Spatial" x:Name="TabItemCellInfo" DataContext="MainWindow">
                                            <StackPanel>
                                                <!--<TextBlock x:Name="tbCellConc" TextAlignment="Left"></TextBlock>-->
                                                    <TextBlock TextAlignment="Left" Text ="{Binding ElementName=tbMolConcs, Path=Text}" />
                                                    <ListView x:Name="lvCellXVF" Margin="0,4"
                                                      MinHeight="100" MaxHeight="150"
                                                    >
                                                    <ListView.View>
                                                        <GridView>
                                                            <GridView.ColumnHeaderContainerStyle>
                                                                <Style TargetType="GridViewColumnHeader">
                                                                    <Setter Property="Height" Value="Auto"></Setter>
                                                                    <Setter Property="Background">
                                                                        <Setter.Value>
                                                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                                                <GradientStop Offset="0.0" Color="White" />
                                                                                <GradientStop Offset="1.0" Color="Beige" />
                                                                            </LinearGradientBrush>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </GridView.ColumnHeaderContainerStyle>

                                                            <GridViewColumn Width="120" Header="Property">
                                                                <GridViewColumn.CellTemplate>
                                                                    <DataTemplate>
                                                                        <TextBlock Text="{Binding Path=name}"></TextBlock>
                                                                    </DataTemplate>
                                                                </GridViewColumn.CellTemplate>
                                                            </GridViewColumn>
                                                            <GridViewColumn Width="100" Header="X">
                                                                <GridViewColumn.CellTemplate>
                                                                    <DataTemplate>
                                                                        <uc:DoublesBox SliderEnabled="False" DecimalPlaces="2" IsReadOnly="True" SNUpperThreshold="1000"  Number="{Binding Path=x}"></uc:DoublesBox>
                                                                    </DataTemplate>
                                                                </GridViewColumn.CellTemplate>
                                                            </GridViewColumn>
                                                            <GridViewColumn Width="100" Header="Y" >
                                                                <GridViewColumn.CellTemplate>
                                                                    <DataTemplate>
                                                                        <uc:DoublesBox SliderEnabled="False" DecimalPlaces="2" IsReadOnly="True" SNUpperThreshold="1000"  Number="{Binding Path=y}"></uc:DoublesBox>
                                                                    </DataTemplate>
                                                                </GridViewColumn.CellTemplate>
                                                            </GridViewColumn>
                                                            <GridViewColumn Width="100" Header="Z">
                                                                <GridViewColumn.CellTemplate>
                                                                    <DataTemplate>
                                                                        <uc:DoublesBox SliderEnabled="False" DecimalPlaces="2" IsReadOnly="True" SNUpperThreshold="1000"  Number="{Binding Path=z}"></uc:DoublesBox>
                                                                    </DataTemplate>
                                                                </GridViewColumn.CellTemplate>
                                                            </GridViewColumn>
                                                        </GridView>
                                                    </ListView.View>
                                                </ListView>
                                            </StackPanel>

                                        </TabItem>
                                        <TabItem Header="Differentiation" x:Name="TabItemCellDiff" >
                                            <StackPanel>
                                                <StackPanel Orientation="Horizontal">
                                                        <!--<TextBlock x:Name="tbMolConcs" TextAlignment="Left"></TextBlock>-->
                                                        <TextBlock TextAlignment="Left" Margin="0,4" Text ="{Binding ElementName=tbMolConcs, Path=Text}" />
                                                        <TextBlock Margin="40,4">Current State:</TextBlock>
                                                        <TextBox x:Name="txtCellState" Width="200" Margin="10,0" IsReadOnly="True"></TextBox>
                                                </StackPanel>
                                                <ListView x:Name="lvCellDiff" Margin="0,4"
                                                      MinHeight="100" MaxHeight="150"
                                                    >
                                                    <ListView.View>
                                                        <GridView>
                                                            <GridView.ColumnHeaderContainerStyle>
                                                                <Style TargetType="GridViewColumnHeader">
                                                                    <Setter Property="Height" Value="Auto"></Setter>
                                                                    <Setter Property="Background">
                                                                        <Setter.Value>
                                                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                                                <GradientStop Offset="0.0" Color="White" />
                                                                                <GradientStop Offset="1.0" Color="Beige" />
                                                                            </LinearGradientBrush>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </GridView.ColumnHeaderContainerStyle>

                                                            <GridViewColumn Width="120" Header="Gene">
                                                                <GridViewColumn.CellTemplate>
                                                                    <DataTemplate>
                                                                        <TextBlock Text="{Binding Path=Name}"></TextBlock>
                                                                    </DataTemplate>
                                                                </GridViewColumn.CellTemplate>
                                                            </GridViewColumn>

                                                            <GridViewColumn Width="150" Header="Gene Activation Levels">
                                                                <GridViewColumn.CellTemplate>
                                                                    <DataTemplate>
                                                                        <uc:DoublesBox SliderEnabled="False" DecimalPlaces="2" IsReadOnly="True" SNUpperThreshold="1000"  Number="{Binding Path=Activation}"></uc:DoublesBox>
                                                                    </DataTemplate>
                                                                </GridViewColumn.CellTemplate>
                                                            </GridViewColumn>

                                                        </GridView>
                                                    </ListView.View>
                                                </ListView>
                                            </StackPanel>
                                        </TabItem>
                                        <TabItem Header="Division" x:Name="TabItemCellDiv" >
                                            <StackPanel>
                                                <StackPanel Orientation="Horizontal">
                                                    <!--<TextBlock TextAlignment="Left"></TextBlock>-->
                                                        <TextBlock TextAlignment="Left" Margin="0,4" Text ="{Binding ElementName=tbMolConcs, Path=Text}" />
                                                        <TextBlock Margin="40,4">Current State:</TextBlock>
                                                        <TextBox x:Name="txtDivCellState" Width="200" Margin="10,0" IsReadOnly="True"></TextBox>
                                                        <TextBlock Margin="10,4">Generation:</TextBlock>
                                                        <TextBox x:Name="txtDivCellGen" Width="200" Margin="10,0" IsReadOnly="True"></TextBox>
                                                </StackPanel>
                                                <ListView x:Name="lvCellDiv" Margin="0,4"
                                                      MinHeight="100" MaxHeight="150"
                                                    >
                                                    <ListView.View>
                                                        <GridView>
                                                            <GridView.ColumnHeaderContainerStyle>
                                                                <Style TargetType="GridViewColumnHeader">
                                                                    <Setter Property="Height" Value="Auto"></Setter>
                                                                    <Setter Property="Background">
                                                                        <Setter.Value>
                                                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                                                <GradientStop Offset="0.0" Color="White" />
                                                                                <GradientStop Offset="1.0" Color="Beige" />
                                                                            </LinearGradientBrush>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </GridView.ColumnHeaderContainerStyle>

                                                            <GridViewColumn Width="120" Header="Gene">
                                                                <GridViewColumn.CellTemplate>
                                                                    <DataTemplate>
                                                                        <TextBlock Text="{Binding Path=Name}"></TextBlock>
                                                                    </DataTemplate>
                                                                </GridViewColumn.CellTemplate>
                                                            </GridViewColumn>

                                                            <GridViewColumn Width="150" Header="Gene Activation Levels">
                                                                <GridViewColumn.CellTemplate>
                                                                    <DataTemplate>
                                                                        <uc:DoublesBox SliderEnabled="False" DecimalPlaces="2" IsReadOnly="True" SNUpperThreshold="1000"  Number="{Binding Path=Activation}"></uc:DoublesBox>
                                                                    </DataTemplate>
                                                                </GridViewColumn.CellTemplate>
                                                            </GridViewColumn>

                                                        </GridView>
                                                    </ListView.View>
                                                </ListView>
                                            </StackPanel>
                                        </TabItem>
                                        <TabItem Header="Time Trajectory" x:Name="TabItemTimeTraj" Visibility="Hidden">
                                            <Grid>
                                                <WindowsFormsHost Margin="21" x:Name="winFormsHostTimeTraj" >
                                                    <wf:Panel x:Name="pChartTimeTraj" Visible="True"/>
                                                </WindowsFormsHost>
                                            </Grid>
                                        </TabItem>
                                    </TabControl>
                                </Grid>
                                </StackPanel>
                            </ScrollViewer>
                        </docking:ToolWindow>
                    </docking:ToolWindowContainer>
                </docking:SplitContainer>
                
            </docking:SplitContainer>
        </docking:DockSite>
    </DockPanel>
</Window>
