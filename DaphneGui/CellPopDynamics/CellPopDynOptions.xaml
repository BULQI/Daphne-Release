<UserControl x:Class="DaphneGui.CellPopDynamics.CellPopDynOptions"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:shared="http://schemas.actiprosoftware.com/winfx/xaml/shared"
             xmlns:local="clr-namespace:DaphneGui.CellPopDynamics"
             mc:Ignorable="d" 
             >
             <!--d:DesignHeight="300" d:DesignWidth="300"-->

    <UserControl.Resources>
        <local:plotStateToBoolConverter x:Key="plotStateToBoolConv" />
    </UserControl.Resources>
    
    <!-- ************************************************  -->
    <StackPanel x:Name="PlotMainStackPanel" Orientation="Vertical" >       
        <!-- Plot options by Cell -->
        <Expander ExpandDirection="Down" Padding="5"
                            IsExpanded="True"
                            Header="Plot options by cell state"
                            Margin="0,4,0,0" 
                            Canvas.ZIndex="1"
                            BorderThickness="1"
                            BorderBrush="Black"
                            Background="{shared:LinearGradientBrush #EEEEEE, #CCCCCC, GradientType=TopLeftToBottomRight}"
                            >
            <StackPanel>
                <StackPanel.Resources>
                    <!--<Style x:Key="gridcellstyle1" TargetType="{x:Type DataGridCell}">
                        <Style.Triggers>
                            <Trigger Property="Tag" Value="{x:Null}">
                                <Setter Property="Background" Value="LightGray" />
                                <Setter Property="IsEnabled" Value="False"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>-->
                    <Style x:Key="plotCheckBoxStyle" TargetType="{x:Type CheckBox}">
                        <Setter Property="HorizontalAlignment" Value="Center"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type DataGridCell}}, Path=Tag}" Value="{x:Null}">
                                <Setter Property="IsEnabled" Value="True"/>
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>

                    <DataTemplate x:Key="statesListItemTemplate">
                        <StackPanel Orientation="Horizontal">
                            <TextBox Width="200" MinWidth="100" Text="{Binding Path=name, Mode=OneWay}" Margin="5,0,0,0"/>
                            <CheckBox Margin="10,0" IsChecked="{Binding Path=plot, Mode=OneWay}" />
                        </StackPanel>
                    </DataTemplate>

                    <Style x:Key="checkboxstyle2" TargetType="{x:Type CheckBox}">
                        <Setter Property="HorizontalAlignment" Value="Center"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type DataGridCell}}, Path=Tag}" Value="{x:Null}">
                                <Setter Property="IsEnabled" Value="False"/>
                                <Setter Property="Visibility" Value="Hidden" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>

                </StackPanel.Resources>
                <ListBox x:Name="lbPlotCellPops" Height="300" MinHeight="100"
                                ItemsSource="{Binding Path=cellpopulations}" 
                                SelectedIndex="0"
                                DisplayMemberPath="cellpopulation_name"
                                Loaded="lbPlotCellPops_Loaded"
                                SelectionChanged="lbPlotCellPops_SelectionChanged"
                            />

                <!-- Death State -->
                <Expander ExpandDirection="Down" Padding="5"
                                IsExpanded="True"
                                Header="Death State"
                                Margin="0,4,0,0" 
                                Canvas.ZIndex="1"
                                BorderThickness="1"
                                BorderBrush="Black"
                                Background="{shared:LinearGradientBrush #EEEEEE, #CCCCCC, GradientType=TopLeftToBottomRight}"
                                >
                    <StackPanel>

                        <DataGrid x:Name="deathStatesGrid" AutoGenerateColumns="False" 
                                        ItemsSource="{Binding ElementName=lbPlotCellPops, Path=SelectedItem.Cell.death_driver.plotStates}"
                                        SelectedItem="0"
                                        MinRowHeight="20" MinColumnWidth="90" ColumnWidth="100" MaxColumnWidth="200" 
                                        CanUserReorderColumns="False" CanUserResizeRows="False"
                                        CanUserSortColumns="False" 
                                        VerticalContentAlignment="Center"
                                        CanUserAddRows="False"
                                        BorderThickness="1"
                                        BorderBrush="Black"    
                                        LoadingRow="deathStatesGrid_LoadingRow"
                                        >

                            <DataGrid.ColumnHeaderStyle>
                                <Style TargetType="DataGridColumnHeader" >
                                    <Setter Property="FontSize" Value="12" />
                                    <Setter Property="Height" Value="24" />
                                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                                    <Setter Property="BorderThickness" Value="1" />
                                    <Setter Property="BorderBrush" Value="Black" />
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                <GradientStop Offset="0.0" Color="White" />
                                                <GradientStop Offset="1.0" Color="Beige" />
                                            </LinearGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </DataGrid.ColumnHeaderStyle>

                            <DataGrid.Columns>
                                <DataGridTemplateColumn Width="20" Header="Plot" >
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox  IsChecked="{Binding Path=.}" Click="DeathCheckBox_Click" HorizontalAlignment="Center"
                                                       /> 
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                
                            </DataGrid.Columns>

                            <DataGrid.RowHeaderStyle>
                                <Style TargetType="{x:Type DataGridRowHeader}" >
                                    <Setter Property="BorderBrush" Value="LightGray"/>
                                    <Setter Property="Visibility"  Value="Visible" />
                                    <Style.Triggers>
                                        <Trigger Property="IsRowSelected" Value="True">
                                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.RowHeaderStyle>

                            <DataGrid.RowHeaderTemplate>
                                <DataTemplate>
                                    <TextBox Text="{Binding Content}" MinWidth="100" Width="Auto" IsReadOnly="True" />
                                </DataTemplate>
                            </DataGrid.RowHeaderTemplate>
                        </DataGrid>
                    </StackPanel>
                </Expander>

                <!-- Differentiation State -->
                <Expander ExpandDirection="Down" Padding="5"
                            IsExpanded="False"
                            Header="Differentiation State"
                            Margin="0,4,0,0" 
                            Canvas.ZIndex="1"
                            BorderThickness="1"
                            BorderBrush="Black"
                            Background="{shared:LinearGradientBrush #EEEEEE, #CCCCCC, GradientType=TopLeftToBottomRight}"
                            >
                    <StackPanel>

                        <DataGrid x:Name="diffStatesGrid" AutoGenerateColumns="False"    
                                        ItemsSource="{Binding ElementName=lbPlotCellPops, Path=SelectedItem.Cell.diff_scheme.Driver.plotStates}"  
                                        MinRowHeight="20" MinColumnWidth="90" ColumnWidth="100" MaxColumnWidth="200" 
                                        CanUserReorderColumns="False" CanUserResizeRows="False"
                                        CanUserSortColumns="False" 
                                        VerticalContentAlignment="Center"
                                        CanUserAddRows="False"
                                        BorderThickness="1"
                                        BorderBrush="Black" 
                                        LoadingRow="diffStatesGrid_LoadingRow"
                                    >

                            <DataGrid.ColumnHeaderStyle>
                                <Style TargetType="DataGridColumnHeader" >
                                    <Setter Property="FontSize" Value="12" />
                                    <Setter Property="Height" Value="24" />
                                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                                    <Setter Property="BorderThickness" Value="1" />
                                    <Setter Property="BorderBrush" Value="Black" />
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                <GradientStop Offset="0.0" Color="White" />
                                                <GradientStop Offset="1.0" Color="Beige" />
                                            </LinearGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </DataGrid.ColumnHeaderStyle>

                            <DataGrid.Columns>
                          
                                <DataGridTemplateColumn Width="20" Header="Plot" >
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox  IsChecked="{Binding Path=.}" HorizontalAlignment="Center"
                                                       Click="DiffCheckBox_Click"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                            </DataGrid.Columns>

                            <DataGrid.RowHeaderStyle>
                                <Style TargetType="{x:Type DataGridRowHeader}" >
                                    <Setter Property="BorderBrush" Value="LightGray"/>
                                    <Setter Property="Visibility"  Value="Visible" />
                                    <Style.Triggers>
                                        <Trigger Property="IsRowSelected" Value="True">
                                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.RowHeaderStyle>

                            <DataGrid.RowHeaderTemplate>
                                <DataTemplate>
                                    <TextBox Text="{Binding Content}" MinWidth="100" Width="Auto" IsReadOnly="True" />
                                </DataTemplate>
                            </DataGrid.RowHeaderTemplate>
                        </DataGrid>
                    </StackPanel>
                </Expander>

                <!-- Division State -->
                <Expander ExpandDirection="Down" Padding="5"
                            IsExpanded="False"
                            Header="Division State"
                            Margin="0,4,0,0" 
                            Canvas.ZIndex="1"
                            BorderThickness="1"
                            BorderBrush="Black"
                            Background="{shared:LinearGradientBrush #EEEEEE, #CCCCCC, GradientType=TopLeftToBottomRight}"
                            >
                    <StackPanel>
                       
                        <DataGrid x:Name="divStatesGrid" AutoGenerateColumns="False" 
                                        ItemsSource="{Binding ElementName=lbPlotCellPops, Path=SelectedItem.Cell.div_scheme.Driver.plotStates, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  
                                        SelectedIndex="0"
                                        MinRowHeight="20" MinColumnWidth="90" ColumnWidth="100" MaxColumnWidth="200" 
                                        CanUserReorderColumns="False" CanUserResizeRows="False"
                                        CanUserSortColumns="False" 
                                        VerticalContentAlignment="Center"
                                        CanUserAddRows="False"
                                        BorderThickness="1"
                                        BorderBrush="Black" 
                                        LoadingRow="divStatesGrid_LoadingRow"
                                        >

                            <DataGrid.ColumnHeaderStyle>
                                <Style TargetType="DataGridColumnHeader" >
                                    <Setter Property="FontSize" Value="12" />
                                    <Setter Property="Height" Value="24" />
                                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                                    <Setter Property="BorderThickness" Value="1" />
                                    <Setter Property="BorderBrush" Value="Black" />
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                <GradientStop Offset="0.0" Color="White" />
                                                <GradientStop Offset="1.0" Color="Beige" />
                                            </LinearGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </DataGrid.ColumnHeaderStyle>

                            <DataGrid.Columns>

                                <DataGridTemplateColumn Width="20" Header="Plot" >
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox  IsChecked="{Binding Path=.}" HorizontalAlignment="Center"
                                                       Click="DivCheckBox_Click"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                            </DataGrid.Columns>

                            <DataGrid.RowHeaderStyle>
                                <Style TargetType="{x:Type DataGridRowHeader}" >
                                    <Setter Property="BorderBrush" Value="LightGray"/>
                                    <Setter Property="Visibility"  Value="Visible" />
                                    <Style.Triggers>
                                        <Trigger Property="IsRowSelected" Value="True">
                                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.RowHeaderStyle>

                            <DataGrid.RowHeaderTemplate>
                                <DataTemplate>
                                    <TextBox Text="{Binding Content}" MinWidth="100" Width="Auto" IsReadOnly="True" />
                                </DataTemplate>
                            </DataGrid.RowHeaderTemplate>
                        </DataGrid>
                    </StackPanel>
                </Expander>


            </StackPanel>
        </Expander>

    </StackPanel>
</UserControl>
