<UserControl x:Class="DaphneGui.CellPopControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:daph="clr-namespace:Daphne;assembly=Daphne"
             xmlns:uc="clr-namespace:DaphneUserControlLib;assembly=DaphneUserControlLib"
             xmlns:local="clr-namespace:DaphneGui"
             Loaded="UserControl_Loaded"
             xmlns:shared="http://schemas.actiprosoftware.com/winfx/xaml/shared"
             xmlns:editors="http://schemas.actiprosoftware.com/winfx/xaml/editors"
             mc:Ignorable="d"
             x:Name="cellPopControl"
             >
    <Grid>
        
        <Grid.Resources>

            <local:CellPopulationToSolidBrushConv x:Key="CellPopulationToSolidBrushConv" />
            
            <CollectionViewSource x:Key="cellTypesListView" Source="{Binding Path=Protocol.entity_repository.cells}"/>
            
            <CollectionViewSource x:Key="ggBoxSpecsListView" Source="{Binding Path=scenario.box_specifications}"/>
            
            <!-- cellPopListItemTemplate -->
            <DataTemplate x:Key="cellPopListItemTemplate">
                <StackPanel Orientation="Horizontal">
                    <Rectangle Width="10" Height="10"
                                Margin="5,0,0,0"
                                VerticalAlignment="Center"
                                Fill="{Binding Converter={StaticResource CellPopulationToSolidBrushConv}}"
                                Stroke="Black" StrokeThickness="0.5"/>

                    <TextBlock Text="{Binding Path=cellpopulation_name}" Margin="5,0,0,0" MinHeight="20"/>

                    <StackPanel Orientation="Horizontal">

                    </StackPanel>

                </StackPanel>
            </DataTemplate>
            

            <!-- cellPopDistributionTypeTemplate -->
            <DataTemplate x:Key="cellPopDistributionTypeTemplate">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding Converter={StaticResource CellPopDistTypeEnumConv}}"/>
                </StackPanel>
            </DataTemplate>

            <!-- cellPopDistributionType -->
            <ObjectDataProvider x:Key="cellPopDistributionTypes"
                    MethodName="GetValues" 
                    ObjectType="{x:Type sys:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="daph:CellPopDistributionType" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>

            <!-- cellPopDistributionDetailsTemplate -->
            <DataTemplate x:Key="cellPopDistributionDetailsTemplate">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="70" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <ContentControl Name="cp_dist"
                                    Grid.ColumnSpan="2" Grid.Row="0"
                                    Margin="0,6"
                                    BorderBrush="DarkGray" BorderThickness="1"
                                    Content="{Binding Path=cellPopDist}"   />
                </Grid>
            </DataTemplate>

            <!-- Style for eyeball visibility checkboxes in list views -->
            <Style x:Key="EyeballCheckboxStyle" TargetType="CheckBox">
                <Setter Property="SnapsToDevicePixels" Value="true"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <Grid Width="13" Height="13">
                                <Image x:Name="_image" Source="Images/cartoonEyeClosed.png" Opacity="0.6"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="_image" Property="Source" Value="Images/cartoonEyeOpen.png"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="_image" Property="Opacity" Value="0.2" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Gaussian Box Specification : gaussBoxSpecDetailsTemplate  - cannot go in Dictionary1 -->
            <DataTemplate x:Key="gaussBoxSpecDetailsTemplate">
                <Grid Margin="0,6">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="30" />
                        <ColumnDefinition Width="44" />
                        <ColumnDefinition Width="74" />
                        <ColumnDefinition Width="44" />
                        <ColumnDefinition Width="74" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <StackPanel Grid.Column="0" Grid.Row="0" Orientation="Horizontal">
                        <Grid  VerticalAlignment="Center">
                            <Rectangle Fill="White"
                                       Stroke="Black"
                                       StrokeThickness="0.5"
                                       Width="15"
                                       Height="15"
                                       />
                            <CheckBox x:Name="box_widget_on_checkbox"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                        Style="{StaticResource EyeballCheckboxStyle}"
                                        IsChecked="{Binding Path=box_spec.current_box_visibility}"                                      
                                        />
                        </Grid>
                        <Grid VerticalAlignment="Center">
                            <Rectangle Fill="LightPink"
                                   Stroke="Black"
                                   StrokeThickness="0.5"
                                   Width="15"
                                   Height="15"
                                   />
                            <!--Click="gaussian_region_actor_checkbox_clicked"-->
                            <CheckBox x:Name="gauss_blob_on_checkbox"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                    Style="{StaticResource EyeballCheckboxStyle}"
                                    IsChecked="{Binding Path=current_gaussian_region_visibility}"                        
                                      CommandParameter="{Binding}"
                                    />
                        </Grid>
                    </StackPanel>
                    <TextBlock Text="center (µm)" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="0" Margin="5,4" HorizontalAlignment="Right"/>
                    <TextBlock Text="std. dev. (µm)" Grid.Column="3" Grid.ColumnSpan="2" Grid.Row="0" Margin="3,4" HorizontalAlignment="Right"/>
                    <TextBlock Text="X" Grid.Column="0" Grid.Row="2" Margin="2,0" TextAlignment="Right"/>
                    <uc:DoublesBox x:Name="dbl_x_trans"
                                   Grid.Column="1" Grid.Row="2" Grid.ColumnSpan="2"   
                                   TextFieldWidth="70"
                                   SliderWidth="40"
                                   RangeFactor="1"
                                   DecimalPlaces="2"     
                                   Number="{Binding Path=box_spec.x_trans, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                   >

                    </uc:DoublesBox>
                    <uc:DoublesBox x:Name="dbl_x_scale"
                                   Grid.Column="3" Grid.Row="2" Grid.ColumnSpan="2"   
                                   TextFieldWidth="70"
                                   SliderWidth="40"
                                   RangeFactor="1"
                                   DecimalPlaces="2"
                                   Number="{Binding Path=box_spec.half_x_scale, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                   >

                    </uc:DoublesBox>

                    <TextBlock Text="Y" Grid.Column="0" Grid.Row="3" Margin="2,0" TextAlignment="Right" />
                    <uc:DoublesBox x:Name="dbl_y_trans"
                                   Grid.Column="1" Grid.Row="3" Grid.ColumnSpan="2"   
                                   TextFieldWidth="70"
                                   SliderWidth="40"
                                   RangeFactor="1"
                                   DecimalPlaces="2"
                                   Number="{Binding Path=box_spec.y_trans, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                   >

                    </uc:DoublesBox>

                    <uc:DoublesBox x:Name="dbl_y_scale"
                                   Grid.Column="3" Grid.Row="3"   Grid.ColumnSpan="2" 
                                   TextFieldWidth="70"
                                   SliderWidth="40"
                                   RangeFactor="1"
                                   DecimalPlaces="2"
                                   Number="{Binding Path=box_spec.half_y_scale, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                   >

                    </uc:DoublesBox>

                    <TextBlock Text="Z" Grid.Column="0" Grid.Row="4" Margin="2,0" TextAlignment="Right" />
                    <uc:DoublesBox x:Name="dbl_z_trans"
                                   Grid.Column="1" Grid.Row="4"  Grid.ColumnSpan="2"  
                                   TextFieldWidth="70"
                                   SliderWidth="40"
                                   RangeFactor="1"
                                   DecimalPlaces="2"
                                   Number="{Binding Path=box_spec.z_trans, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                   >

                    </uc:DoublesBox>
                    <uc:DoublesBox x:Name="dbl_z_scale"
                                   Grid.Column="3" Grid.Row="4"  Grid.ColumnSpan="2"  
                                   TextFieldWidth="70"
                                   SliderWidth="40"
                                   RangeFactor="1"
                                   DecimalPlaces="2"
                                   Number="{Binding Path=box_spec.half_z_scale, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                   >

                    </uc:DoublesBox>

                </Grid>
            </DataTemplate>

            <!-- cellpop distribution type: CellPopSpecific -->
            <DataTemplate DataType="{x:Type daph:CellPopSpecific}">
                <StackPanel x:Name="panelCoordinates" Grid.Row="1" Grid.Column="0">
                </StackPanel>
            </DataTemplate>

            <!-- cellpop distribution type: CellPopUniform -->
            <DataTemplate DataType="{x:Type daph:CellPopUniform}">
                <StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock>Number of cells:</TextBlock>
                        <TextBox IsReadOnly="True" IsEnabled="False" Width="50" Margin="8,-2" Text="{Binding ElementName=numberBox, Path=Value}"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock>These cells will be evenly distributed.</TextBlock>
                    </StackPanel>
                </StackPanel>
            </DataTemplate>
            
            <!-- cellpop distribution type: CellPopGaussian -->
            <DataTemplate DataType="{x:Type daph:CellPopGaussian}">
                <StackPanel Orientation="Vertical">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="70" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                    </Grid>
                    <!-- ListView as level of indirection for getting to the correct BoxSpec -->
                    <ListView x:Name="cellPopGaussianBoxSpecsListView"
                                ItemsSource="{Binding Source={StaticResource ggBoxSpecsListView}}"
                                DisplayMemberPath="box_guid"
                                SelectedValue="{Binding Path=gauss_spec, Mode=OneWay}"
                                SelectedValuePath="box_spec"
                                Visibility="Collapsed"
                                />
                    <!--Content="{Binding ElementName=cellPopGaussianBoxSpecsListView, Path=SelectedItem}"-->
                    <ContentControl Name="GaussianBoxSpecDetails"
                                    Content="{Binding Path=gauss_spec}"  
                                    HorizontalAlignment="Center"
                                    ContentTemplate="{StaticResource gaussBoxSpecDetailsTemplate}" 
                                    Margin="0,2"/>
                </StackPanel>
            </DataTemplate>

            <!-- cellPopDetailsTemplate: Context CellPopulation? -->
            <DataTemplate x:Key="cellPopDetailsTemplate">
                <StackPanel>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="70" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <TextBlock Text="name" Margin="6,0"
                                    Grid.Column="0" Grid.Row="1"  
                                    HorizontalAlignment="Right" VerticalAlignment="Center" />
                        <TextBox Text="{Binding Path=cellpopulation_name, UpdateSourceTrigger=PropertyChanged}"
                                 Grid.Column="1" Grid.Row="1"  Margin="0,2"   />

                        <TextBlock Text="cell type" Margin="6,0"
                                        Grid.Column="0" Grid.Row="0"  
                                        HorizontalAlignment="Right" VerticalAlignment="Center"  />

                        <ComboBox x:Name="cell_type_combo_box"
                                    Grid.Column="1" Grid.Row="0" Margin="0,2"
                                    MinWidth="80"
                                    DisplayMemberPath="CellName"
                                    SelectionChanged="cell_type_combo_box_SelectionChanged"
                                    SelectedValue="{Binding Path=Cell.entity_guid, UpdateSourceTrigger=Explicit}"
                                    SelectedValuePath="entity_guid">

                            <ComboBox.ItemsSource>
                                <CompositeCollection>
                                    <CollectionContainer Collection="{Binding Source={StaticResource cellTypesListView}}" />
                                    <daph:ConfigCell CellName="New Cell Type"/>
                                </CompositeCollection>
                            </ComboBox.ItemsSource>

                        </ComboBox>

                        <TextBlock Text="number" Margin="6,0"
                                        Grid.Column="0" Grid.Row="3"  
                                        HorizontalAlignment="Right" VerticalAlignment="Center"  />
                        <StackPanel Orientation="Horizontal"
                                    Grid.Column="1" Grid.Row="3"
                                    Margin="0,4">
                            <Slider x:Name="number_slider"
                                    Orientation="Horizontal"
                                    VerticalAlignment="Center"
                                    Width="100"
                                    RenderTransform="1.0,0,0,0.5,0,6"
                                    Minimum="1" 
                                    Maximum="10000" 
                                    Value="{Binding Path=number, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                    IsSnapToTickEnabled="True" 
                                    TickFrequency="1" 
                                    KeyboardNavigation.IsTabStop="False"
                                    />

                            <editors:Int32EditBox CheckBoxVisibility="Collapsed" 
                                    SpinnerVisibility="Collapsed"
                                    HorizontalAlignment="Right"
                                    Format="N0"
                                    StepValue="10"
                                    Width="50" 
                                    CenterSlotHorizontalAlignment="Right"
                                    Value="{Binding ElementName=number_slider, Path=Value}"
                                    x:Name="numberBox"
                                    ValueChanged="numberBox_ValueChanged"
                                    />
                        </StackPanel>
                    </Grid>
                    <Grid>
                        <Expander ExpandDirection="Down" Padding="6" IsExpanded="False" Margin="0,-10,0,0"  Canvas.ZIndex="1"  
                                Header="Cell Placement Method"
                                x:Name="CPMExpander"
                                >

                            <StackPanel Orientation="Vertical">
                                <StackPanel Orientation="Vertical">
                                    <StackPanel>
                                        <StackPanel Orientation="Horizontal" Margin="8,0">

                                            <ComboBox x:Name="cbCellLocationType" Margin="0,4" Width="200" HorizontalAlignment="Left"
                                                ItemsSource="{Binding Source={StaticResource cellPopDistributionTypes}}"
                                                ItemTemplate="{Binding Source={StaticResource cellPopDistributionTypeTemplate}}"
                                                SelectedValue="{Binding Path=cellPopDist.DistType, Mode=OneWay}"
                                                SelectionChanged="cbCellLocationType_SelectionChanged">
                                            </ComboBox>

                                            <Button x:Name="btnRegenerateCellPositions" Height="22" Margin="8,0" Click="btnRegenerateCellPositions_Click" Content="Reset">
                                                <Button.Style>
                                                    <Style TargetType="Button">
                                                        <Setter Property="Visibility" Value="Hidden"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding ElementName=cbCellLocationType, Path=SelectedIndex}" Value="1">
                                                                <Setter Property="Visibility" Value="Visible"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding ElementName=cbCellLocationType, Path=SelectedIndex}" Value="2">
                                                                <Setter Property="Visibility" Value="Visible"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Button.Style>

                                                <Button.ToolTip>
                                                    <ToolTip>
                                                        <StackPanel Width="200" Orientation="Horizontal">
                                                            <TextBlock TextWrapping="Wrap" HorizontalAlignment="Left" 
                                                                        VerticalAlignment="Top" Padding="5" Width="200">
                                                                    Clicking this button will re-generate the cell positions for
                                                                    Uniform and Gaussian placement methods.
                                                            </TextBlock>
                                                        </StackPanel>
                                                    </ToolTip>
                                                </Button.ToolTip>
                                            </Button>

                                            
                                        </StackPanel>
                                        <StackPanel Orientation="Vertical" Margin="16,0">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                </Grid.RowDefinitions>

                                                <StackPanel Grid.Column="0" Grid.Row="0">
                                                    <ContentControl Name="cellPopDistrib"
                                                        Content="{Binding ElementName=CellPopsListBox, Path=SelectedItem}" 
                                                        ContentTemplate="{StaticResource cellPopDistributionDetailsTemplate}" 
                                                        Margin="6,2"/>
                                                </StackPanel>

                                                <StackPanel  Margin="0,6,0,0" Grid.Column="0" Grid.Row="1" Orientation="Vertical">
                                                    <Expander ExpandDirection="Down" Padding="6" IsExpanded="False" Margin="0,-10,0,0"  Canvas.ZIndex="1"  
                                                        Header="Actual Cell Locations"
                                                        x:Name="LocationsExpander"
                                                        >
                                                        <StackPanel Orientation="Vertical" Margin="10,0">
                                                            <DataGrid x:Name="dgLocations" ItemsSource="{Binding ElementName=CellPopsListBox, Path=SelectedItem.CellStates, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                                    MinRowHeight="20" MinColumnWidth="20" ColumnWidth="60" MaxColumnWidth="80" MaxHeight="220"
                                                                    CanUserReorderColumns="False" CanUserResizeRows="False" CanUserSortColumns="False" RowHeaderWidth="0"
                                                                    VerticalContentAlignment="Center" CanUserAddRows="False" BorderThickness="1" BorderBrush="Black"
                                                                    KeyDown="dgLocations_KeyDown"
                                                                    SourceUpdated="dgLocations_Unloaded"
                                                                    LostFocus="dgLocations_CheckPositions"
                                                                    VirtualizingStackPanel.VirtualizationMode="Standard"
                                                                    >
                                                            <DataGrid.ContextMenu>
                                                                <ContextMenu >
                                                                    <MenuItem Header="Paste" Name="menuCoordinatesPaste" Click="menuCoordinatesPaste_Click"></MenuItem>
                                                                </ContextMenu>
                                                            </DataGrid.ContextMenu>

                                                            <DataGrid.ColumnHeaderStyle>
                                                                <Style TargetType="DataGridColumnHeader" >
                                                                    <Setter Property="FontSize" Value="12" />
                                                                    <Setter Property="Height" Value="24" />
                                                                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                                                                    <Setter Property="BorderThickness" Value="1" />
                                                                    <Setter Property="BorderBrush" Value="Black" />
                                                                    <Setter Property="Background">
                                                                        <Setter.Value>
                                                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                                                <GradientStop Offset="0.0" Color="White" />
                                                                                <GradientStop Offset="1.0" Color="Beige" />
                                                                            </LinearGradientBrush>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </DataGrid.ColumnHeaderStyle>
                                                            <DataGrid.Columns>
                                                                <DataGridTextColumn Header="Cell"  Width="40" IsReadOnly="True"
                                                                ScrollViewer.CanContentScroll ="False"
                                                                Binding="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Converter={local:RowToIndexConverter}}" 
                                                            />

                                                            </DataGrid.Columns>

                                                        </DataGrid>
                                                        </StackPanel>
                                                    </Expander>
                                                </StackPanel>
                                            </Grid>

                                        </StackPanel>
                                    </StackPanel>
                                </StackPanel>
                            </StackPanel>
                        </Expander>
                    </Grid>
                </StackPanel>
            </DataTemplate>

            <!-- Color field template -->
            <!-- CellPopsListBox -->
            <DataTemplate x:Key="colorItemTemplate">
                <StackPanel Orientation="Horizontal">

                    <Rectangle Width="10" Height="10" Margin="4,0" Stroke="Black" StrokeThickness="0.5"   >
                        <Rectangle.Style>
                            <Style TargetType="Rectangle">
                                <Setter Property="Fill" Value="{Binding Converter={StaticResource ColorListToBrushConv}}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding}" Value="7">
                                        <Setter Property="Fill" Value="{Binding ElementName=CellPopsListBox, Path=SelectedItem.cellpopulation_color, Converter={StaticResource colorToSolidBrushConv}}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Rectangle.Style>

                    </Rectangle>
                    <TextBlock Width="40" Text="{Binding}" Margin="5,0,0,0"/>
                </StackPanel>
            </DataTemplate>

        </Grid.Resources>
     
        <StackPanel>
            
            <Expander ExpandDirection="Down" Padding="5" MaxHeight="600"
                    IsExpanded="True"
                    Header="Populations"
                    x:Name="CellPopsExpander"
                    Margin="0,4,0,0" 
                    Canvas.ZIndex="1"
                    BorderThickness="1"
                    BorderBrush="Black"
                    Background="{shared:LinearGradientBrush #EEEEEE, #CCCCCC, GradientType=TopLeftToBottomRight}"
                    >
                <ScrollViewer x:Name="scrollViewer" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" Margin="0,0,0,20" >
                    <StackPanel>
                        <!-- CELL POPULATIONS -->
                        <ListBox x:Name="CellPopsListBox"  
                            ItemsSource="{Binding Path=Protocol.scenario.cellpopulations, UpdateSourceTrigger=PropertyChanged}" 
                            ItemTemplate="{Binding Source={StaticResource cellPopListItemTemplate}}"
                            SelectedIndex="-1"
                            SelectionChanged="cellPopsListBoxSelChanged"
                            MinHeight="20"
                                                 />
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Canvas.ZIndex="10">
                            <Button Name="AddCellPopButton"  Width="50" Content="Add" Click="AddCellPopButton_Click"/>
                            <Button Name="RemoveCellPopButton" Width="50" Content="Remove" Click="RemoveCellPopButton_Click" />
                        </StackPanel>

                        <!-- Cell populations details -->
                        <Expander ExpandDirection="Down" Padding="6"
                                    IsExpanded="False"
                                    Header="Population Details"
                                    x:Name="CellPopsDetailsExpander"
                                    Margin="0,-15,0,0" 
                                    Canvas.ZIndex="1"
                                    >

                            <StackPanel Orientation="Horizontal">
                                <StackPanel HorizontalAlignment="Left">
                                    <ContentControl Name="CellPopDetails"
                                                Content="{Binding ElementName=CellPopsListBox, Path=SelectedItem}" 
                                                ContentTemplate="{StaticResource cellPopDetailsTemplate}" 
                                                Margin="6,0"/>
                                </StackPanel>

                            </StackPanel>
                        </Expander>
                    </StackPanel>
                </ScrollViewer>

            </Expander>

        </StackPanel>

    </Grid>
</UserControl>
